' Gambas class file

' GambasCAD
' A simple CAD made in Gambas
'
' Copyright (C) Ing Martin P Cristia
'
' This program is free software; you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation; either version 3 of the License, or
' (at your option) any later version.
'
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
'
' You should have received a copy of the GNU General Public License
' along with this program; if not, write to the Free Software
' Foundation, Inc., 51 Franklin St, Fifth Floor,
' Boston, MA  02110-1301  USA

Inherits ToolsBase
Create Static
Public Const Gender As String = "BREAK"

Public Offset As Float
Private EntitySelected As Entity
' Workflow
'   1 Select entity
'   2 If entity is valid to offset, select point to split it
'   3 Goto 1

Public Function Start(Optional ElemToBuild As Variant, Optional _Mode As Integer = 0) As Boolean
    ' Llamada por FCAD al inicio de la aplicacion de esta herramienta

    ' Aprovechamos para establecer los helpers (comentarios de ayuda en pantalla)
    Me.PointsDone = 0
    Me.PointsTotal = 2

    Me.Prompt = ("Break") & " "

    ' chequeamos si hubo seleccion previa

    If gcd.Drawing.Sheet.EntitiesSelected.Count <> 1 Then
        clsEntities.DeSelection()
        Me.Prompt &= ": " & ("Select only one entity")
        gcd.clsJobCallBack = Me
        gcd.clsJob = cadSelection
        cadSelection.Prompt = Me.Prompt
        cadSelection.ReturnOnFirstSelection = True
        gcd.clsJob.start()

    Else
        ' verificamos si la entidad puede ser partida

        EntitySelected = gcd.Drawing.Sheet.EntitiesSelected[gcd.Drawing.Sheet.EntitiesSelected.First]
        Select Case EntitySelected.Gender
            Case "LINE", "LWPOLYLINE", "CIRCLE", "ARC", "ELLIPSE", "SPLINE"
                Me.Prompt = ("Break") & " " & ("Breakpoint of entity")
                Me.PointsDone = 1
            Case Else
                EntitySelected = Null
                DrawingAIds.ErrorMessage = ("Can't break that entity")
        End Select

    Endif

End

Public Function MouseUp()

    ' Dim d, dx, dy, m1, m2 As Float
    Dim flxIntersec As Float[]
    Dim e, e2 As Entity

    Me.SelStartXr = gcd.Xreal(mouse.x)
    Me.SelStartYr = gcd.Yreal(mouse.y)

    ' si llegue aca es porque ya tengo una entidad seleccionada

    ' verifico que este sobre la entidad a romper
    If Me.PointsDone = 1 Then

        If gcd.Drawing.HoveredEntity <> EntitySelected Then ' el mouse se fue de la entidad a romper
            DrawingAIds.ErrorMessage = ("InvalId breakpoint")
            Return
        End If
        ' FIXME error
        e = EntitySelected       ' esto lo hago para reducir el largo del codigo
        Select Case e.Gender
            Case "LINE"
                flxIntersec = clsMouseTracking.GetNearestPoint(e, Me.SelStartXr, Me.SelStartYr)

                ' ahora tengo que partir la entidad, pero puede ocurrir que el punto sea uno de los dos endpoints
                If (flxIntersec[0] = e.P[0] And flxIntersec[1] = e.P[1]) Or (flxIntersec[0] = e.P[2] And flxIntersec[1] = e.P[3]) Then
                    DrawingAIds.ErrorMessage = ("InvalId breakpoint")
                    Return
                Endif

                ' entonces parto la entidad
                e2 = clsEntities.ClonEntity(e)          ' primero la clono
                e2.P[2] = flxIntersec[0]                ' corrijo los puntos
                e2.P[3] = flxIntersec[1]
                Gcd.CCC[e2.gender].finish(e2)
                ' la agrego al dibujo
                gcd.Drawing.Sheet.Entities.Add(e2, e2.Id)

                e.P[0] = flxIntersec[0]                ' y ahora recorto la entidad original
                e.P[1] = flxIntersec[1]
                gcd.CCC[e.gender].finish(e)                ' para regenerar los POI

                ' regenro las listas openGL de ambas entidades
                clsEntities.glGenDrawList(e)
                clsEntities.glGenDrawList(e2)

                Me.Finish

            Case Else
                Me.iEntitySelected = -1
                DrawingAIds.ErrorMessage = ("Can't break that entity")
        End Select

        ' punto real base
        Me.SelStartXr = gcd.Xreal(mouse.x)
        Me.SelStartYr = gcd.Yreal(mouse.y)
    End If

End
