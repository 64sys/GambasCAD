' Gambas class file

' GambasCAD
' A simple CAD made in Gambas
'
' Copyright (C) Ing Martin P Cristia
'
' This program is free software; you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation; either version 3 of the License, or
' (at your option) any later version.
'
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
'
' You should have received a copy of the GNU General Public License
' along with this program; if not, write to the Free Software
' Foundation, Inc., 51 Franklin St, Fifth Floor,
' Boston, MA  02110-1301  USA

Inherits ToolsBase
Public Const Gender As String = "MTEXTS"

Public StepsDone As Integer
Public RectSelected As Boolean

Public UserResponse As Integer  ' 1 = Cancel ; 2 =
Public sText As String
Public eMtext As Entity

Public Function Start(Optional filename As Variant, _mode As Integer = 0) As Boolean

    Dim xf As String[]
    Dim f As String
    Dim iREt, nsel, i As Integer
    Dim eBorder As Entity
    Dim p, p2 As Pattern
    Dim hp As HatchPattern
    Dim h As Hatch
    Dim c, s, x, y As Float

    ' desde el grafico entramos siempre a esta parte de la clase
    ' yo tengo q saber el estado de la comunicacion con el user
    ' entonces verifico

    Me.sText = ""
    Me.Active = False
    Me.RectSelected = False

    Select Case StepsDone
        Case 0
            eMtext = cadMText.NewEntity()

            fMText.Show

    End Select

End

Public Sub MouseUp()

    If Mouse.Right Then
        gcd.clsJob.KeyText("U")
        Return
    End If

    If Me.Active Then ' ya tengo un punto

        Me.Active = False
        Me.RectSelected = True
    Else
        Me.Active = True
        Me.RectSelected = False
        Me.SelStartXr = Me.LastX
        Me.SelStartYr = Me.LastY

        Me.SelEndXr = Me.SelStartXr
        Me.SelEndyr = Me.SelStartYr

    End If
    eMtext.p[0] = Me.SelStartXr
    eMtext.p[1] = Me.SelStartYr

End

Public Sub MouseMove()

    Super.MouseMove()

    If Me.Active Then

        Me.SelEndXr = Me.LastX
        Me.SelEndyr = Me.LastY

    End If
    eMtext.p[0] = Me.SelStartXr
    eMtext.p[1] = Me.SelStartYr

End

Public Sub KeyPress(iCode As Integer, sKey As String)

    If skey <> "" Then
        sText &= sKey

    Else

        Select Case iCode
            Case Key.Backspace
                If Len(sText) > 0 Then sText = Left(sText, -1)

        End Select

    End If

    'MakeMtext
    gcd.redraw

End

Public Sub Draw()

    Dim fSide, fWidth As Float

    fSide = gcd.Metros(8)
    ' Select Case StepsDone
    '     Case 0 ' nada aun
    fWidth = eMtext.fParam[cadMText.ipaRectangleWIdth]
    glx.DrawLines([eMtext.p[0], eMtext.p[1], eMtext.p[0] + fWidth, eMtext.p[1]], Color.Blue)
    glx.Rectangle2D(eMtext.p[0] - fSide / 2, eMtext.p[1] - fSide / 2, fSide, fside, Color.DarkBlue,,,, Color.DarkBlue, 1,, 1)
    glx.Rectangle2D(eMtext.p[0] + fWidth - fSide / 2, eMtext.p[1] - fSide / 2, fSide, fside, Color.Cyan,,,, Color.DarkBlue, 1,, 1)
    cadMText.Draw(eMtext)
    '     Case 1 ' ya ubique el punto inicial
    '         fWidth = gcd.Metros(30)
    '         glx.DrawLines([Me.SelStartXr, Me.SelStartYr, Me.SelEndXr + fWidth, Me.SelStartYr], Color.Blue)
    '         glx.Rectangle2D(Me.SelStartXr - fSide / 2, Me.SelStartYr - fSide / 2, fSide, fside, Color.DarkBlue,,,, Color.DarkBlue, 1,, 1)
    '         glx.Rectangle2D(Me.SelStartXr + fWidth - fSide / 2, Me.SelEndyr - fSide / 2, fSide, fside, Color.Cyan,,,, Color.DarkBlue, 1,, 1)
    '
    ' End Select

    ' If Me.Active Then
    '
    '     glx.DrawLines([Me.SelStartXr, Me.SelStartYr, Me.SelEndXr, Me.SelEndyr], Color.Blue)
    '     glx.Rectangle2D(Me.SelStartXr - fSide / 2, Me.SelStartYr - fSide / 2, fSide, fside, Color.DarkBlue,,,, Color.DarkBlue, 1,, 1)
    '     glx.Rectangle2D(Me.SelEndXr - fSide / 2, Me.SelEndyr - fSide / 2, fSide, fside, Color.Cyan,,,, Color.DarkBlue, 1,, 1)
    '
    ' Else If Me.RectSelected Then
    '     'glx.Rectangle2D(Me.SelStartXr, Me.SelStartYr, Me.SelEndXr - Me.SelStartXr, Me.SelEndyr - Me.SelStartYr, Color.Blue,,,, Color.DarkBlue, 1,, 2)
    '     cadMText.Draw(eMtext)
    ' End If

End
