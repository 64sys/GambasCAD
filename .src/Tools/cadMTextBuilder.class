' Gambas class file

' GambasCAD
' A simple CAD made in Gambas
'
' Copyright (C) Ing Martin P Cristia
'
' This program is free software; you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation; either version 3 of the License, or
' (at your option) any later version.
'
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
'
' You should have received a copy of the GNU General Public License
' along with this program; if not, write to the Free Software
' Foundation, Inc., 51 Franklin St, Fifth Floor,
' Boston, MA  02110-1301  USA

Inherits ToolsBase
Public Const Gender As String = "MTEXTS"

Public StepsDone As Integer
Public RectSelected As Boolean

Public UserResponse As Integer  ' 1 = Cancel ; 2 =
Public sText As String
Public eMtext As Entity

Public Function Start(Optional filename As Variant, _mode As Integer = 0) As Boolean

    Dim xf As String[]
    Dim f As String
    Dim iREt, nsel, i As Integer
    Dim eBorder As Entity
    Dim p, p2 As Pattern
    Dim hp As HatchPattern
    Dim h As Hatch
    Dim c, s, x, y As Float

    ' desde el grafico entramos siempre a esta parte de la clase
    ' yo tengo q saber el estado de la comunicacion con el user
    ' entonces verifico

    Me.sText = ""
    Me.Active = False
    Me.RectSelected = False


    Select Case StepsDone
        Case 0
            eMtext = cadMText.NewEntity()
            fMText.Show

            '     Debug gcd.Drawing.LastHatchFile
            '
            '     Select Case iRet
            '         Case 2 ' busqueda de contorno
            '             gcd.clsJobPrevious = Me
            '             gcd.clsJob = cadSelection
            '
            '             gcd.Drawing.Sheet.GlSheet.PopupMenu = ""
            '
            '             StepsDone = 1 ' cuando vuelvo aca, ya tengo un contorno
            '
            '         Case 1 ' el user cancelo el hetch
            '             gcd.clsJobPrevious = Me
            '             gcd.clsJob = cadSelection
            '             StepsDone = 0 ' cuando vuelvo aca, empiezo de nuevo
            '
            '     End Select
            '
            ' Case 1 ' vengo de seleccionar los parametros de hatch
            '
            '     nSel = gcd.Drawing.EntitiesSelected.Count
            '     If nsel = 0 Then Return
            '     If (gcd.Drawing.EntitiesSelected[gcd.Drawing.EntitiesSelected.First].Gender <> "LWPOLYLINE") And (gcd.Drawing.EntitiesSelected[gcd.Drawing.EntitiesSelected.First].PolyLine.Count < 6) Then
            '         Message("El contorno esta mal definido")
            '
            '     Else
            '         StepsDone = 2
            '         iRet = FHatch.Showmodal()
            '
            '         Debug gcd.Drawing.LastHatchFile
            '
            '         Select Case iRet
            '             Case 2 ' nueva busqueda de contorno
            '                 gcd.clsJobPrevious = Me
            '                 gcd.clsJob = cadSelection
            '                 StepsDone = 1 ' cuando vuelvo aca, ya tengo un contorno
            '
            '             Case 1 ' el user cancelo el hetch
            '                 gcd.clsJobPrevious = Me
            '                 gcd.clsJob = cadSelection
            '                 StepsDone = 0 ' cuando vuelvo aca, empiezo de nuevo
            '
            '             Case 3 ' confirma el Hatch
            '
            '                 entHatch = gcd.Drawing.LastEntity
            '                 entHatch.Handle = gcd.NewHandle()
            '                 entHatch.PolyLine.Clear
            '                 entHatch.pBlock.PolyLines.Clear
            '
            '                 For Each eBorder In gcd.Drawing.EntitiesSelected
            '                     Select Case eBorder.Gender  ' veo si me sirve de borde
            '                         Case "LINE"
            '
            '                             entHatch.pBlock.eSegments.Add(eBorder)
            '                         Case "LWPOLYLINE"
            '                             entHatch.pBlock.eSegments.Add(eBorder)
            '                         Case Else
            '
            '                     End Select
            '
            '                 Next
            '
            '
            '
            '
            '
            '                 gcd.Drawing.Entities.Add(entHatch, entHatch.Handle)
            '
            '                 Gcd.CCC[entHatch.gender].Finish(entHatch)
            '
            '                 'LastEntity = entHatch                                       ' save it to repeat on rigth click
            '
            '                 gcd.clsJobPrevious = Me
            '                 gcd.clsJob = cadSelection
            '                 cadSelection.PoiChecking = True
            '                 DrawingAids.CleanTexts
            '
            '                 'clsEntities.GLGenDrawList
            '
            '                 gcd.Regen()
            '                 StepsDone = 0
            '         End Select
            '
            '     Endif

    End Select

End

Public Sub MouseUp()



    If Mouse.Right Then
        gcd.clsJob.KeyText("U")
        Return
    End If





    If Me.Active Then ' ya tengo un punto

        Me.Active = False
        Me.RectSelected = True
    Else
        Me.Active = True
        Me.RectSelected = False
        Me.SelStartXr = Me.LastX
        Me.SelStartYr = Me.LastY

        Me.SelEndXr = Me.SelStartXr
        Me.SelEndyr = Me.SelStartYr

    End If


End

Public Sub MouseMove()

    Super.MouseMove()


    If Me.Active Then

        Me.SelEndXr = Me.LastX
        Me.SelEndyr = Me.LastY



    End If


End

Public Sub KeyPress(iCode As Integer, sKey As String)

    If skey <> "" Then
        sText &= sKey

    Else

        Select Case iCode
            Case Key.Backspace
                If Len(sText) > 0 Then sText = Left(sText, -1)

        End Select

    End If


    MakeMtext
    gcd.redraw


End



Public Sub Draw() ' esta rutina es llamada por FCAD en el evento DrawingArea_Draw
    ' por ultimo, y para que se vea arriba, la seleccion


    If Me.Active Then

        GLplus.Rectangle2D(Me.SelStartXr, Me.SelStartYr, Me.SelEndXr - Me.SelStartXr, Me.SelEndyr - Me.SelStartYr, Color.Cyan,,,, Color.DarkBlue, 1,, 1)

    Else If Me.RectSelected Then
        GLplus.Rectangle2D(Me.SelStartXr, Me.SelStartYr, Me.SelEndXr - Me.SelStartXr, Me.SelEndyr - Me.SelStartYr, Color.Blue,,,, Color.DarkBlue, 1,, 2)
        cadMText.Draw(eMtext)
    End If


End


Public Sub MakeMtext()

    eMtext.fParam[cadMText.ipaTextAngle] = Rad(Val(fMText.txtRot.Text))

    eMtext.fParam[cadMText.ipaTextHeight] = Val(fMText.txtHeight.Text)

    eMtext.fParam[cadMText.ipaRectangleWidth] = Me.SelEndXr - Me.SelStartXr

    eMtext.fParam[cadMText.ipaAttchmPoint] = fMText.cmbAlignment.Index + 1

    eMtext.sParam[cadMText.sdaText] = "\\f" & fMText.cmbFont.Text & "|b0|i0|c128|p34;" & sText

    ' antes de ubicar el texto, acomodamos el recuadro
    If Me.SelStartXr > Me.SelEndXr Then Swap Me.SelStartXr, Me.SelEndXr
    If Me.SelStartyr > Me.SelEndyr Then Swap Me.SelStartyr, Me.SelEndyr


    eMtext.p[0] = Me.SelStartXr
    eMtext.p[1] = Me.SelStartYr

    Select Case eMtext.fParam[cadMText.ipaAttchmPoint]

        Case 1      ' Top/Left
            eMtext.p[0] = Me.SelStartXr
            eMtext.p[1] = Me.SelEndYr
        Case 2      ' Top/Center

            eMtext.p[0] = Me.SelStartXr
            eMtext.p[1] = Me.SelEndYr

        Case 3      ' Top/Right
            eMtext.p[0] = Me.SelStartXr
            eMtext.p[1] = Me.SelEndYr

        Case 4      ' Middle/Left
            eMtext.p[0] = Me.SelStartXr
            eMtext.p[1] = (Me.SelEndYr + Me.SelStartYr) / 2

        Case 5      ' Middle/Center
            eMtext.p[0] = Me.SelStartXr
            eMtext.p[1] = (Me.SelEndYr + Me.SelStartYr) / 2

        Case 6      ' Middle/Right
            eMtext.p[0] = Me.SelStartXr
            eMtext.p[1] = (Me.SelEndYr + Me.SelStartYr) / 2

        Case 7      ' Bottom/Left
            eMtext.p[0] = Me.SelStartXr
            eMtext.p[1] = Me.SelStartYr

        Case 8      ' Bottom/Center
            eMtext.p[0] = Me.SelStartXr
            eMtext.p[1] = Me.SelStartYr

        Case 9      ' Bottom/Right
            eMtext.p[0] = Me.SelStartXr
            eMtext.p[1] = Me.SelStartYr

    End Select






End

