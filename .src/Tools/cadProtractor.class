' Gambas class file

' GambasCAD
' A simple CAD made in Gambas
'
' Copyright (C) Ing Martin P Cristia
'
' This program is free software; you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation; either version 3 of the License, or
' (at your option) any later version.
'
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
'
' You should have received a copy of the GNU General Public License
' along with this program; if not, write to the Free Software
' Foundation, Inc., 51 Franklin St, Fifth Floor,
' Boston, MA  02110-1301  USA

' Tool maintained by Terco
Inherits ToolsBase
Create Static
Public Const Gender As String = "PROTRACTOR"

Private Poli As New Float[]
Private fAngle As Float

Public Function Start(Optional ElemToBuild As Variant, Optional _Mode As Integer = 0) As Boolean
    ' Llamada por FCAD al inicio de la aplicacion de esta herramienta

    Dim i As Integer
    ' Aprovechamos para establecer los helpers (comentarios de ayuda en pantalla)
    Me.PointsDone = 0
    Me.PointsTotal = 1e10

    DrawingAIds.CmdLineHelper = "Protractor: " & ("mark first point")
    Poli.Add(0)
    Poli.Add(0)

    Me.Active = True
    gcd.ToolActive = True

End

Public Sub MouseUp()

    Dim i As Integer

    Inc Me.PointsDone

    Me.SelEndXr = gcd.Near(gcd.Xreal(mouse.x))
    Me.SelEndyr = gcd.Near(gcd.Yreal(mouse.Y))

    Poli[Poli.max - 1] = Me.SelEndXr
    Poli[Poli.max] = Me.SelEndYr

    If Me.PointsDone = 3 Then Me.Finish
    If Me.PointsDone = 2 Then DrawingAIds.CmdLineHelper = "Protractor: " & ("mark center")

    Poli.Add(Me.SelEndXr)
    Poli.Add(Me.SelEndYr)

End

Public Sub MouseMove()

    Dim a1, a2, r As Float

    If Poli.Count = 0 Then Return
    Me.SelEndXr = gcd.Near(gcd.Xreal(mouse.X))
    Me.SelEndyr = gcd.Near(gcd.Yreal(mouse.Y))
    Poli[Poli.max - 1] = Me.SelEndXr
    Poli[Poli.max] = Me.SelEndYr

    If Me.PointsDone = 2 Then

        a1 = Ang(poli[0] - poli[2], poli[1] - poli[3])
        If a1 < 0 Then a1 += 2 * Pi
        a2 = Ang(Me.SelEndXr - poli[2], Me.SelEndYr - poli[3])
        If a2 < 0 Then a2 += 2 * Pi
        r = a2 - a1
        If r < 0 Then r += 2 * Pi
        fAngle = Deg(r)
        DrawingAIds.CmdLineHelper = ("Angle") & " = " & Format(fAngle, Config.FormatInquiries)

    Endif

    gcd.Redraw
    ' fMain.regen

End

Public Sub Draw()               ' called by gcd.CurrDrawing.drwArea_Draw

    glPlus.PolyLines(Poli, Color.DarkBlue, Color.RGB(0, 255, 100, 200))

End


Public Sub Finish()

    Dim i As Integer, ip As Integer, Prot As New Float[]

    gcd.debugInfo(("Angle") & " = " & Format(fAngle, Config.FormatInquiries),, True)

    gcd.clsJobPrevious = Me
    gcd.clsJob = cadSelection
    clsEntities.DeSelection()
    gcd.redraw
    Me.Active = False
    gcd.ToolActive = False

End
