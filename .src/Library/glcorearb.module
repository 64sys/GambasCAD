' Gambas module file

Library "libGL"
Public Const GL_DEPTH_BUFFER_BIT As Integer = &H00000100
Public Const GL_STENCIL_BUFFER_BIT As Integer = &H00000400
Public Const GL_COLOR_BUFFER_BIT As Integer = &H00004000
Public Const GL_FALSE As Integer = 0
Public Const GL_TRUE As Integer = 1
Public Const GL_POINTS As Integer = &H0000
Public Const GL_LINES As Integer = &H0001
Public Const GL_LINE_LOOP As Integer = &H0002
Public Const GL_LINE_STRIP As Integer = &H0003
Public Const GL_TRIANGLES As Integer = &H0004
Public Const GL_TRIANGLE_STRIP As Integer = &H0005
Public Const GL_TRIANGLE_FAN As Integer = &H0006
Public Const GL_QUADS As Integer = &H0007
Public Const GL_NEVER As Integer = &H0200
Public Const GL_LESS As Integer = &H0201
Public Const GL_EQUAL As Integer = &H0202
Public Const GL_LEQUAL As Integer = &H0203
Public Const GL_GREATER As Integer = &H0204
Public Const GL_NOTEQUAL As Integer = &H0205
Public Const GL_GEQUAL As Integer = &H0206
Public Const GL_ALWAYS As Integer = &H0207
Public Const GL_ZERO As Integer = 0
Public Const GL_ONE As Integer = 1
Public Const GL_SRC_COLOR As Integer = &H0300
Public Const GL_ONE_MINUS_SRC_COLOR As Integer = &H0301
Public Const GL_SRC_ALPHA As Integer = &H0302
Public Const GL_ONE_MINUS_SRC_ALPHA As Integer = &H0303
Public Const GL_DST_ALPHA As Integer = &H0304
Public Const GL_ONE_MINUS_DST_ALPHA As Integer = &H0305
Public Const GL_DST_COLOR As Integer = &H0306
Public Const GL_ONE_MINUS_DST_COLOR As Integer = &H0307
Public Const GL_SRC_ALPHA_SATURATE As Integer = &H0308
Public Const GL_NONE As Integer = 0
Public Const GL_FRONT_LEFT As Integer = &H0400
Public Const GL_FRONT_RIGHT As Integer = &H0401
Public Const GL_BACK_LEFT As Integer = &H0402
Public Const GL_BACK_RIGHT As Integer = &H0403
Public Const GL_FRONT As Integer = &H0404
Public Const GL_BACK As Integer = &H0405
Public Const GL_LEFT As Integer = &H0406
Public Const GL_RIGHT As Integer = &H0407
Public Const GL_FRONT_AND_BACK As Integer = &H0408
Public Const GL_NO_ERROR As Integer = 0
Public Const GL_INVALID_ENUM As Integer = &H0500
Public Const GL_INVALID_VALUE As Integer = &H0501
Public Const GL_INVALID_OPERATION As Integer = &H0502
Public Const GL_OUT_OF_MEMORY As Integer = &H0505
Public Const GL_CW As Integer = &H0900
Public Const GL_CCW As Integer = &H0901
Public Const GL_POINT_SIZE As Integer = &H0B11
Public Const GL_POINT_SIZE_RANGE As Integer = &H0B12
Public Const GL_POINT_SIZE_GRANULARITY As Integer = &H0B13
Public Const GL_LINE_SMOOTH As Integer = &H0B20
Public Const GL_LINE_WIDTH As Integer = &H0B21
Public Const GL_LINE_WIDTH_RANGE As Integer = &H0B22
Public Const GL_LINE_WIDTH_GRANULARITY As Integer = &H0B23
Public Const GL_POLYGON_MODE As Integer = &H0B40
Public Const GL_POLYGON_SMOOTH As Integer = &H0B41
Public Const GL_CULL_FACE As Integer = &H0B44
Public Const GL_CULL_FACE_MODE As Integer = &H0B45
Public Const GL_FRONT_FACE As Integer = &H0B46
Public Const GL_DEPTH_RANGE As Integer = &H0B70
Public Const GL_DEPTH_TEST As Integer = &H0B71
Public Const GL_DEPTH_WRITEMASK As Integer = &H0B72
Public Const GL_DEPTH_CLEAR_VALUE As Integer = &H0B73
Public Const GL_DEPTH_FUNC As Integer = &H0B74
Public Const GL_STENCIL_TEST As Integer = &H0B90
Public Const GL_STENCIL_CLEAR_VALUE As Integer = &H0B91
Public Const GL_STENCIL_FUNC As Integer = &H0B92
Public Const GL_STENCIL_VALUE_MASK As Integer = &H0B93
Public Const GL_STENCIL_FAIL As Integer = &H0B94
Public Const GL_STENCIL_PASS_DEPTH_FAIL As Integer = &H0B95
Public Const GL_STENCIL_PASS_DEPTH_PASS As Integer = &H0B96
Public Const GL_STENCIL_REF As Integer = &H0B97
Public Const GL_STENCIL_WRITEMASK As Integer = &H0B98
Public Const GL_VIEWPORT As Integer = &H0BA2
Public Const GL_DITHER As Integer = &H0BD0
Public Const GL_BLEND_DST As Integer = &H0BE0
Public Const GL_BLEND_SRC As Integer = &H0BE1
Public Const GL_BLEND As Integer = &H0BE2
Public Const GL_LOGIC_OP_MODE As Integer = &H0BF0
Public Const GL_DRAW_BUFFER As Integer = &H0C01
Public Const GL_READ_BUFFER As Integer = &H0C02
Public Const GL_SCISSOR_BOX As Integer = &H0C10
Public Const GL_SCISSOR_TEST As Integer = &H0C11
Public Const GL_COLOR_CLEAR_VALUE As Integer = &H0C22
Public Const GL_COLOR_WRITEMASK As Integer = &H0C23
Public Const GL_DOUBLEBUFFER As Integer = &H0C32
Public Const GL_STEREO As Integer = &H0C33
Public Const GL_LINE_SMOOTH_HINT As Integer = &H0C52
Public Const GL_POLYGON_SMOOTH_HINT As Integer = &H0C53
Public Const GL_UNPACK_SWAP_BYTES As Integer = &H0CF0
Public Const GL_UNPACK_LSB_FIRST As Integer = &H0CF1
Public Const GL_UNPACK_ROW_LENGTH As Integer = &H0CF2
Public Const GL_UNPACK_SKIP_ROWS As Integer = &H0CF3
Public Const GL_UNPACK_SKIP_PIXELS As Integer = &H0CF4
Public Const GL_UNPACK_ALIGNMENT As Integer = &H0CF5
Public Const GL_PACK_SWAP_BYTES As Integer = &H0D00
Public Const GL_PACK_LSB_FIRST As Integer = &H0D01
Public Const GL_PACK_ROW_LENGTH As Integer = &H0D02
Public Const GL_PACK_SKIP_ROWS As Integer = &H0D03
Public Const GL_PACK_SKIP_PIXELS As Integer = &H0D04
Public Const GL_PACK_ALIGNMENT As Integer = &H0D05
Public Const GL_MAX_TEXTURE_SIZE As Integer = &H0D33
Public Const GL_MAX_VIEWPORT_DIMS As Integer = &H0D3A
Public Const GL_SUBPIXEL_BITS As Integer = &H0D50
Public Const GL_TEXTURE_1D As Integer = &H0DE0
Public Const GL_TEXTURE_2D As Integer = &H0DE1
Public Const GL_TEXTURE_WIDTH As Integer = &H1000
Public Const GL_TEXTURE_HEIGHT As Integer = &H1001
Public Const GL_TEXTURE_BORDER_COLOR As Integer = &H1004
Public Const GL_DONT_CARE As Integer = &H1100
Public Const GL_FASTEST As Integer = &H1101
Public Const GL_NICEST As Integer = &H1102
Public Const GL_BYTE As Integer = &H1400
Public Const GL_UNSIGNED_BYTE As Integer = &H1401
Public Const GL_SHORT As Integer = &H1402
Public Const GL_UNSIGNED_SHORT As Integer = &H1403
Public Const GL_INT As Integer = &H1404
Public Const GL_UNSIGNED_INT As Integer = &H1405
Public Const GL_FLOAT As Integer = &H1406
Public Const GL_STACK_OVERFLOW As Integer = &H0503
Public Const GL_STACK_UNDERFLOW As Integer = &H0504
Public Const GL_CLEAR As Integer = &H1500
Public Const GL_AND As Integer = &H1501
Public Const GL_AND_REVERSE As Integer = &H1502
Public Const GL_COPY As Integer = &H1503
Public Const GL_AND_INVERTED As Integer = &H1504
Public Const GL_NOOP As Integer = &H1505
Public Const GL_XOR As Integer = &H1506
Public Const GL_OR As Integer = &H1507
Public Const GL_NOR As Integer = &H1508
Public Const GL_EQUIV As Integer = &H1509
Public Const GL_INVERT As Integer = &H150A
Public Const GL_OR_REVERSE As Integer = &H150B
Public Const GL_COPY_INVERTED As Integer = &H150C
Public Const GL_OR_INVERTED As Integer = &H150D
Public Const GL_NAND As Integer = &H150E
Public Const GL_SET As Integer = &H150F
Public Const GL_TEXTURE As Integer = &H1702
Public Const GL_COLOR As Integer = &H1800
Public Const GL_DEPTH As Integer = &H1801
Public Const GL_STENCIL As Integer = &H1802
Public Const GL_STENCIL_INDEX As Integer = &H1901
Public Const GL_DEPTH_COMPONENT As Integer = &H1902
Public Const GL_RED As Integer = &H1903
Public Const GL_GREEN As Integer = &H1904
Public Const GL_BLUE As Integer = &H1905
Public Const GL_ALPHA As Integer = &H1906
Public Const GL_RGB As Integer = &H1907
Public Const GL_RGBA As Integer = &H1908
Public Const GL_POINT As Integer = &H1B00
Public Const GL_LINE As Integer = &H1B01
Public Const GL_FILL As Integer = &H1B02
Public Const GL_KEEP As Integer = &H1E00
Public Const GL_REPLACE As Integer = &H1E01
Public Const GL_INCR As Integer = &H1E02
Public Const GL_DECR As Integer = &H1E03
Public Const GL_VENDOR As Integer = &H1F00
Public Const GL_RENDERER As Integer = &H1F01
Public Const GL_VERSION As Integer = &H1F02
Public Const GL_EXTENSIONS As Integer = &H1F03
Public Const GL_NEAREST As Integer = &H2600
Public Const GL_LINEAR As Integer = &H2601
Public Const GL_NEAREST_MIPMAP_NEAREST As Integer = &H2700
Public Const GL_LINEAR_MIPMAP_NEAREST As Integer = &H2701
Public Const GL_NEAREST_MIPMAP_LINEAR As Integer = &H2702
Public Const GL_LINEAR_MIPMAP_LINEAR As Integer = &H2703
Public Const GL_TEXTURE_MAG_FILTER As Integer = &H2800
Public Const GL_TEXTURE_MIN_FILTER As Integer = &H2801
Public Const GL_TEXTURE_WRAP_S As Integer = &H2802
Public Const GL_TEXTURE_WRAP_T As Integer = &H2803
Public Const GL_REPEAT As Integer = &H2901

Public Extern glCullFace(Mode As Integer)
Public Extern glFrontFace(Mode As Integer)
Public Extern glHint(iTarget As Integer, Mode As Integer)
Public Extern glLineWidth(fWidth As Single)
Public Extern glPointSize(fSize As Single)
Public Extern glPolygonMode(face As Integer, Mode As Integer)
Public Extern glScissor(x As Integer, y As Integer, iWidth As Integer, iHeight As Integer)
Public Extern glTexParameterf(iTarget As Integer, iPname As Integer, fParam As Single)
Public Extern glTexParameterfv(iTarget As Integer, iPname As Integer, slxParams As Float[])
Public Extern glTexParameteri(iTarget As Integer, iPname As Integer, iParam As Integer)
Public Extern glTexParameteriv(iTarget As Integer, iPname As Integer, inxParams As Integer[])
Public Extern glTexImage1D(iTarget As Integer, iLevel As Integer, iInternalFormat As Integer, iWidth As Integer, iBorder As Integer, iFormat As Integer, iType As Integer, pixels As Byte[]) ' verificar si funciona byte
Public Extern glTexImage2D(iTarget As Integer, iLevel As Integer, iInternalFormat As Integer, iWidth As Integer, iHeight As Integer, iBorder As Integer, iFormat As Integer, iType As Integer, pixels As Byte[])
Public Extern glDrawBuffer(iBuff As Integer)
Public Extern glClear(GiMaskBitField As Integer)
Public Extern glClearColor(red As Single, green As Single, blue As Single, alpha As Single)
Public Extern glClearStencil(s As Integer)
Public Extern glClearDepth(depth As Float)
Public Extern glStencilMask(mask As Integer)
Public Extern glColorMask(red As Byte, green As Byte, blue As Byte, alpha As Byte)
Public Extern glDepthMask(flag As Byte)
Public Extern glDisable(cap As Integer)
Public Extern glEnable(cap As Integer)
Public Extern glFinish()
Public Extern glFlush()
Public Extern glBlendFunc(sFactor As Integer, dFactor As Integer)
Public Extern glLogicOp(opcode As Integer)
Public Extern glStencilFunc(func As Integer, ref As Integer, mask As Integer)
Public Extern glStencilOp(fail As Integer, zfail As Integer, zpass As Integer)
Public Extern glDepthFunc(func As Integer)
Public Extern glPixelStoref(iPname As Integer, fParam As Single)
Public Extern glPixelStorei(iPname As Integer, iParam As Integer)
Public Extern glReadBuffer(src As Integer)
Public Extern glReadPixels(x As Integer, y As Integer, iWidth As Integer, iHeight As Integer, iFormat As Integer, iType As Integer, pixels As Byte[])
Public Extern glGetBooleanv(iPname As Integer, data As Byte[])
Public Extern glGetDoublev(iPname As Integer, data As Float[])
Public Extern glGetError() As Integer
Public Extern glGetsinglev(iPname As Integer, data As Single[])
Public Extern glGetIntegerv(iPname As Integer, data As Integer[])
Public Extern glGetString(name As Integer) As String
Public Extern glGetTexImage(iTarget As Integer, iLevel As Integer, iFormat As Integer, iType As Integer, pixels As Byte)
Public Extern glGetTexParameterfv(iTarget As Integer, iPname As Integer, params As Single[])
Public Extern glGetTexParameteriv(iTarget As Integer, iPname As Integer, params As Integer[])
Public Extern glGetTexLevelParameterfv(iTarget As Integer, iLevel As Integer, iPname As Integer, params As Single[])
Public Extern glGetTexLevelParameteriv(iTarget As Integer, iLevel As Integer, iPname As Integer, params As Integer[])
Public Extern glIsEnabled(cap As Integer) As Byte
Public Extern glDepthRange(n As Float, f As Float)
Public Extern glViewport(x As Integer, y As Integer, iWidth As Integer, iHeight As Integer)

Public Const GL_COLOR_LOGIC_OP As Integer = &H0BF2
Public Const GL_POLYGON_OFFSET_UNITS As Integer = &H2A00
Public Const GL_POLYGON_OFFSET_POINT As Integer = &H2A01
Public Const GL_POLYGON_OFFSET_LINE As Integer = &H2A02
Public Const GL_POLYGON_OFFSET_FILL As Integer = &H8037
Public Const GL_POLYGON_OFFSET_FACTOR As Integer = &H8038
Public Const GL_TEXTURE_BINDING_1D As Integer = &H8068
Public Const GL_TEXTURE_BINDING_2D As Integer = &H8069
Public Const GL_TEXTURE_INTERNAL_FORMAT As Integer = &H1003
Public Const GL_TEXTURE_RED_SIZE As Integer = &H805C
Public Const GL_TEXTURE_GREEN_SIZE As Integer = &H805D
Public Const GL_TEXTURE_BLUE_SIZE As Integer = &H805E
Public Const GL_TEXTURE_ALPHA_SIZE As Integer = &H805F
Public Const GL_DOUBLE As Integer = &H140A
Public Const GL_PROXY_TEXTURE_1D As Integer = &H8063
Public Const GL_PROXY_TEXTURE_2D As Integer = &H8064
Public Const GL_R3_G3_B2 As Integer = &H2A10
Public Const GL_RGB4 As Integer = &H804F
Public Const GL_RGB5 As Integer = &H8050
Public Const GL_RGB8 As Integer = &H8051
Public Const GL_RGB10 As Integer = &H8052
Public Const GL_RGB12 As Integer = &H8053
Public Const GL_RGB16 As Integer = &H8054
Public Const GL_RGBA2 As Integer = &H8055
Public Const GL_RGBA4 As Integer = &H8056
Public Const GL_RGB5_A1 As Integer = &H8057
Public Const GL_RGBA8 As Integer = &H8058
Public Const GL_RGB10_A2 As Integer = &H8059
Public Const GL_RGBA12 As Integer = &H805A
Public Const GL_RGBA16 As Integer = &H805B
Public Const GL_VERTEX_ARRAY As Integer = &H8074
Public Extern glDrawArrays(Mode As Integer, first As Integer, iSize As Integer)
Public Extern glDrawElements(Mode As Integer, iSize As Integer, iType As Integer, indices As Byte[]) ' verificar si es byte
Public Extern glGetPointerv(iPname As Integer, params As Pointer)
Public Extern glPolygonOffset(factor As Single, units As Single)
Public Extern glCopyTexImage1D(iTarget As Integer, iLevel As Integer, internalformat As Integer, x As Integer, y As Integer, iWidth As Integer, iBorder As Integer)
Public Extern glCopyTexImage2D(iTarget As Integer, iLevel As Integer, internalformat As Integer, x As Integer, y As Integer, iWidth As Integer, iHeight As Integer, iBorder As Integer)
Public Extern glCopyTexSubImage1D(iTarget As Integer, iLevel As Integer, xoffset As Integer, x As Integer, y As Integer, iWidth As Integer)
Public Extern glCopyTexSubImage2D(iTarget As Integer, iLevel As Integer, xoffset As Integer, yoffset As Integer, x As Integer, y As Integer, iWidth As Integer, iHeight As Integer)
Public Extern glTexSubImage1D(iTarget As Integer, iLevel As Integer, xoffset As Integer, iWidth As Integer, iFormat As Integer, iType As Integer, pixels As Byte[])
Public Extern glTexSubImage2D(iTarget As Integer, iLevel As Integer, xOffset As Integer, yOffset As Integer, iWidth As Integer, iHeight As Integer, iFormat As Integer, iType As Integer, pixels As Byte[])
Public Extern glBindTexture(iTarget As Integer, texture As Integer)
Public Extern glDeleteTextures(n As Integer, textures As Integer[])
Public Extern glGenTextures(n As Integer, textures As Integer[])
Public Extern glIsTexture(texture As Integer) As Boolean
Public Const GL_UNSIGNED_BYTE_3_3_2 As Integer = &H8032
Public Const GL_UNSIGNED_SHORT_4_4_4_4 As Integer = &H8033
Public Const GL_UNSIGNED_SHORT_5_5_5_1 As Integer = &H8034
Public Const GL_UNSIGNED_INT_8_8_8_8 As Integer = &H8035
Public Const GL_UNSIGNED_INT_10_10_10_2 As Integer = &H8036
Public Const GL_TEXTURE_BINDING_3D As Integer = &H806A
Public Const GL_PACK_SKIP_IMAGES As Integer = &H806B
Public Const GL_PACK_IMAGE_HEIGHT As Integer = &H806C
Public Const GL_UNPACK_SKIP_IMAGES As Integer = &H806D
Public Const GL_UNPACK_IMAGE_HEIGHT As Integer = &H806E
Public Const GL_TEXTURE_3D As Integer = &H806F
Public Const GL_PROXY_TEXTURE_3D As Integer = &H8070
Public Const GL_TEXTURE_DEPTH As Integer = &H8071
Public Const GL_TEXTURE_WRAP_R As Integer = &H8072
Public Const GL_MAX_3D_TEXTURE_SIZE As Integer = &H8073
Public Const GL_UNSIGNED_BYTE_2_3_3_REV As Integer = &H8362
Public Const GL_UNSIGNED_SHORT_5_6_5 As Integer = &H8363
Public Const GL_UNSIGNED_SHORT_5_6_5_REV As Integer = &H8364
Public Const GL_UNSIGNED_SHORT_4_4_4_4_REV As Integer = &H8365
Public Const GL_UNSIGNED_SHORT_1_5_5_5_REV As Integer = &H8366
Public Const GL_UNSIGNED_INT_8_8_8_8_REV As Integer = &H8367
Public Const GL_UNSIGNED_INT_2_10_10_10_REV As Integer = &H8368
Public Const GL_BGR As Integer = &H80E0
Public Const GL_BGRA As Integer = &H80E1
Public Const GL_MAX_ELEMENTS_VERTICES As Integer = &H80E8
Public Const GL_MAX_ELEMENTS_INDICES As Integer = &H80E9
Public Const GL_CLAMP_TO_EDGE As Integer = &H812F
Public Const GL_TEXTURE_MIN_LOD As Integer = &H813A
Public Const GL_TEXTURE_MAX_LOD As Integer = &H813B
Public Const GL_TEXTURE_BASE_LEVEL As Integer = &H813C
Public Const GL_TEXTURE_MAX_LEVEL As Integer = &H813D
Public Const GL_SMOOTH_POINT_SIZE_RANGE As Integer = &H0B12
Public Const GL_SMOOTH_POINT_SIZE_GRANULARITY As Integer = &H0B13
Public Const GL_SMOOTH_LINE_WIDTH_RANGE As Integer = &H0B22
Public Const GL_SMOOTH_LINE_WIDTH_GRANULARITY As Integer = &H0B23
Public Const GL_ALIASED_LINE_WIDTH_RANGE As Integer = &H846E

Public Extern glDrawRangeElements(Mode As Integer, start As Integer, iEnd As Integer, iSize As Integer, iType As Integer, indices As Byte[])
Public Extern glTexImage3D(iTarget As Integer, iLevel As Integer, iInternalFormat As Integer, iWidth As Integer, iHeight As Integer, iDepth As Integer, iBorder As Integer, iFormat As Integer, iType As Integer, pixels As Byte[])
Public Extern glTexSubImage3D(iTarget As Integer, iLevel As Integer, xOffset As Integer, yOffset As Integer, zOffset As Integer, iWidth As Integer, iHeight As Integer, iDepth As Integer, iFormat As Integer, iType As Integer, pixels As Byte[])
Public Extern glCopyTexSubImage3D(iTarget As Integer, iLevel As Integer, xOffset As Integer, yOffset As Integer, zOffset As Integer, x As Integer, y As Integer, iWidth As Integer, iHeight As Integer)
Public Const GL_TEXTURE0 As Integer = &H84C0
Public Const GL_TEXTURE1 As Integer = &H84C1
Public Const GL_TEXTURE2 As Integer = &H84C2
Public Const GL_TEXTURE3 As Integer = &H84C3
Public Const GL_TEXTURE4 As Integer = &H84C4
Public Const GL_TEXTURE5 As Integer = &H84C5
Public Const GL_TEXTURE6 As Integer = &H84C6
Public Const GL_TEXTURE7 As Integer = &H84C7
Public Const GL_TEXTURE8 As Integer = &H84C8
Public Const GL_TEXTURE9 As Integer = &H84C9
Public Const GL_TEXTURE10 As Integer = &H84CA
Public Const GL_TEXTURE11 As Integer = &H84CB
Public Const GL_TEXTURE12 As Integer = &H84CC
Public Const GL_TEXTURE13 As Integer = &H84CD
Public Const GL_TEXTURE14 As Integer = &H84CE
Public Const GL_TEXTURE15 As Integer = &H84CF
Public Const GL_TEXTURE16 As Integer = &H84D0
Public Const GL_TEXTURE17 As Integer = &H84D1
Public Const GL_TEXTURE18 As Integer = &H84D2
Public Const GL_TEXTURE19 As Integer = &H84D3
Public Const GL_TEXTURE20 As Integer = &H84D4
Public Const GL_TEXTURE21 As Integer = &H84D5
Public Const GL_TEXTURE22 As Integer = &H84D6
Public Const GL_TEXTURE23 As Integer = &H84D7
Public Const GL_TEXTURE24 As Integer = &H84D8
Public Const GL_TEXTURE25 As Integer = &H84D9
Public Const GL_TEXTURE26 As Integer = &H84DA
Public Const GL_TEXTURE27 As Integer = &H84DB
Public Const GL_TEXTURE28 As Integer = &H84DC
Public Const GL_TEXTURE29 As Integer = &H84DD
Public Const GL_TEXTURE30 As Integer = &H84DE
Public Const GL_TEXTURE31 As Integer = &H84DF
Public Const GL_ACTIVE_TEXTURE As Integer = &H84E0
Public Const GL_MULTISAMPLE As Integer = &H809D
Public Const GL_SAMPLE_ALPHA_TO_COVERAGE As Integer = &H809E
Public Const GL_SAMPLE_ALPHA_TO_ONE As Integer = &H809F
Public Const GL_SAMPLE_COVERAGE As Integer = &H80A0
Public Const GL_SAMPLE_BUFFERS As Integer = &H80A8
Public Const GL_SAMPLES As Integer = &H80A9
Public Const GL_SAMPLE_COVERAGE_VALUE As Integer = &H80AA
Public Const GL_SAMPLE_COVERAGE_INVERT As Integer = &H80AB
Public Const GL_TEXTURE_CUBE_MAP As Integer = &H8513
Public Const GL_TEXTURE_BINDING_CUBE_MAP As Integer = &H8514
Public Const GL_TEXTURE_CUBE_MAP_POSITIVE_X As Integer = &H8515
Public Const GL_TEXTURE_CUBE_MAP_NEGATIVE_X As Integer = &H8516
Public Const GL_TEXTURE_CUBE_MAP_POSITIVE_Y As Integer = &H8517
Public Const GL_TEXTURE_CUBE_MAP_NEGATIVE_Y As Integer = &H8518
Public Const GL_TEXTURE_CUBE_MAP_POSITIVE_Z As Integer = &H8519
Public Const GL_TEXTURE_CUBE_MAP_NEGATIVE_Z As Integer = &H851A
Public Const GL_PROXY_TEXTURE_CUBE_MAP As Integer = &H851B
Public Const GL_MAX_CUBE_MAP_TEXTURE_SIZE As Integer = &H851C
Public Const GL_COMPRESSED_RGB As Integer = &H84ED
Public Const GL_COMPRESSED_RGBA As Integer = &H84EE
Public Const GL_TEXTURE_COMPRESSION_HINT As Integer = &H84EF
Public Const GL_TEXTURE_COMPRESSED_IMAGE_SIZE As Integer = &H86A0
Public Const GL_TEXTURE_COMPRESSED As Integer = &H86A1
Public Const GL_NUM_COMPRESSED_TEXTURE_FORMATS As Integer = &H86A2
Public Const GL_COMPRESSED_TEXTURE_FORMATS As Integer = &H86A3
Public Const GL_CLAMP_TO_BORDER As Integer = &H812D
Public Extern glActiveTexture(texture As Integer)
Public Extern glSampleCoverage(value As Single, invert As Byte)
Public Extern glCompressedTexImage3D(iTarget As Integer, iLevel As Integer, internalformat As Integer, iWidth As Integer, iHeight As Integer, iDepth As Integer, iBorder As Integer, imagesize As Integer, data As Byte[])
Public Extern glCompressedTexImage2D(iTarget As Integer, iLevel As Integer, internalformat As Integer, iWidth As Integer, iHeight As Integer, iBorder As Integer, imagesize As Integer, data As Byte[])
Public Extern glCompressedTexImage1D(iTarget As Integer, iLevel As Integer, internalformat As Integer, iWidth As Integer, iBorder As Integer, imagesize As Integer, data As Byte[])
Public Extern glCompressedTexSubImage3D(iTarget As Integer, iLevel As Integer, xOffset As Integer, yOffset As Integer, zOffset As Integer, iWidth As Integer, iHeight As Integer, iDepth As Integer, iFormat As Integer, imagesize As Integer, data As Byte[])
Public Extern glCompressedTexSubImage2D(iTarget As Integer, iLevel As Integer, xOffset As Integer, yOffset As Integer, iWidth As Integer, iHeight As Integer, iFormat As Integer, imagesize As Integer, data As Byte[])
Public Extern glCompressedTexSubImage1D(iTarget As Integer, iLevel As Integer, xOffset As Integer, iWidth As Integer, iFormat As Integer, imagesize As Integer, data As Byte[])
Public Extern glGetCompressedTexImage(iTarget As Integer, iLevel As Integer, img As Byte[])

Public Const GL_BLEND_DST_RGB As Integer = &H80C8
Public Const GL_BLEND_SRC_RGB As Integer = &H80C9
Public Const GL_BLEND_DST_ALPHA As Integer = &H80CA
Public Const GL_BLEND_SRC_ALPHA As Integer = &H80CB
Public Const GL_POINT_FADE_THRESHOLD_SIZE As Integer = &H8128
Public Const GL_DEPTH_COMPONENT16 As Integer = &H81A5
Public Const GL_DEPTH_COMPONENT24 As Integer = &H81A6
Public Const GL_DEPTH_COMPONENT32 As Integer = &H81A7
Public Const GL_MIRRORED_REPEAT As Integer = &H8370
Public Const GL_MAX_TEXTURE_LOD_BIAS As Integer = &H84FD
Public Const GL_TEXTURE_LOD_BIAS As Integer = &H8501
Public Const GL_INCR_WRAP As Integer = &H8507
Public Const GL_DECR_WRAP As Integer = &H8508
Public Const GL_TEXTURE_DEPTH_SIZE As Integer = &H884A
Public Const GL_TEXTURE_COMPARE_MODE As Integer = &H884C
Public Const GL_TEXTURE_COMPARE_FUNC As Integer = &H884D
Public Const GL_BLEND_COLOR As Integer = &H8005
Public Const GL_BLEND_EQUATION As Integer = &H8009
Public Const GL_CONSTANT_COLOR As Integer = &H8001
Public Const GL_ONE_MINUS_CONSTANT_COLOR As Integer = &H8002
Public Const GL_CONSTANT_ALPHA As Integer = &H8003
Public Const GL_ONE_MINUS_CONSTANT_ALPHA As Integer = &H8004
Public Const GL_FUNC_ADD As Integer = &H8006
Public Const GL_FUNC_REVERSE_SUBTRACT As Integer = &H800B
Public Const GL_FUNC_SUBTRACT As Integer = &H800A
Public Const GL_MIN As Integer = &H8007
Public Const GL_MAX As Integer = &H8008
Public Extern glBlendFuncSeparate(sFactorRGB As Integer, dFactorRGB As Integer, sFactorAlpha As Integer, dFactorAlpha As Integer)
Public Extern glMultiDrawArrays(Mode As Integer, first As Integer[], count As Integer[], drawcount As Integer)
Public Extern glMultiDrawElements(Mode As Integer, count As Integer[], iType As Integer, indices As Integer[][], drawcount As Integer)
Public Extern glPointParameterf(iPname As Integer, fParam As Single)
Public Extern glPointParameterfv(iPname As Integer, flxParams As Single[])
Public Extern glPointParameteri(iPname As Integer, iParam As Integer)
Public Extern glPointParameteriv(iPname As Integer, inxParams As Integer[])
Public Extern glBlendColor(red As Single, green As Single, blue As Single, alpha As Single)
Public Extern glBlendEquation(Mode As Integer)
Public Const GL_BUFFER_SIZE As Integer = &H8764
Public Const GL_BUFFER_USAGE As Integer = &H8765
Public Const GL_QUERY_COUNTER_BITS As Integer = &H8864
Public Const GL_CURRENT_QUERY As Integer = &H8865
Public Const GL_QUERY_RESULT As Integer = &H8866
Public Const GL_QUERY_RESULT_AVAILABLE As Integer = &H8867
Public Const GL_ARRAY_BUFFER As Integer = &H8892
Public Const GL_ELEMENT_ARRAY_BUFFER As Integer = &H8893
Public Const GL_ARRAY_BUFFER_BINDING As Integer = &H8894
Public Const GL_ELEMENT_ARRAY_BUFFER_BINDING As Integer = &H8895
Public Const GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING As Integer = &H889F
Public Const GL_READ_ONLY As Integer = &H88B8
Public Const GL_WRITE_ONLY As Integer = &H88B9
Public Const GL_READ_WRITE As Integer = &H88BA
Public Const GL_BUFFER_ACCESS As Integer = &H88BB
Public Const GL_BUFFER_MAPPED As Integer = &H88BC
Public Const GL_BUFFER_MAP_POINTER As Integer = &H88BD
Public Const GL_STREAM_DRAW As Integer = &H88E0
Public Const GL_STREAM_READ As Integer = &H88E1
Public Const GL_STREAM_COPY As Integer = &H88E2
Public Const GL_STATIC_DRAW As Integer = &H88E4
Public Const GL_STATIC_READ As Integer = &H88E5
Public Const GL_STATIC_COPY As Integer = &H88E6
Public Const GL_DYNAMIC_DRAW As Integer = &H88E8
Public Const GL_DYNAMIC_READ As Integer = &H88E9
Public Const GL_DYNAMIC_COPY As Integer = &H88EA
Public Const GL_SAMPLES_PASSED As Integer = &H8914
Public Const GL_SRC1_ALPHA As Integer = &H8589
Public Extern glGenQueries(n As Integer, ids As Integer[])
Public Extern glDeleteQueries(n As Integer, ids As Integer[])
Public Extern glIsQuery(id As Integer) As Boolean
Public Extern glBeginQuery(iTarget As Integer, id As Integer)
Public Extern glEndQuery(iTarget As Integer)
Public Extern glGetQueryiv(iTarget As Integer, iPname As Integer, params As Integer[])
Public Extern glGetQueryObjectiv(id As Integer, iPname As Integer, params As Integer[])
Public Extern glGetQueryObjectuiv(id As Integer, iPname As Integer, params As Integer[])
Public Extern glBindBuffer(iTarget As Integer, buffer As Integer)
Public Extern glDeleteBuffers(n As Integer, buffers As Integer[])
Public Extern glGenBuffers(n As Integer, buffers As Integer[])
Public Extern glIsBuffer(buffer As Integer) As Boolean
Public Extern glBufferData(iTarget As Integer, size As Integer, data As Byte[], usage As Integer)
Public Extern glBufferSubData(iTarget As Integer, offset As Integer, size As Integer, data As Byte[])
Public Extern glGetBufferSubData(iTarget As Integer, offset As Integer, size As Integer, data As Byte[])
Public Extern glMapBuffer(iTarget As Integer, access As Integer) As Integer[]
Public Extern glUnmapBuffer(iTarget As Integer) As Boolean
Public Extern glGetBufferParameteriv(iTarget As Integer, iPname As Integer, params As Integer[])
Public Extern glGetBufferPointerv(iTarget As Integer, iPname As Integer, params As Pointer)
Public Const GL_BLEND_EQUATION_RGB As Integer = &H8009
Public Const GL_VERTEX_ATTRIB_ARRAY_ENABLED As Integer = &H8622
Public Const GL_VERTEX_ATTRIB_ARRAY_SIZE As Integer = &H8623
Public Const GL_VERTEX_ATTRIB_ARRAY_STRIDE As Integer = &H8624
Public Const GL_VERTEX_ATTRIB_ARRAY_TYPE As Integer = &H8625
Public Const GL_CURRENT_VERTEX_ATTRIB As Integer = &H8626
Public Const GL_VERTEX_PROGRAM_POINT_SIZE As Integer = &H8642
Public Const GL_VERTEX_ATTRIB_ARRAY_POINTER As Integer = &H8645
Public Const GL_STENCIL_BACK_FUNC As Integer = &H8800
Public Const GL_STENCIL_BACK_FAIL As Integer = &H8801
Public Const GL_STENCIL_BACK_PASS_DEPTH_FAIL As Integer = &H8802
Public Const GL_STENCIL_BACK_PASS_DEPTH_PASS As Integer = &H8803
Public Const GL_MAX_DRAW_BUFFERS As Integer = &H8824
Public Const GL_DRAW_BUFFER0 As Integer = &H8825
Public Const GL_DRAW_BUFFER1 As Integer = &H8826
Public Const GL_DRAW_BUFFER2 As Integer = &H8827
Public Const GL_DRAW_BUFFER3 As Integer = &H8828
Public Const GL_DRAW_BUFFER4 As Integer = &H8829
Public Const GL_DRAW_BUFFER5 As Integer = &H882A
Public Const GL_DRAW_BUFFER6 As Integer = &H882B
Public Const GL_DRAW_BUFFER7 As Integer = &H882C
Public Const GL_DRAW_BUFFER8 As Integer = &H882D
Public Const GL_DRAW_BUFFER9 As Integer = &H882E
Public Const GL_DRAW_BUFFER10 As Integer = &H882F
Public Const GL_DRAW_BUFFER11 As Integer = &H8830
Public Const GL_DRAW_BUFFER12 As Integer = &H8831
Public Const GL_DRAW_BUFFER13 As Integer = &H8832
Public Const GL_DRAW_BUFFER14 As Integer = &H8833
Public Const GL_DRAW_BUFFER15 As Integer = &H8834
Public Const GL_BLEND_EQUATION_ALPHA As Integer = &H883D
Public Const GL_MAX_VERTEX_ATTRIBS As Integer = &H8869
Public Const GL_VERTEX_ATTRIB_ARRAY_NORMALIZED As Integer = &H886A
Public Const GL_MAX_TEXTURE_IMAGE_UNITS As Integer = &H8872
Public Const GL_FRAGMENT_SHADER As Integer = &H8B30
Public Const GL_VERTEX_SHADER As Integer = &H8B31
Public Const GL_MAX_FRAGMENT_UNIFORM_COMPONENTS As Integer = &H8B49
Public Const GL_MAX_VERTEX_UNIFORM_COMPONENTS As Integer = &H8B4A
Public Const GL_MAX_VARYING_singleS As Integer = &H8B4B
Public Const GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS As Integer = &H8B4C
Public Const GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS As Integer = &H8B4D
Public Const GL_SHADER_TYPE As Integer = &H8B4F
Public Const GL_single_VEC2 As Integer = &H8B50
Public Const GL_single_VEC3 As Integer = &H8B51
Public Const GL_single_VEC4 As Integer = &H8B52
Public Const GL_INT_VEC2 As Integer = &H8B53
Public Const GL_INT_VEC3 As Integer = &H8B54
Public Const GL_INT_VEC4 As Integer = &H8B55
Public Const GL_BOOL As Integer = &H8B56
Public Const GL_BOOL_VEC2 As Integer = &H8B57
Public Const GL_BOOL_VEC3 As Integer = &H8B58
Public Const GL_BOOL_VEC4 As Integer = &H8B59
Public Const GL_single_MAT2 As Integer = &H8B5A
Public Const GL_single_MAT3 As Integer = &H8B5B
Public Const GL_single_MAT4 As Integer = &H8B5C
Public Const GL_SAMPLER_1D As Integer = &H8B5D
Public Const GL_SAMPLER_2D As Integer = &H8B5E
Public Const GL_SAMPLER_3D As Integer = &H8B5F
Public Const GL_SAMPLER_CUBE As Integer = &H8B60
Public Const GL_SAMPLER_1D_SHADOW As Integer = &H8B61
Public Const GL_SAMPLER_2D_SHADOW As Integer = &H8B62
Public Const GL_DELETE_STATUS As Integer = &H8B80
Public Const GL_COMPILE_STATUS As Integer = &H8B81
Public Const GL_LINK_STATUS As Integer = &H8B82
Public Const GL_VALIDATE_STATUS As Integer = &H8B83
Public Const GL_INFO_LOG_LENGTH As Integer = &H8B84
Public Const GL_ATTACHED_SHADERS As Integer = &H8B85
Public Const GL_ACTIVE_UNIFORMS As Integer = &H8B86
Public Const GL_ACTIVE_UNIFORM_MAX_LENGTH As Integer = &H8B87
Public Const GL_SHADER_SOURCE_LENGTH As Integer = &H8B88
Public Const GL_ACTIVE_ATTRIBUTES As Integer = &H8B89
Public Const GL_ACTIVE_ATTRIBUTE_MAX_LENGTH As Integer = &H8B8A
Public Const GL_FRAGMENT_SHADER_DERIVATIVE_HINT As Integer = &H8B8B
Public Const GL_SHADING_LANGUAGE_VERSION As Integer = &H8B8C
Public Const GL_CURRENT_PROGRAM As Integer = &H8B8D
Public Const GL_POINT_SPRITE_COORD_ORIGIN As Integer = &H8CA0
Public Const GL_LOWER_LEFT As Integer = &H8CA1
Public Const GL_UPPER_LEFT As Integer = &H8CA2
Public Const GL_STENCIL_BACK_REF As Integer = &H8CA3
Public Const GL_STENCIL_BACK_VALUE_MASK As Integer = &H8CA4
Public Const GL_STENCIL_BACK_WRITEMASK As Integer = &H8CA5

Public Extern glBlendEquationSeparate(ModeRGB As Integer, Modealpha As Integer)
Public Extern glDrawBuffers(n As Integer, buffers As Integer[])
Public Extern glStencilOpSeparate(face As Integer, sFail As Integer, dpFail As Integer, dpPass As Integer)
Public Extern glStencilFuncSeparate(face As Integer, func As Integer, ref As Integer, mask As Integer)
Public Extern glStencilMaskSeparate(face As Integer, mask As Integer)
Public Extern glAttachShader(program As Integer, shader As Integer)
Public Extern glBindAttribLocation(program As Integer, iIndex As Integer, name As String)
Public Extern glCompileShader(shader As Integer)
Public Extern glCreateProgram() As Integer
Public Extern glCreateShader(iType As Integer) As Integer
Public Extern glDeleteProgram(program As Integer)
Public Extern glDeleteShader(shader As Integer)
Public Extern glDetachShader(program As Integer, shader As Integer)
Public Extern glDisableVertexAttribArray(iIndex As Integer)
Public Extern glEnableVertexAttribArray(iIndex As Integer)
Public Extern glGetActiveAttrib(program As Integer, iIndex As Integer, BufSize As Integer, length As Integer[], size As Integer[], type As Integer[], name As String)
Public Extern glGetActiveUniform(program As Integer, iIndex As Integer, BufSize As Integer, length As Integer[], size As Integer[], type As Integer[], name As String)
Public Extern glGetAttachedShaders(program As Integer, MaxCount As Integer, count As Integer[], shaders As Integer[])
Public Extern glGetAttribLocation(program As Integer, name As String)
Public Extern glGetProgramiv(program As Integer, iPname As Integer, params As Integer[])
Public Extern glGetProgramInfoLog(program As Integer, BufSize As Integer, length As Integer[], infoLog As String)
Public Extern glGetShaderiv(shader As Integer, iPname As Integer, params As Integer[])
Public Extern glGetShaderInfoLog(shader As Integer, BufSize As Integer, legth As Integer[], infolog As String)
Public Extern glGetShaderSource(shader As Integer, BufSize As Integer, legth As Integer[], source As String)
Public Extern glGetUniformLocation(program As Integer, name As String)
Public Extern glGetUniformfv(program As Integer, location As Integer, params As Single[])
Public Extern glGetUniformiv(program As Integer, location As Integer, params As Integer[])
Public Extern glGetVertexAttribdv(iIndex As Integer, iPname As Integer, params As Float[])
Public Extern glGetVertexAttribfv(iIndex As Integer, iPname As Integer, params As Single[])
Public Extern glGetVertexAttribiv(iIndex As Integer, iPname As Integer, params As Integer[])
Public Extern glGetVertexAttribPointerv(iIndex As Integer, iPname As Integer, p As Pointer)
Public Extern glIsProgram(program As Integer) As Boolean
Public Extern glIsShader(shader As Integer) As Boolean
Public Extern glLinkProgram(program As Integer)
Public Extern glShaderSource(shader As Integer, iSize As Integer, ByRef Source As String, ByRef length As Integer)
Public Extern glUseProgram(program As Integer)
Public Extern glUniform1f(location As Integer, v0 As Single)
Public Extern glUniform2f(location As Integer, v0 As Single, v1 As Single)
Public Extern glUniform3f(location As Integer, v0 As Single, v1 As Single, v2 As Single)
Public Extern glUniform4f(location As Integer, v0 As Single, v1 As Single, v2 As Single, v3 As Single)
Public Extern glUniform1i(location As Integer, v0 As Integer)
Public Extern glUniform2i(location As Integer, v0 As Integer, v1 As Integer)
Public Extern glUniform3i(location As Integer, v0 As Integer, v1 As Integer, v2 As Integer)
Public Extern glUniform4i(location As Integer, v0 As Integer, v1 As Integer, v2 As Integer, v3 As Integer)
Public Extern glUniform1fv(location As Integer, iSize As Integer, value As Single[])
Public Extern glUniform2fv(location As Integer, iSize As Integer, value As Single[])
Public Extern glUniform3fv(location As Integer, iSize As Integer, value As Single[])
Public Extern glUniform4fv(location As Integer, iSize As Integer, value As Single[])
Public Extern glUniform1iv(location As Integer, iSize As Integer, value As Integer[])
Public Extern glUniform2iv(location As Integer, iSize As Integer, value As Integer[])
Public Extern glUniform3iv(location As Integer, iSize As Integer, value As Integer[])
Public Extern glUniform4iv(location As Integer, iSize As Integer, value As Integer[])
' Public Extern glUniformMatrix2fv(location As Integer, iSize As Integer, As Byte transpose, const GLsingle * value)
' Public Extern glUniformMatrix3fv(location As Integer, iSize As Integer, As Byte transpose, const GLsingle * value)
' Public Extern glUniformMatrix4fv(location As Integer, iSize As Integer, As Byte transpose, const GLsingle * value)
Public Extern glValidateProgram(program As Integer)
' Public Extern glVertexAttrib1d(iIndex As Integer, x As Float)
' Public Extern glVertexAttrib1dv(iIndex As Integer, const As Float * v)
' Public Extern glVertexAttrib1f(iIndex As Integer, GLsingle x)
' Public Extern glVertexAttrib1fv(iIndex As Integer, const GLsingle * v)
' Public Extern glVertexAttrib1s(iIndex As Integer, GLshort x)
' Public Extern glVertexAttrib1sv(iIndex As Integer, const GLshort * v)
' Public Extern glVertexAttrib2d(iIndex As Integer, x As Float, As Float y)
' Public Extern glVertexAttrib2dv(iIndex As Integer, const As Float * v)
' Public Extern glVertexAttrib2f(iIndex As Integer, GLsingle x, GLsingle y)
' Public Extern glVertexAttrib2fv(iIndex As Integer, const GLsingle * v)
' Public Extern glVertexAttrib2s(iIndex As Integer, GLshort x, GLshort y)
' Public Extern glVertexAttrib2sv(iIndex As Integer, const GLshort * v)
' Public Extern glVertexAttrib3d(iIndex As Integer, x As Float, As Float y, As Float z)
' Public Extern glVertexAttrib3dv(iIndex As Integer, const As Float * v)
' Public Extern glVertexAttrib3f(iIndex As Integer, GLsingle x, GLsingle y, GLsingle z)
' Public Extern glVertexAttrib3fv(iIndex As Integer, const GLsingle * v)
' Public Extern glVertexAttrib3s(iIndex As Integer, GLshort x, GLshort y, GLshort z)
' Public Extern glVertexAttrib3sv(iIndex As Integer, const GLshort * v)
' Public Extern glVertexAttrib4Nbv(iIndex As Integer, const GLbyte * v)
' Public Extern glVertexAttrib4Niv(iIndex As Integer, const GLint * v)
' Public Extern glVertexAttrib4Nsv(iIndex As Integer, const GLshort * v)
' Public Extern glVertexAttrib4Nub(iIndex As Integer, GLubyte x, GLubyte y, GLubyte z, GLubyte w)
' Public Extern glVertexAttrib4Nubv(iIndex As Integer, const GLubyte * v)
' Public Extern glVertexAttrib4Nuiv(iIndex As Integer, const GLuint * v)
' Public Extern glVertexAttrib4Nusv(iIndex As Integer, const GLushort * v)
' Public Extern glVertexAttrib4bv(iIndex As Integer, const GLbyte * v)
' Public Extern glVertexAttrib4d(iIndex As Integer, x As Float, As Float y, As Float z, As Float w)
' Public Extern glVertexAttrib4dv(iIndex As Integer, const As Float * v)
' Public Extern glVertexAttrib4f(iIndex As Integer, GLsingle x, GLsingle y, GLsingle z, GLsingle w)
' Public Extern glVertexAttrib4fv(iIndex As Integer, const GLsingle * v)
' Public Extern glVertexAttrib4iv(iIndex As Integer, const GLint * v)
' Public Extern glVertexAttrib4s(iIndex As Integer, GLshort x, GLshort y, GLshort z, GLshort w)
' Public Extern glVertexAttrib4sv(iIndex As Integer, const GLshort * v)
' Public Extern glVertexAttrib4ubv(iIndex As Integer, const GLubyte * v)
' Public Extern glVertexAttrib4uiv(iIndex As Integer, const GLuint * v)
' Public Extern glVertexAttrib4usv(iIndex As Integer, const GLushort * v)
' Public Extern glVertexAttribPointer(iIndex As Integer, size As Integer, iType As Integer, normalized As Boolean, stride As Integer, ipointer As Byte[]) ' FIXME: verificar

Public Const GL_PIXEL_PACK_BUFFER As Integer = &H88EB
Public Const GL_PIXEL_UNPACK_BUFFER As Integer = &H88EC
Public Const GL_PIXEL_PACK_BUFFER_BINDING As Integer = &H88ED
Public Const GL_PIXEL_UNPACK_BUFFER_BINDING As Integer = &H88EF
Public Const GL_single_MAT2x3 As Integer = &H8B65
Public Const GL_single_MAT2x4 As Integer = &H8B66
Public Const GL_single_MAT3x2 As Integer = &H8B67
Public Const GL_single_MAT3x4 As Integer = &H8B68
Public Const GL_single_MAT4x2 As Integer = &H8B69
Public Const GL_single_MAT4x3 As Integer = &H8B6A
Public Const GL_SRGB As Integer = &H8C40
Public Const GL_SRGB8 As Integer = &H8C41
Public Const GL_SRGB_ALPHA As Integer = &H8C42
Public Const GL_SRGB8_ALPHA8 As Integer = &H8C43
Public Const GL_COMPRESSED_SRGB As Integer = &H8C48
Public Const GL_COMPRESSED_SRGB_ALPHA As Integer = &H8C49

' Public Extern glUniformMatrix2x3fv(location As Integer, iSize As Integer, As Byte transpose, const GLsingle * value)
' Public Extern glUniformMatrix3x2fv(location As Integer, iSize As Integer, As Byte transpose, const GLsingle * value)
' Public Extern glUniformMatrix2x4fv(location As Integer, iSize As Integer, As Byte transpose, const GLsingle * value)
' Public Extern glUniformMatrix4x2fv(location As Integer, iSize As Integer, As Byte transpose, const GLsingle * value)
' Public Extern glUniformMatrix3x4fv(location As Integer, iSize As Integer, As Byte transpose, const GLsingle * value)
' Public Extern glUniformMatrix4x3fv(location As Integer, iSize As Integer, As Byte transpose, const GLsingle * value)

Public Const GL_COMPARE_REF_TO_TEXTURE As Integer = &H884E
Public Const GL_CLIP_DISTANCE0 As Integer = &H3000
Public Const GL_CLIP_DISTANCE1 As Integer = &H3001
Public Const GL_CLIP_DISTANCE2 As Integer = &H3002
Public Const GL_CLIP_DISTANCE3 As Integer = &H3003
Public Const GL_CLIP_DISTANCE4 As Integer = &H3004
Public Const GL_CLIP_DISTANCE5 As Integer = &H3005
Public Const GL_CLIP_DISTANCE6 As Integer = &H3006
Public Const GL_CLIP_DISTANCE7 As Integer = &H3007
Public Const GL_MAX_CLIP_DISTANCES As Integer = &H0D32
Public Const GL_MAJOR_VERSION As Integer = &H821B
Public Const GL_MINOR_VERSION As Integer = &H821C
Public Const GL_NUM_EXTENSIONS As Integer = &H821D
Public Const GL_CONTEXT_FLAGS As Integer = &H821E
Public Const GL_COMPRESSED_RED As Integer = &H8225
Public Const GL_COMPRESSED_RG As Integer = &H8226
Public Const GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT As Integer = &H00000001
Public Const GL_RGBA32F As Integer = &H8814
Public Const GL_RGB32F As Integer = &H8815
Public Const GL_RGBA16F As Integer = &H881A
Public Const GL_RGB16F As Integer = &H881B
Public Const GL_VERTEX_ATTRIB_ARRAY_INTEGER As Integer = &H88FD
Public Const GL_MAX_ARRAY_TEXTURE_LAYERS As Integer = &H88FF
Public Const GL_MIN_PROGRAM_TEXEL_OFFSET As Integer = &H8904
Public Const GL_MAX_PROGRAM_TEXEL_OFFSET As Integer = &H8905
Public Const GL_CLAMP_READ_COLOR As Integer = &H891C
Public Const GL_FIXED_ONLY As Integer = &H891D
Public Const GL_MAX_VARYING_COMPONENTS As Integer = &H8B4B
Public Const GL_TEXTURE_1D_ARRAY As Integer = &H8C18
Public Const GL_PROXY_TEXTURE_1D_ARRAY As Integer = &H8C19
Public Const GL_TEXTURE_2D_ARRAY As Integer = &H8C1A
Public Const GL_PROXY_TEXTURE_2D_ARRAY As Integer = &H8C1B
Public Const GL_TEXTURE_BINDING_1D_ARRAY As Integer = &H8C1C
Public Const GL_TEXTURE_BINDING_2D_ARRAY As Integer = &H8C1D
Public Const GL_R11F_G11F_B10F As Integer = &H8C3A
Public Const GL_UNSIGNED_INT_10F_11F_11F_REV As Integer = &H8C3B
Public Const GL_RGB9_E5 As Integer = &H8C3D
Public Const GL_UNSIGNED_INT_5_9_9_9_REV As Integer = &H8C3E
Public Const GL_TEXTURE_SHARED_SIZE As Integer = &H8C3F
Public Const GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH As Integer = &H8C76
Public Const GL_TRANSFORM_FEEDBACK_BUFFER_MODE As Integer = &H8C7F
Public Const GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS As Integer = &H8C80
Public Const GL_TRANSFORM_FEEDBACK_VARYINGS As Integer = &H8C83
Public Const GL_TRANSFORM_FEEDBACK_BUFFER_START As Integer = &H8C84
Public Const GL_TRANSFORM_FEEDBACK_BUFFER_SIZE As Integer = &H8C85
Public Const GL_PRIMITIVES_GENERATED As Integer = &H8C87
Public Const GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN As Integer = &H8C88
Public Const GL_RASTERIZER_DISCARD As Integer = &H8C89
Public Const GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS As Integer = &H8C8A
Public Const GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS As Integer = &H8C8B
Public Const GL_INTERLEAVED_ATTRIBS As Integer = &H8C8C
Public Const GL_SEPARATE_ATTRIBS As Integer = &H8C8D
Public Const GL_TRANSFORM_FEEDBACK_BUFFER As Integer = &H8C8E
Public Const GL_TRANSFORM_FEEDBACK_BUFFER_BINDING As Integer = &H8C8F
Public Const GL_RGBA32UI As Integer = &H8D70
Public Const GL_RGB32UI As Integer = &H8D71
Public Const GL_RGBA16UI As Integer = &H8D76
Public Const GL_RGB16UI As Integer = &H8D77
Public Const GL_RGBA8UI As Integer = &H8D7C
Public Const GL_RGB8UI As Integer = &H8D7D
Public Const GL_RGBA32I As Integer = &H8D82
Public Const GL_RGB32I As Integer = &H8D83
Public Const GL_RGBA16I As Integer = &H8D88
Public Const GL_RGB16I As Integer = &H8D89
Public Const GL_RGBA8I As Integer = &H8D8E
Public Const GL_RGB8I As Integer = &H8D8F
Public Const GL_RED_INTEGER As Integer = &H8D94
Public Const GL_GREEN_INTEGER As Integer = &H8D95
Public Const GL_BLUE_INTEGER As Integer = &H8D96
Public Const GL_RGB_INTEGER As Integer = &H8D98
Public Const GL_RGBA_INTEGER As Integer = &H8D99
Public Const GL_BGR_INTEGER As Integer = &H8D9A
Public Const GL_BGRA_INTEGER As Integer = &H8D9B
Public Const GL_SAMPLER_1D_ARRAY As Integer = &H8DC0
Public Const GL_SAMPLER_2D_ARRAY As Integer = &H8DC1
Public Const GL_SAMPLER_1D_ARRAY_SHADOW As Integer = &H8DC3
Public Const GL_SAMPLER_2D_ARRAY_SHADOW As Integer = &H8DC4
Public Const GL_SAMPLER_CUBE_SHADOW As Integer = &H8DC5
Public Const GL_UNSIGNED_INT_VEC2 As Integer = &H8DC6
Public Const GL_UNSIGNED_INT_VEC3 As Integer = &H8DC7
Public Const GL_UNSIGNED_INT_VEC4 As Integer = &H8DC8
Public Const GL_INT_SAMPLER_1D As Integer = &H8DC9
Public Const GL_INT_SAMPLER_2D As Integer = &H8DCA
Public Const GL_INT_SAMPLER_3D As Integer = &H8DCB
Public Const GL_INT_SAMPLER_CUBE As Integer = &H8DCC
Public Const GL_INT_SAMPLER_1D_ARRAY As Integer = &H8DCE
Public Const GL_INT_SAMPLER_2D_ARRAY As Integer = &H8DCF
Public Const GL_UNSIGNED_INT_SAMPLER_1D As Integer = &H8DD1
Public Const GL_UNSIGNED_INT_SAMPLER_2D As Integer = &H8DD2
Public Const GL_UNSIGNED_INT_SAMPLER_3D As Integer = &H8DD3
Public Const GL_UNSIGNED_INT_SAMPLER_CUBE As Integer = &H8DD4
Public Const GL_UNSIGNED_INT_SAMPLER_1D_ARRAY As Integer = &H8DD6
Public Const GL_UNSIGNED_INT_SAMPLER_2D_ARRAY As Integer = &H8DD7
Public Const GL_QUERY_WAIT As Integer = &H8E13
Public Const GL_QUERY_NO_WAIT As Integer = &H8E14
Public Const GL_QUERY_BY_REGION_WAIT As Integer = &H8E15
Public Const GL_QUERY_BY_REGION_NO_WAIT As Integer = &H8E16
Public Const GL_BUFFER_ACCESS_FLAGS As Integer = &H911F
Public Const GL_BUFFER_MAP_LENGTH As Integer = &H9120
Public Const GL_BUFFER_MAP_OFFSET As Integer = &H9121
Public Const GL_DEPTH_COMPONENT32F As Integer = &H8CAC
Public Const GL_DEPTH32F_STENCIL8 As Integer = &H8CAD
Public Const GL_single_32_UNSIGNED_INT_24_8_REV As Integer = &H8DAD
Public Const GL_INVALID_FRAMEBUFFER_OPERATION As Integer = &H0506
Public Const GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING As Integer = &H8210
Public Const GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE As Integer = &H8211
Public Const GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE As Integer = &H8212
Public Const GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE As Integer = &H8213
Public Const GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE As Integer = &H8214
Public Const GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE As Integer = &H8215
Public Const GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE As Integer = &H8216
Public Const GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE As Integer = &H8217
Public Const GL_FRAMEBUFFER_DEFAULT As Integer = &H8218
Public Const GL_FRAMEBUFFER_UNDEFINED As Integer = &H8219
Public Const GL_DEPTH_STENCIL_ATTACHMENT As Integer = &H821A
Public Const GL_MAX_RENDERBUFFER_SIZE As Integer = &H84E8
Public Const GL_DEPTH_STENCIL As Integer = &H84F9
Public Const GL_UNSIGNED_INT_24_8 As Integer = &H84FA
Public Const GL_DEPTH24_STENCIL8 As Integer = &H88F0
Public Const GL_TEXTURE_STENCIL_SIZE As Integer = &H88F1
Public Const GL_TEXTURE_RED_TYPE As Integer = &H8C10
Public Const GL_TEXTURE_GREEN_TYPE As Integer = &H8C11
Public Const GL_TEXTURE_BLUE_TYPE As Integer = &H8C12
Public Const GL_TEXTURE_ALPHA_TYPE As Integer = &H8C13
Public Const GL_TEXTURE_DEPTH_TYPE As Integer = &H8C16
Public Const GL_UNSIGNED_NORMALIZED As Integer = &H8C17
Public Const GL_FRAMEBUFFER_BINDING As Integer = &H8CA6
Public Const GL_DRAW_FRAMEBUFFER_BINDING As Integer = &H8CA6
Public Const GL_RENDERBUFFER_BINDING As Integer = &H8CA7
Public Const GL_READ_FRAMEBUFFER As Integer = &H8CA8
Public Const GL_DRAW_FRAMEBUFFER As Integer = &H8CA9
Public Const GL_READ_FRAMEBUFFER_BINDING As Integer = &H8CAA
Public Const GL_RENDERBUFFER_SAMPLES As Integer = &H8CAB
Public Const GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE As Integer = &H8CD0
Public Const GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME As Integer = &H8CD1
Public Const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL As Integer = &H8CD2
Public Const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE As Integer = &H8CD3
Public Const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER As Integer = &H8CD4
Public Const GL_FRAMEBUFFER_COMPLETE As Integer = &H8CD5
Public Const GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT As Integer = &H8CD6
Public Const GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT As Integer = &H8CD7
Public Const GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER As Integer = &H8CDB
Public Const GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER As Integer = &H8CDC
Public Const GL_FRAMEBUFFER_UNSUPPORTED As Integer = &H8CDD
Public Const GL_MAX_COLOR_ATTACHMENTS As Integer = &H8CDF
Public Const GL_COLOR_ATTACHMENT0 As Integer = &H8CE0
Public Const GL_COLOR_ATTACHMENT1 As Integer = &H8CE1
Public Const GL_COLOR_ATTACHMENT2 As Integer = &H8CE2
Public Const GL_COLOR_ATTACHMENT3 As Integer = &H8CE3
Public Const GL_COLOR_ATTACHMENT4 As Integer = &H8CE4
Public Const GL_COLOR_ATTACHMENT5 As Integer = &H8CE5
Public Const GL_COLOR_ATTACHMENT6 As Integer = &H8CE6
Public Const GL_COLOR_ATTACHMENT7 As Integer = &H8CE7
Public Const GL_COLOR_ATTACHMENT8 As Integer = &H8CE8
Public Const GL_COLOR_ATTACHMENT9 As Integer = &H8CE9
Public Const GL_COLOR_ATTACHMENT10 As Integer = &H8CEA
Public Const GL_COLOR_ATTACHMENT11 As Integer = &H8CEB
Public Const GL_COLOR_ATTACHMENT12 As Integer = &H8CEC
Public Const GL_COLOR_ATTACHMENT13 As Integer = &H8CED
Public Const GL_COLOR_ATTACHMENT14 As Integer = &H8CEE
Public Const GL_COLOR_ATTACHMENT15 As Integer = &H8CEF
Public Const GL_COLOR_ATTACHMENT16 As Integer = &H8CF0
Public Const GL_COLOR_ATTACHMENT17 As Integer = &H8CF1
Public Const GL_COLOR_ATTACHMENT18 As Integer = &H8CF2
Public Const GL_COLOR_ATTACHMENT19 As Integer = &H8CF3
Public Const GL_COLOR_ATTACHMENT20 As Integer = &H8CF4
Public Const GL_COLOR_ATTACHMENT21 As Integer = &H8CF5
Public Const GL_COLOR_ATTACHMENT22 As Integer = &H8CF6
Public Const GL_COLOR_ATTACHMENT23 As Integer = &H8CF7
Public Const GL_COLOR_ATTACHMENT24 As Integer = &H8CF8
Public Const GL_COLOR_ATTACHMENT25 As Integer = &H8CF9
Public Const GL_COLOR_ATTACHMENT26 As Integer = &H8CFA
Public Const GL_COLOR_ATTACHMENT27 As Integer = &H8CFB
Public Const GL_COLOR_ATTACHMENT28 As Integer = &H8CFC
Public Const GL_COLOR_ATTACHMENT29 As Integer = &H8CFD
Public Const GL_COLOR_ATTACHMENT30 As Integer = &H8CFE
Public Const GL_COLOR_ATTACHMENT31 As Integer = &H8CFF
Public Const GL_DEPTH_ATTACHMENT As Integer = &H8D00
Public Const GL_STENCIL_ATTACHMENT As Integer = &H8D20
Public Const GL_FRAMEBUFFER As Integer = &H8D40
Public Const GL_RENDERBUFFER As Integer = &H8D41
Public Const GL_RENDERBUFFER_WIDTH As Integer = &H8D42
Public Const GL_RENDERBUFFER_HEIGHT As Integer = &H8D43
Public Const GL_RENDERBUFFER_INTERNAL_FORMAT As Integer = &H8D44
Public Const GL_STENCIL_INDEX1 As Integer = &H8D46
Public Const GL_STENCIL_INDEX4 As Integer = &H8D47
Public Const GL_STENCIL_INDEX8 As Integer = &H8D48
Public Const GL_STENCIL_INDEX16 As Integer = &H8D49
Public Const GL_RENDERBUFFER_RED_SIZE As Integer = &H8D50
Public Const GL_RENDERBUFFER_GREEN_SIZE As Integer = &H8D51
Public Const GL_RENDERBUFFER_BLUE_SIZE As Integer = &H8D52
Public Const GL_RENDERBUFFER_ALPHA_SIZE As Integer = &H8D53
Public Const GL_RENDERBUFFER_DEPTH_SIZE As Integer = &H8D54
Public Const GL_RENDERBUFFER_STENCIL_SIZE As Integer = &H8D55
Public Const GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE As Integer = &H8D56
Public Const GL_MAX_SAMPLES As Integer = &H8D57
Public Const GL_FRAMEBUFFER_SRGB As Integer = &H8DB9
Public Const GL_HALF_single As Integer = &H140B
Public Const GL_MAP_READ_BIT As Integer = &H0001
Public Const GL_MAP_WRITE_BIT As Integer = &H0002
Public Const GL_MAP_INVALIDATE_RANGE_BIT As Integer = &H0004
Public Const GL_MAP_INVALIDATE_BUFFER_BIT As Integer = &H0008
Public Const GL_MAP_FLUSH_EXPLICIT_BIT As Integer = &H0010
Public Const GL_MAP_UNSYNCHRONIZED_BIT As Integer = &H0020
Public Const GL_COMPRESSED_RED_RGTC1 As Integer = &H8DBB
Public Const GL_COMPRESSED_SIGNED_RED_RGTC1 As Integer = &H8DBC
Public Const GL_COMPRESSED_RG_RGTC2 As Integer = &H8DBD
Public Const GL_COMPRESSED_SIGNED_RG_RGTC2 As Integer = &H8DBE
Public Const GL_RG As Integer = &H8227
Public Const GL_RG_INTEGER As Integer = &H8228
Public Const GL_R8 As Integer = &H8229
Public Const GL_R16 As Integer = &H822A
Public Const GL_RG8 As Integer = &H822B
Public Const GL_RG16 As Integer = &H822C
Public Const GL_R16F As Integer = &H822D
Public Const GL_R32F As Integer = &H822E
Public Const GL_RG16F As Integer = &H822F
Public Const GL_RG32F As Integer = &H8230
Public Const GL_R8I As Integer = &H8231
Public Const GL_R8UI As Integer = &H8232
Public Const GL_R16I As Integer = &H8233
Public Const GL_R16UI As Integer = &H8234
Public Const GL_R32I As Integer = &H8235
Public Const GL_R32UI As Integer = &H8236
Public Const GL_RG8I As Integer = &H8237
Public Const GL_RG8UI As Integer = &H8238
Public Const GL_RG16I As Integer = &H8239
Public Const GL_RG16UI As Integer = &H823A
Public Const GL_RG32I As Integer = &H823B
Public Const GL_RG32UI As Integer = &H823C
Public Const GL_VERTEX_ARRAY_BINDING As Integer = &H85B5
'
' Public Extern glColorMaski(iIndex As Integer, as byte r, as byte g, as byte b, as byte a)
' Public Extern glGetBooleani_v(iTarget As Integer, iIndex As Integer, as byte data as byte[])
' Public Extern glGetIntegeri_v(iTarget As Integer, iIndex As Integer, GLint data as byte[])
' Public Extern glEnablei(iTarget As Integer, iIndex As Integer)
' Public Extern glDisablei(iTarget As Integer, iIndex As Integer)
' GLAPI as byte APIENTRY glIsEnabledi(iTarget As Integer, iIndex As Integer)
' Public Extern glBeginTransformFeedback(as integer primitiveMode)
' Public Extern glEndTransformFeedback()
' Public Extern glBindBufferRange(iTarget As Integer, iIndex As Integer, buffer as integer, offset as integer, size as integer)
' Public Extern glBindBufferBase(iTarget As Integer, iIndex As Integer, buffer as integer)
' Public Extern glTransformFeedbackVaryings(program As Integer, iSize as Integer, const GLchar * const * varyings, iBuff as integerferMode)
' Public Extern glGetTransformFeedbackVarying(program As Integer, iIndex As Integer, BufSize As Integer, legth as integer[], GLsizei * size, as integer * type, name as string)
' Public Extern glClampColor(iTarget As Integer, as integer clamp)
' Public Extern glBeginConditionalRender(id as integer, Mode As Integer)
' Public Extern glEndConditionalRender()
' Public Extern glVertexAttribIPointer(iIndex As Integer, size as integer, iType As Integer, stride as integer, const * pointer)
' Public Extern glGetVertexAttribIiv(iIndex As Integer, iPname As Integer, params as integer[])
' Public Extern glGetVertexAttribIuiv(iIndex As Integer, iPname As Integer, params as integer[])
' Public Extern glVertexAttribI1i(iIndex As Integer, x As Integer)
' Public Extern glVertexAttribI2i(iIndex As Integer, x As Integer, y As Integer)
' Public Extern glVertexAttribI3i(iIndex As Integer, x As Integer, y As Integer, GLint z)
' Public Extern glVertexAttribI4i(iIndex As Integer, x As Integer, y As Integer, GLint z, GLint w)
' Public Extern glVertexAttribI1ui(iIndex As Integer, GLuint x)
' Public Extern glVertexAttribI2ui(iIndex As Integer, GLuint x, GLuint y)
' Public Extern glVertexAttribI3ui(iIndex As Integer, GLuint x, GLuint y, GLuint z)
' Public Extern glVertexAttribI4ui(iIndex As Integer, GLuint x, GLuint y, GLuint z, GLuint w)
' Public Extern glVertexAttribI1iv(iIndex As Integer, const GLint * v)
' Public Extern glVertexAttribI2iv(iIndex As Integer, const GLint * v)
' Public Extern glVertexAttribI3iv(iIndex As Integer, const GLint * v)
' Public Extern glVertexAttribI4iv(iIndex As Integer, const GLint * v)
' Public Extern glVertexAttribI1uiv(iIndex As Integer, const GLuint * v)
' Public Extern glVertexAttribI2uiv(iIndex As Integer, const GLuint * v)
' Public Extern glVertexAttribI3uiv(iIndex As Integer, const GLuint * v)
' Public Extern glVertexAttribI4uiv(iIndex As Integer, const GLuint * v)
' Public Extern glVertexAttribI4bv(iIndex As Integer, const GLbyte * v)
' Public Extern glVertexAttribI4sv(iIndex As Integer, const GLshort * v)
' Public Extern glVertexAttribI4ubv(iIndex As Integer, const GLubyte * v)
' Public Extern glVertexAttribI4usv(iIndex As Integer, const GLushort * v)
' Public Extern glGetUniformuiv(program As Integer, location as Integer, params as integer[])
' Public Extern glBindFragDataLocation(program As Integer, GLuint color, const name as string)
' Public Extern Function glGetFragDataLocation(program As Integer, const name as string)
' Public Extern glUniform1ui(location as Integer, GLuint v0)
' Public Extern glUniform2ui(location as Integer, GLuint v0, GLuint v1)
' Public Extern glUniform3ui(location as Integer, GLuint v0, GLuint v1, GLuint v2)
' Public Extern glUniform4ui(location as Integer, GLuint v0, GLuint v1, GLuint v2, GLuint v3)
' Public Extern glUniform1uiv(location as Integer, iSize as Integer, const GLuint * value)
' Public Extern glUniform2uiv(location as Integer, iSize as Integer, const GLuint * value)
' Public Extern glUniform3uiv(location as Integer, iSize as Integer, const GLuint * value)
' Public Extern glUniform4uiv(location as Integer, iSize as Integer, const GLuint * value)
' Public Extern glTexParameterIiv(iTarget As Integer, iPname As Integer, inxParams as integer[])
' Public Extern glTexParameterIuiv(iTarget As Integer, iPname As Integer, const params as integer[])
' Public Extern glGetTexParameterIiv(iTarget As Integer, iPname As Integer, params as integer[])
' Public Extern glGetTexParameterIuiv(iTarget As Integer, iPname As Integer, params as integer[])
' Public Extern glClearBufferiv(iBuff as integerfer, GLint drawbuffer, value as integer[])
' Public Extern glClearBufferuiv(iBuff as integerfer, GLint drawbuffer, const GLuint * value)
' Public Extern glClearBufferfv(iBuff as integerfer, GLint drawbuffer, const GLsingle * value)
' Public Extern glClearBufferfi(iBuff as integerfer, GLint drawbuffer, GLsingle depth, GLint stencil)
' GLAPI const GLubyte * APIENTRY glGetStringi(as integer name, iIndex As Integer)
' GLAPI as byte APIENTRY glIsRenderbuffer(GLuint renderbuffer)
' Public Extern glBindRenderbuffer(iTarget As Integer, GLuint renderbuffer)
' Public Extern glDeleteRenderbuffers(n as Integer, const GLuint * renderbuffers)
' Public Extern glGenRenderbuffers(n as Integer, GLuint * renderbuffers)
' Public Extern glRenderbufferStorage(iTarget As Integer,internalformat as integer, iWidth As Integer, iHeight As Integer)
' Public Extern glGetRenderbufferParameteriv(iTarget As Integer, iPname As Integer, params as integer[])
' GLAPI as byte APIENTRY glIsFramebuffer(GLuint framebuffer)
' Public Extern glBindFramebuffer(iTarget As Integer, GLuint framebuffer)
' Public Extern glDeleteFramebuffers(n as Integer, const GLuint * framebuffers)
' Public Extern glGenFramebuffers(n as Integer, GLuint * framebuffers)
' GLAPI as integer APIENTRY glCheckFramebufferStatus(iTarget As Integer)
' Public Extern glFramebufferTexture1D(iTarget As Integer, as integer attachment, as integer textarget, texture as Integer, iLevel as integer)
' Public Extern glFramebufferTexture2D(iTarget As Integer, as integer attachment, as integer textarget, texture as Integer, iLevel as integer)
' Public Extern glFramebufferTexture3D(iTarget As Integer, as integer attachment, as integer textarget, texture as Integer, iLevel as integer, zOffset as integer)
' Public Extern glFramebufferRenderbuffer(iTarget As Integer, as integer attachment, as integer renderbuffertarget, GLuint renderbuffer)
' Public Extern glGetFramebufferAttachmentParameteriv(iTarget As Integer, as integer attachment, iPname As Integer, params as integer[])
' Public Extern glGenerateMipmap(iTarget As Integer)
' Public Extern glBlitFramebuffer(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GiMaskBitField as integer, as integer filter)
' Public Extern glRenderbufferStorageMultisample(iTarget As Integer, GLsizei samples,internalformat as integer, iWidth As Integer, iHeight As Integer)
' Public Extern glFramebufferTextureLayer(iTarget As Integer, as integer attachment, texture as Integer, iLevel as integer, GLint layer)
' GLAPI * APIENTRY glMapBufferRange(iTarget As Integer, offset as integer, GLsizeiptr length, GLbitfield access)
' Public Extern glFlushMappedBufferRange(iTarget As Integer, offset as integer, GLsizeiptr length)
' Public Extern glBindVertexArray(GLuint array)
' Public Extern glDeleteVertexArrays(n as Integer, const GLuint * arrays)
' Public Extern glGenVertexArrays(n as Integer, GLuint * arrays)
' GLAPI as byte APIENTRY glIsVertexArray(GLuint array)
' Public Const GL_VERSION_3_1 1
' Public Const GL_SAMPLER_2D_RECT As Integer = &H8B63
' Public Const GL_SAMPLER_2D_RECT_SHADOW As Integer = &H8B64
' Public Const GL_SAMPLER_BUFFER As Integer = &H8DC2
' Public Const GL_INT_SAMPLER_2D_RECT As Integer = &H8DCD
' Public Const GL_INT_SAMPLER_BUFFER As Integer = &H8DD0
' Public Const GL_UNSIGNED_INT_SAMPLER_2D_RECT As Integer = &H8DD5
' Public Const GL_UNSIGNED_INT_SAMPLER_BUFFER As Integer = &H8DD8
' Public Const GL_TEXTURE_BUFFER As Integer = &H8C2A
' Public Const GL_MAX_TEXTURE_BUFFER_SIZE As Integer = &H8C2B
' Public Const GL_TEXTURE_BINDING_BUFFER As Integer = &H8C2C
' Public Const GL_TEXTURE_BUFFER_DATA_STORE_BINDING As Integer = &H8C2D
' Public Const GL_TEXTURE_RECTANGLE As Integer = &H84F5
' Public Const GL_TEXTURE_BINDING_RECTANGLE As Integer = &H84F6
' Public Const GL_PROXY_TEXTURE_RECTANGLE As Integer = &H84F7
' Public Const GL_MAX_RECTANGLE_TEXTURE_SIZE As Integer = &H84F8
' Public Const GL_R8_SNORM As Integer = &H8F94
' Public Const GL_RG8_SNORM As Integer = &H8F95
' Public Const GL_RGB8_SNORM As Integer = &H8F96
' Public Const GL_RGBA8_SNORM As Integer = &H8F97
' Public Const GL_R16_SNORM As Integer = &H8F98
' Public Const GL_RG16_SNORM As Integer = &H8F99
' Public Const GL_RGB16_SNORM As Integer = &H8F9A
' Public Const GL_RGBA16_SNORM As Integer = &H8F9B
' Public Const GL_SIGNED_NORMALIZED As Integer = &H8F9C
' Public Const GL_PRIMITIVE_RESTART As Integer = &H8F9D
' Public Const GL_PRIMITIVE_RESTART_INDEX As Integer = &H8F9E
' Public Const GL_COPY_READ_BUFFER As Integer = &H8F36
' Public Const GL_COPY_WRITE_BUFFER As Integer = &H8F37
' Public Const GL_UNIFORM_BUFFER As Integer = &H8A11
' Public Const GL_UNIFORM_BUFFER_BINDING As Integer = &H8A28
' Public Const GL_UNIFORM_BUFFER_START As Integer = &H8A29
' Public Const GL_UNIFORM_BUFFER_SIZE As Integer = &H8A2A
' Public Const GL_MAX_VERTEX_UNIFORM_BLOCKS As Integer = &H8A2B
' Public Const GL_MAX_GEOMETRY_UNIFORM_BLOCKS As Integer = &H8A2C
' Public Const GL_MAX_FRAGMENT_UNIFORM_BLOCKS As Integer = &H8A2D
' Public Const GL_MAX_COMBINED_UNIFORM_BLOCKS As Integer = &H8A2E
' Public Const GL_MAX_UNIFORM_BUFFER_BINDINGS As Integer = &H8A2F
' Public Const GL_MAX_UNIFORM_BLOCK_SIZE As Integer = &H8A30
' Public Const GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS As Integer = &H8A31
' Public Const GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS As Integer = &H8A32
' Public Const GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS As Integer = &H8A33
' Public Const GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT As Integer = &H8A34
' Public Const GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH As Integer = &H8A35
' Public Const GL_ACTIVE_UNIFORM_BLOCKS As Integer = &H8A36
' Public Const GL_UNIFORM_TYPE As Integer = &H8A37
' Public Const GL_UNIFORM_SIZE As Integer = &H8A38
' Public Const GL_UNIFORM_NAME_LENGTH As Integer = &H8A39
' Public Const GL_UNIFORM_BLOCK_INDEX As Integer = &H8A3A
' Public Const GL_UNIFORM_OFFSET As Integer = &H8A3B
' Public Const GL_UNIFORM_ARRAY_STRIDE As Integer = &H8A3C
' Public Const GL_UNIFORM_MATRIX_STRIDE As Integer = &H8A3D
' Public Const GL_UNIFORM_IS_ROW_MAJOR As Integer = &H8A3E
' Public Const GL_UNIFORM_BLOCK_BINDING As Integer = &H8A3F
' Public Const GL_UNIFORM_BLOCK_DATA_SIZE As Integer = &H8A40
' Public Const GL_UNIFORM_BLOCK_NAME_LENGTH As Integer = &H8A41
' Public Const GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS As Integer = &H8A42
' Public Const GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES As Integer = &H8A43
' Public Const GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER As Integer = &H8A44
' Public Const GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER As Integer = &H8A45
' Public Const GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER As Integer = &H8A46
' Public Const GL_INVALID_INDEX As Integer = & HFFFFFFFFu
'
' Public Extern glDrawArraysInstanced(Mode As Integer, first as integer, iSize as Integer, GLsizei instancecount)
' Public Extern glDrawElementsInstanced(Mode As Integer, iSize as Integer, iType As Integer, const * indices, GLsizei instancecount)
' Public Extern glTexBuffer(iTarget As Integer,internalformat as integer, buffer as integer)
' Public Extern glPrimitiveRestartIndex(iIndex As Integer)
' Public Extern glCopyBufferSubData(as integer readTarget, as integer writeTarget, GLintptr readOffset, GLintptr writeOffset, size as integer)
' Public Extern glGetUniformIndices(program As Integer, GLsizei uniformCount, const GLchar * const * uniformNames, GLuint * uniformIndices)
' Public Extern glGetActiveUniformsiv(program As Integer, GLsizei uniformCount, const GLuint * uniformIndices, iPname As Integer, params as integer[])
' Public Extern glGetActiveUniformName(program As Integer, GLuint uniformIndex, BufSize As Integer, legth as integer[], GLchar * uniformName)
' GLAPI GLuint APIENTRY glGetUniformBlockIndex(program As Integer, const GLchar * uniformBlockName)
' Public Extern glGetActiveUniformBlockiv(program As Integer, GLuint uniformBlockIndex, iPname As Integer, params as integer[])
' Public Extern glGetActiveUniformBlockName(program As Integer, GLuint uniformBlockIndex, BufSize As Integer, legth as integer[], GLchar * uniformBlockName)
' Public Extern glUniformBlockBinding(program As Integer, GLuint uniformBlockIndex, GLuint uniformBlockBinding)
'
' Public Const GL_VERSION_3_2 1
'
' Public Const GL_CONTEXT_CORE_PROFILE_BIT As Integer = &H00000001
' Public Const GL_CONTEXT_COMPATIBILITY_PROFILE_BIT As Integer = &H00000002
' Public Const GL_LINES_ADJACENCY As Integer = &H000A
' Public Const GL_LINE_STRIP_ADJACENCY As Integer = &H000B
' Public Const GL_TRIANGLES_ADJACENCY As Integer = &H000C
' Public Const GL_TRIANGLE_STRIP_ADJACENCY As Integer = &H000D
' Public Const GL_PROGRAM_POINT_SIZE As Integer = &H8642
' Public Const GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS As Integer = &H8C29
' Public Const GL_FRAMEBUFFER_ATTACHMENT_LAYERED As Integer = &H8DA7
' Public Const GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS As Integer = &H8DA8
' Public Const GL_GEOMETRY_SHADER As Integer = &H8DD9
' Public Const GL_GEOMETRY_VERTICES_OUT As Integer = &H8916
' Public Const GL_GEOMETRY_INPUT_TYPE As Integer = &H8917
' Public Const GL_GEOMETRY_OUTPUT_TYPE As Integer = &H8918
' Public Const GL_MAX_GEOMETRY_UNIFORM_COMPONENTS As Integer = &H8DDF
' Public Const GL_MAX_GEOMETRY_OUTPUT_VERTICES As Integer = &H8DE0
' Public Const GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS As Integer = &H8DE1
' Public Const GL_MAX_VERTEX_OUTPUT_COMPONENTS As Integer = &H9122
' Public Const GL_MAX_GEOMETRY_INPUT_COMPONENTS As Integer = &H9123
' Public Const GL_MAX_GEOMETRY_OUTPUT_COMPONENTS As Integer = &H9124
' Public Const GL_MAX_FRAGMENT_INPUT_COMPONENTS As Integer = &H9125
' Public Const GL_CONTEXT_PROFILE_MASK As Integer = &H9126
' Public Const GL_DEPTH_CLAMP As Integer = &H864F
' Public Const GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION As Integer = &H8E4C
' Public Const GL_FIRST_VERTEX_CONVENTION As Integer = &H8E4D
' Public Const GL_LAST_VERTEX_CONVENTION As Integer = &H8E4E
' Public Const GL_PROVOKING_VERTEX As Integer = &H8E4F
' Public Const GL_TEXTURE_CUBE_MAP_SEAMLESS As Integer = &H884F
' Public Const GL_MAX_SERVER_WAIT_TIMEOUT As Integer = &H9111
' Public Const GL_OBJECT_TYPE As Integer = &H9112
' Public Const GL_SYNC_CONDITION As Integer = &H9113
' Public Const GL_SYNC_STATUS As Integer = &H9114
' Public Const GL_SYNC_FLAGS As Integer = &H9115
' Public Const GL_SYNC_FENCE As Integer = &H9116
' Public Const GL_SYNC_GPU_COMMANDS_COMPLETE As Integer = &H9117
' Public Const GL_UNSIGNALED As Integer = &H9118
' Public Const GL_SIGNALED As Integer = &H9119
' Public Const GL_ALREADY_SIGNALED As Integer = &H911A
' Public Const GL_TIMEOUT_EXPIRED As Integer = &H911B
' Public Const GL_CONDITION_SATISFIED As Integer = &H911C
' Public Const GL_WAIT_FAILED As Integer = &H911D
' Public Const GL_TIMEOUT_IGNORED As Integer = & HFFFFFFFFFFFFFFFFull
' Public Const GL_SYNC_FLUSH_COMMANDS_BIT As Integer = &H00000001
' Public Const GL_SAMPLE_POSITION As Integer = &H8E50
' Public Const GL_SAMPLE_MASK As Integer = &H8E51
' Public Const GL_SAMPLE_MASK_VALUE As Integer = &H8E52
' Public Const GL_MAX_SAMPLE_MASK_WORDS As Integer = &H8E59
' Public Const GL_TEXTURE_2D_MULTISAMPLE As Integer = &H9100
' Public Const GL_PROXY_TEXTURE_2D_MULTISAMPLE As Integer = &H9101
' Public Const GL_TEXTURE_2D_MULTISAMPLE_ARRAY As Integer = &H9102
' Public Const GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY As Integer = &H9103
' Public Const GL_TEXTURE_BINDING_2D_MULTISAMPLE As Integer = &H9104
' Public Const GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY As Integer = &H9105
' Public Const GL_TEXTURE_SAMPLES As Integer = &H9106
' Public Const GL_TEXTURE_FIXED_SAMPLE_LOCATIONS As Integer = &H9107
' Public Const GL_SAMPLER_2D_MULTISAMPLE As Integer = &H9108
' Public Const GL_INT_SAMPLER_2D_MULTISAMPLE As Integer = &H9109
' Public Const GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE As Integer = &H910A
' Public Const GL_SAMPLER_2D_MULTISAMPLE_ARRAY As Integer = &H910B
' Public Const GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY As Integer = &H910C
' Public Const GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY As Integer = &H910D
' Public Const GL_MAX_COLOR_TEXTURE_SAMPLES As Integer = &H910E
' Public Const GL_MAX_DEPTH_TEXTURE_SAMPLES As Integer = &H910F
' Public Const GL_MAX_INTEGER_SAMPLES As Integer = &H9110
'
' Public Extern glDrawElementsBaseVertex(Mode As Integer, iSize as Integer, iType As Integer, const * indices, GLint basevertex)
' Public Extern glDrawRangeElementsBaseVertex(Mode As Integer, start as integer, iEnd as integer , iSize as Integer, iType As Integer, const * indices, GLint basevertex)
' Public Extern glDrawElementsInstancedBaseVertex(Mode As Integer, iSize as Integer, iType As Integer, const * indices, GLsizei instancecount, GLint basevertex)
' Public Extern glMultiDrawElementsBaseVertex(Mode As Integer, const GLsizei * count, iType As Integer, const * const * indices, drawcount as integer, const GLint * basevertex)
' Public Extern glProvokingVertex(Mode As Integer)
' GLAPI GLsync APIENTRY glFenceSync(as integer condition, GLbitfield flags)
' GLAPI as byte APIENTRY glIsSync(GLsync sync)
' Public Extern glDeleteSync(GLsync sync)
' GLAPI as integer APIENTRY glClientWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout)
' Public Extern glWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout)
' Public Extern glGetInteger64v(iPname As Integer, GLint64 data as byte[])
' Public Extern glGetSynciv(GLsync sync, iPname As Integer, BufSize As Integer, legth as integer[], GLint * values)
' Public Extern glGetInteger64i_v(iTarget As Integer, iIndex As Integer, GLint64 data as byte[])
' Public Extern glGetBufferParameteri64v(iTarget As Integer, iPname As Integer, GLint64 * params)
' Public Extern glFramebufferTexture(iTarget As Integer, as integer attachment, texture as Integer, iLevel as integer)
' Public Extern glTexImage2DMultisample(iTarget As Integer, GLsizei samples,internalformat as integer, iWidth As Integer, iHeight As Integer, as byte fixedsamplelocations)
' Public Extern glTexImage3DMultisample(iTarget As Integer, GLsizei samples,internalformat as integer, iWidth As Integer, iHeight As Integer, iDepth as integer, as byte fixedsamplelocations)
' Public Extern glGetMultisamplefv(iPname As Integer, iIndex As Integer, GLsingle * val)
' Public Extern glSampleMaski(mask as integerNumber, GiMaskBitField as integer)
' Public Const GL_VERSION_3_3 1
' Public Const GL_VERTEX_ATTRIB_ARRAY_DIVISOR As Integer = &H88FE
' Public Const GL_SRC1_COLOR As Integer = &H88F9
' Public Const GL_ONE_MINUS_SRC1_COLOR As Integer = &H88FA
' Public Const GL_ONE_MINUS_SRC1_ALPHA As Integer = &H88FB
' Public Const GL_MAX_DUAL_SOURCE_DRAW_BUFFERS As Integer = &H88FC
' Public Const GL_ANY_SAMPLES_PASSED As Integer = &H8C2F
' Public Const GL_SAMPLER_BINDING As Integer = &H8919
' Public Const GL_RGB10_A2UI As Integer = &H906F
' Public Const GL_TEXTURE_SWIZZLE_R As Integer = &H8E42
' Public Const GL_TEXTURE_SWIZZLE_G As Integer = &H8E43
' Public Const GL_TEXTURE_SWIZZLE_B As Integer = &H8E44
' Public Const GL_TEXTURE_SWIZZLE_A As Integer = &H8E45
' Public Const GL_TEXTURE_SWIZZLE_RGBA As Integer = &H8E46
' Public Const GL_TIME_ELAPSED As Integer = &H88BF
' Public Const GL_TIMESTAMP As Integer = &H8E28
' Public Const GL_INT_2_10_10_10_REV As Integer = &H8D9F
'
' Public Extern glBindFragDataLocationIndexed(program As Integer, GLuint colorNumber, iIndex As Integer, const name as string)
' Public Extern Function glGetFragDataIndex(program As Integer, const name as string)
' Public Extern glGenSamplers(iSize as Integer, GLuint * samplers)
' Public Extern glDeleteSamplers(iSize as Integer, const GLuint * samplers)
' GLAPI as byte APIENTRY glIsSampler(GLuint sampler)
' Public Extern glBindSampler(GLuint unit, GLuint sampler)
' Public Extern glSamplerParameteri(GLuint sampler, iPname As Integer, iParam As Integer)
' Public Extern glSamplerParameteriv(GLuint sampler, iPname As Integer, const GLint * param)
' Public Extern glSamplerParameterf(GLuint sampler, iPname As Integer, fParam As single)
' Public Extern glSamplerParameterfv(GLuint sampler, iPname As Integer, const GLsingle * param)
' Public Extern glSamplerParameterIiv(GLuint sampler, iPname As Integer, const GLint * param)
' Public Extern glSamplerParameterIuiv(GLuint sampler, iPname As Integer, const GLuint * param)
' Public Extern glGetSamplerParameteriv(GLuint sampler, iPname As Integer, params as integer[])
' Public Extern glGetSamplerParameterIiv(GLuint sampler, iPname As Integer, params as integer[])
' Public Extern glGetSamplerParameterfv(GLuint sampler, iPname As Integer, params as single[])
' Public Extern glGetSamplerParameterIuiv(GLuint sampler, iPname As Integer, params as integer[])
' Public Extern glQueryCounter(id as integer, iTarget As Integer)
' Public Extern glGetQueryObjecti64v(id as integer, iPname As Integer, GLint64 * params)
' Public Extern glGetQueryObjectui64v(id as integer, iPname As Integer, GLuint64 * params)
' Public Extern glVertexAttribDivisor(iIndex As Integer, GLuint divisor)
' Public Extern glVertexAttribP1ui(iIndex As Integer, iType As Integer, as byte normalized, GLuint value)
' Public Extern glVertexAttribP1uiv(iIndex As Integer, iType As Integer, as byte normalized, const GLuint * value)
' Public Extern glVertexAttribP2ui(iIndex As Integer, iType As Integer, as byte normalized, GLuint value)
' Public Extern glVertexAttribP2uiv(iIndex As Integer, iType As Integer, as byte normalized, const GLuint * value)
' Public Extern glVertexAttribP3ui(iIndex As Integer, iType As Integer, as byte normalized, GLuint value)
' Public Extern glVertexAttribP3uiv(iIndex As Integer, iType As Integer, as byte normalized, const GLuint * value)
' Public Extern glVertexAttribP4ui(iIndex As Integer, iType As Integer, as byte normalized, GLuint value)
' Public Extern glVertexAttribP4uiv(iIndex As Integer, iType As Integer, as byte normalized, const GLuint * value)
'
' Public Const GL_VERSION_4_0 1
' Public Const GL_SAMPLE_SHADING As Integer = &H8C36
' Public Const GL_MIN_SAMPLE_SHADING_VALUE As Integer = &H8C37
' Public Const GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET As Integer = &H8E5E
' Public Const GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET As Integer = &H8E5F
' Public Const GL_TEXTURE_CUBE_MAP_ARRAY As Integer = &H9009
' Public Const GL_TEXTURE_BINDING_CUBE_MAP_ARRAY As Integer = &H900A
' Public Const GL_PROXY_TEXTURE_CUBE_MAP_ARRAY As Integer = &H900B
' Public Const GL_SAMPLER_CUBE_MAP_ARRAY As Integer = &H900C
' Public Const GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW As Integer = &H900D
' Public Const GL_INT_SAMPLER_CUBE_MAP_ARRAY As Integer = &H900E
' Public Const GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY As Integer = &H900F
' Public Const GL_DRAW_INDIRECT_BUFFER As Integer = &H8F3F
' Public Const GL_DRAW_INDIRECT_BUFFER_BINDING As Integer = &H8F43
' Public Const GL_GEOMETRY_SHADER_INVOCATIONS As Integer = &H887F
' Public Const GL_MAX_GEOMETRY_SHADER_INVOCATIONS As Integer = &H8E5A
' Public Const GL_MIN_FRAGMENT_INTERPOLATION_OFFSET As Integer = &H8E5B
' Public Const GL_MAX_FRAGMENT_INTERPOLATION_OFFSET As Integer = &H8E5C
' Public Const GL_FRAGMENT_INTERPOLATION_OFFSET_BITS As Integer = &H8E5D
' Public Const GL_MAX_VERTEX_STREAMS As Integer = &H8E71
' Public Const GL_DOUBLE_VEC2 As Integer = &H8FFC
' Public Const GL_DOUBLE_VEC3 As Integer = &H8FFD
' Public Const GL_DOUBLE_VEC4 As Integer = &H8FFE
' Public Const GL_DOUBLE_MAT2 As Integer = &H8F46
' Public Const GL_DOUBLE_MAT3 As Integer = &H8F47
' Public Const GL_DOUBLE_MAT4 As Integer = &H8F48
' Public Const GL_DOUBLE_MAT2x3 As Integer = &H8F49
' Public Const GL_DOUBLE_MAT2x4 As Integer = &H8F4A
' Public Const GL_DOUBLE_MAT3x2 As Integer = &H8F4B
' Public Const GL_DOUBLE_MAT3x4 As Integer = &H8F4C
' Public Const GL_DOUBLE_MAT4x2 As Integer = &H8F4D
' Public Const GL_DOUBLE_MAT4x3 As Integer = &H8F4E
' Public Const GL_ACTIVE_SUBROUTINES As Integer = &H8DE5
' Public Const GL_ACTIVE_SUBROUTINE_UNIFORMS As Integer = &H8DE6
' Public Const GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS As Integer = &H8E47
' Public Const GL_ACTIVE_SUBROUTINE_MAX_LENGTH As Integer = &H8E48
' Public Const GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH As Integer = &H8E49
' Public Const GL_MAX_SUBROUTINES As Integer = &H8DE7
' Public Const GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS As Integer = &H8DE8
' Public Const GL_NUM_COMPATIBLE_SUBROUTINES As Integer = &H8E4A
' Public Const GL_COMPATIBLE_SUBROUTINES As Integer = &H8E4B
' Public Const GL_PATCHES As Integer = &H000E
' Public Const GL_PATCH_VERTICES As Integer = &H8E72
' Public Const GL_PATCH_DEFAULT_INNER_LEVEL As Integer = &H8E73
' Public Const GL_PATCH_DEFAULT_OUTER_LEVEL As Integer = &H8E74
' Public Const GL_TESS_CONTROL_OUTPUT_VERTICES As Integer = &H8E75
' Public Const GL_TESS_GEN_MODE As Integer = &H8E76
' Public Const GL_TESS_GEN_SPACING As Integer = &H8E77
' Public Const GL_TESS_GEN_VERTEX_ORDER As Integer = &H8E78
' Public Const GL_TESS_GEN_POINT_MODE As Integer = &H8E79
' Public Const GL_ISOLINES As Integer = &H8E7A
' Public Const GL_FRACTIONAL_ODD As Integer = &H8E7B
' Public Const GL_FRACTIONAL_EVEN As Integer = &H8E7C
' Public Const GL_MAX_PATCH_VERTICES As Integer = &H8E7D
' Public Const GL_MAX_TESS_GEN_LEVEL As Integer = &H8E7E
' Public Const GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS As Integer = &H8E7F
' Public Const GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS As Integer = &H8E80
' Public Const GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS As Integer = &H8E81
' Public Const GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS As Integer = &H8E82
' Public Const GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS As Integer = &H8E83
' Public Const GL_MAX_TESS_PATCH_COMPONENTS As Integer = &H8E84
' Public Const GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS As Integer = &H8E85
' Public Const GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS As Integer = &H8E86
' Public Const GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS As Integer = &H8E89
' Public Const GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS As Integer = &H8E8A
' Public Const GL_MAX_TESS_CONTROL_INPUT_COMPONENTS As Integer = &H886C
' Public Const GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS As Integer = &H886D
' Public Const GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS As Integer = &H8E1E
' Public Const GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS As Integer = &H8E1F
' Public Const GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER As Integer = &H84F0
' Public Const GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER As Integer = &H84F1
' Public Const GL_TESS_EVALUATION_SHADER As Integer = &H8E87
' Public Const GL_TESS_CONTROL_SHADER As Integer = &H8E88
' Public Const GL_TRANSFORM_FEEDBACK As Integer = &H8E22
' Public Const GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED As Integer = &H8E23
' Public Const GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE As Integer = &H8E24
' Public Const GL_TRANSFORM_FEEDBACK_BINDING As Integer = &H8E25
' Public Const GL_MAX_TRANSFORM_FEEDBACK_BUFFERS As Integer = &H8E70
'
' Public Extern glMinSampleShading(value as single)
' Public Extern glBlendEquationi(GLuint buf, Mode As Integer)
' Public Extern glBlendEquationSeparatei(GLuint buf, Mode As IntegerRGB, Mode As IntegerAlpha)
' Public Extern glBlendFunci(GLuint buf, as integer src, as integer dst)
' Public Extern glBlendFuncSeparatei(GLuint buf, as integer srcRGB, as integer dstRGB, as integer srcAlpha, as integer dstAlpha)
' Public Extern glDrawArraysIndirect(Mode As Integer, const * indirect)
' Public Extern glDrawElementsIndirect(Mode As Integer, iType As Integer, const * indirect)
' Public Extern glUniform1d(location as Integer, x as float)
' Public Extern glUniform2d(location as Integer, x as float, as float y)
' Public Extern glUniform3d(location as Integer, x as float, as float y, as float z)
' Public Extern glUniform4d(location as Integer, x as float, as float y, as float z, as float w)
' Public Extern glUniform1dv(location as Integer, iSize as Integer, const as float * value)
' Public Extern glUniform2dv(location as Integer, iSize as Integer, const as float * value)
' Public Extern glUniform3dv(location as Integer, iSize as Integer, const as float * value)
' Public Extern glUniform4dv(location as Integer, iSize as Integer, const as float * value)
' Public Extern glUniformMatrix2dv(location as Integer, iSize as Integer, as byte transpose, const as float * value)
' Public Extern glUniformMatrix3dv(location as Integer, iSize as Integer, as byte transpose, const as float * value)
' Public Extern glUniformMatrix4dv(location as Integer, iSize as Integer, as byte transpose, const as float * value)
' Public Extern glUniformMatrix2x3dv(location as Integer, iSize as Integer, as byte transpose, const as float * value)
' Public Extern glUniformMatrix2x4dv(location as Integer, iSize as Integer, as byte transpose, const as float * value)
' Public Extern glUniformMatrix3x2dv(location as Integer, iSize as Integer, as byte transpose, const as float * value)
' Public Extern glUniformMatrix3x4dv(location as Integer, iSize as Integer, as byte transpose, const as float * value)
' Public Extern glUniformMatrix4x2dv(location as Integer, iSize as Integer, as byte transpose, const as float * value)
' Public Extern glUniformMatrix4x3dv(location as Integer, iSize as Integer, as byte transpose, const as float * value)
' Public Extern glGetUniformdv(program As Integer, location as Integer, as float * params)
' Public Extern Function glGetSubroutineUniformLocation(program As Integer, as integer shadertype, const name as string)
' GLAPI GLuint APIENTRY glGetSubroutineIndex(program As Integer, as integer shadertype, const name as string)
' Public Extern glGetActiveSubroutineUniformiv(program As Integer, as integer shadertype, iIndex As Integer, iPname As Integer, GLint * values)
' Public Extern glGetActiveSubroutineUniformName(program As Integer, as integer shadertype, iIndex As Integer, BufSize As Integer, legth as integer[], name as string)
' Public Extern glGetActiveSubroutineName(program As Integer, as integer shadertype, iIndex As Integer, BufSize As Integer, legth as integer[], name as string)
' Public Extern glUniformSubroutinesuiv(as integer shadertype, iSize as Integer, const GLuint * indices)
' Public Extern glGetUniformSubroutineuiv(as integer shadertype, location as Integer, params as integer[])
' Public Extern glGetProgramStageiv(program As Integer, as integer shadertype, iPname As Integer, GLint * values)
' Public Extern glPatchParameteri(iPname As Integer, GLint value)
' Public Extern glPatchParameterfv(iPname As Integer, const GLsingle * values)
' Public Extern glBindTransformFeedback(iTarget As Integer, id as integer)
' Public Extern glDeleteTransformFeedbacks(n as Integer, ids as integer[])
' Public Extern glGenTransformFeedbacks(n as Integer, GLuint * ids)
' GLAPI as byte APIENTRY glIsTransformFeedback(id as integer)
' Public Extern glPauseTransformFeedback()
' Public Extern glResumeTransformFeedback()
' Public Extern glDrawTransformFeedback(Mode As Integer, id as integer)
' Public Extern glDrawTransformFeedbackStream(Mode As Integer, id as integer, GLuint stream)
' Public Extern glBeginQueryIndexed(iTarget As Integer, iIndex As Integer, id as integer)
' Public Extern glEndQueryIndexed(iTarget As Integer, iIndex As Integer)
' Public Extern glGetQueryIndexediv(iTarget As Integer, iIndex As Integer, iPname As Integer, params as integer[])
'
' Public Const GL_FIXED As Integer = &H140C
' Public Const GL_IMPLEMENTATION_COLOR_READ_TYPE As Integer = &H8B9A
' Public Const GL_IMPLEMENTATION_COLOR_READ_FORMAT As Integer = &H8B9B
' Public Const GL_LOW_single As Integer = &H8DF0
' Public Const GL_MEDIUM_single As Integer = &H8DF1
' Public Const GL_HIGH_single As Integer = &H8DF2
' Public Const GL_LOW_INT As Integer = &H8DF3
' Public Const GL_MEDIUM_INT As Integer = &H8DF4
' Public Const GL_HIGH_INT As Integer = &H8DF5
' Public Const GL_SHADER_COMPILER As Integer = &H8DFA
' Public Const GL_SHADER_BINARY_FORMATS As Integer = &H8DF8
' Public Const GL_NUM_SHADER_BINARY_FORMATS As Integer = &H8DF9
' Public Const GL_MAX_VERTEX_UNIFORM_VECTORS As Integer = &H8DFB
' Public Const GL_MAX_VARYING_VECTORS As Integer = &H8DFC
' Public Const GL_MAX_FRAGMENT_UNIFORM_VECTORS As Integer = &H8DFD
' Public Const GL_RGB565 As Integer = &H8D62
' Public Const GL_PROGRAM_BINARY_RETRIEVABLE_HINT As Integer = &H8257
' Public Const GL_PROGRAM_BINARY_LENGTH As Integer = &H8741
' Public Const GL_NUM_PROGRAM_BINARY_FORMATS As Integer = &H87FE
' Public Const GL_PROGRAM_BINARY_FORMATS As Integer = &H87FF
' Public Const GL_VERTEX_SHADER_BIT As Integer = &H00000001
' Public Const GL_FRAGMENT_SHADER_BIT As Integer = &H00000002
' Public Const GL_GEOMETRY_SHADER_BIT As Integer = &H00000004
' Public Const GL_TESS_CONTROL_SHADER_BIT As Integer = &H00000008
' Public Const GL_TESS_EVALUATION_SHADER_BIT As Integer = &H00000010
' Public Const GL_ALL_SHADER_BITS As Integer = &HFFFFFFFF
' Public Const GL_PROGRAM_SEPARABLE As Integer = &H8258
' Public Const GL_ACTIVE_PROGRAM As Integer = &H8259
' Public Const GL_PROGRAM_PIPELINE_BINDING As Integer = &H825A
' Public Const GL_MAX_VIEWPORTS As Integer = &H825B
' Public Const GL_VIEWPORT_SUBPIXEL_BITS As Integer = &H825C
' Public Const GL_VIEWPORT_BOUNDS_RANGE As Integer = &H825D
' Public Const GL_LAYER_PROVOKING_VERTEX As Integer = &H825E
' Public Const GL_VIEWPORT_INDEX_PROVOKING_VERTEX As Integer = &H825F
' Public Const GL_UNDEFINED_VERTEX As Integer = &H8260
'
' Public Extern glReleaseShaderCompiler()
' Public Extern glShaderBinary(iSize as Integer, const GLuint * shaders, as integer binaryformat, const * Binary , GLsizei length)
' Public Extern glGetShaderPrecisionFormat(as integer shadertype, as integer precisiontype, GLint * range, GLint * precision)
' Public Extern glDepthRangef(GLsingle n, GLsingle f)
' Public Extern glClearDepthf(GLsingle d)
' Public Extern glGetProgramBinary(program As Integer, BufSize As Integer, legth as integer[], as integer * binaryFormat, * Binary )
' Public Extern glProgramBinary(program As Integer, as integer binaryFormat, const * Binary , GLsizei length)
' Public Extern glProgramParameteri(program As Integer, iPname As Integer, GLint value)
' Public Extern glUseProgramStages(GLuint pipeline, GLbitfield stages, program As Integer)
' Public Extern glActiveShaderProgram(GLuint pipeline, program As Integer)
' GLAPI GLuint APIENTRY glCreateShaderProgramv(iType As Integer, iSize as Integer, const GLchar * const * strings)
' Public Extern glBindProgramPipeline(GLuint pipeline)
' Public Extern glDeleteProgramPipelines(n as Integer, const GLuint * pipelines)
' Public Extern glGenProgramPipelines(n as Integer, GLuint * pipelines)
' GLAPI as byte APIENTRY glIsProgramPipeline(GLuint pipeline)
' Public Extern glGetProgramPipelineiv(GLuint pipeline, iPname As Integer, params as integer[])
' Public Extern glProgramUniform1i(program As Integer, location as Integer, v0 as integer)
' Public Extern glProgramUniform1iv(program As Integer, location as Integer, iSize as Integer, value as integer[])
' Public Extern glProgramUniform1f(program As Integer, location as Integer, v0 as single)
' Public Extern glProgramUniform1fv(program As Integer, location as Integer, iSize as Integer, const GLsingle * value)
' Public Extern glProgramUniform1d(program As Integer, location as Integer, as float v0)
' Public Extern glProgramUniform1dv(program As Integer, location as Integer, iSize as Integer, const as float * value)
' Public Extern glProgramUniform1ui(program As Integer, location as Integer, GLuint v0)
' Public Extern glProgramUniform1uiv(program As Integer, location as Integer, iSize as Integer, const GLuint * value)
' Public Extern glProgramUniform2i(program As Integer, location as Integer, v0 as integer, v1 as integer)
' Public Extern glProgramUniform2iv(program As Integer, location as Integer, iSize as Integer, value as integer[])
' Public Extern glProgramUniform2f(program As Integer, location as Integer, v0 as single, v1 as single)
' Public Extern glProgramUniform2fv(program As Integer, location as Integer, iSize as Integer, const GLsingle * value)
' Public Extern glProgramUniform2d(program As Integer, location as Integer, as float v0, as float v1)
' Public Extern glProgramUniform2dv(program As Integer, location as Integer, iSize as Integer, const as float * value)
' Public Extern glProgramUniform2ui(program As Integer, location as Integer, GLuint v0, GLuint v1)
' Public Extern glProgramUniform2uiv(program As Integer, location as Integer, iSize as Integer, const GLuint * value)
' Public Extern glProgramUniform3i(program As Integer, location as Integer, v0 as integer, v1 as integer, v2 as integer)
' Public Extern glProgramUniform3iv(program As Integer, location as Integer, iSize as Integer, value as integer[])
' Public Extern glProgramUniform3f(program As Integer, location as Integer, v0 as single, v1 as single, v2 as single)
' Public Extern glProgramUniform3fv(program As Integer, location as Integer, iSize as Integer, const GLsingle * value)
' Public Extern glProgramUniform3d(program As Integer, location as Integer, as float v0, as float v1, as float v2)
' Public Extern glProgramUniform3dv(program As Integer, location as Integer, iSize as Integer, const as float * value)
' Public Extern glProgramUniform3ui(program As Integer, location as Integer, GLuint v0, GLuint v1, GLuint v2)
' Public Extern glProgramUniform3uiv(program As Integer, location as Integer, iSize as Integer, const GLuint * value)
' Public Extern glProgramUniform4i(program As Integer, location as Integer, v0 as integer, v1 as integer, v2 as integer, v3 as integer)
' Public Extern glProgramUniform4iv(program As Integer, location as Integer, iSize as Integer, value as integer[])
' Public Extern glProgramUniform4f(program As Integer, location as Integer, v0 as single, v1 as single, v2 as single, v3 as single)
' Public Extern glProgramUniform4fv(program As Integer, location as Integer, iSize as Integer, const GLsingle * value)
' Public Extern glProgramUniform4d(program As Integer, location as Integer, as float v0, as float v1, as float v2, as float v3)
' Public Extern glProgramUniform4dv(program As Integer, location as Integer, iSize as Integer, const as float * value)
' Public Extern glProgramUniform4ui(program As Integer, location as Integer, GLuint v0, GLuint v1, GLuint v2, GLuint v3)
' Public Extern glProgramUniform4uiv(program As Integer, location as Integer, iSize as Integer, const GLuint * value)
' Public Extern glProgramUniformMatrix2fv(program As Integer, location as Integer, iSize as Integer, as byte transpose, const GLsingle * value)
' Public Extern glProgramUniformMatrix3fv(program As Integer, location as Integer, iSize as Integer, as byte transpose, const GLsingle * value)
' Public Extern glProgramUniformMatrix4fv(program As Integer, location as Integer, iSize as Integer, as byte transpose, const GLsingle * value)
' Public Extern glProgramUniformMatrix2dv(program As Integer, location as Integer, iSize as Integer, as byte transpose, const as float * value)
' Public Extern glProgramUniformMatrix3dv(program As Integer, location as Integer, iSize as Integer, as byte transpose, const as float * value)
' Public Extern glProgramUniformMatrix4dv(program As Integer, location as Integer, iSize as Integer, as byte transpose, const as float * value)
' Public Extern glProgramUniformMatrix2x3fv(program As Integer, location as Integer, iSize as Integer, as byte transpose, const GLsingle * value)
' Public Extern glProgramUniformMatrix3x2fv(program As Integer, location as Integer, iSize as Integer, as byte transpose, const GLsingle * value)
' Public Extern glProgramUniformMatrix2x4fv(program As Integer, location as Integer, iSize as Integer, as byte transpose, const GLsingle * value)
' Public Extern glProgramUniformMatrix4x2fv(program As Integer, location as Integer, iSize as Integer, as byte transpose, const GLsingle * value)
' Public Extern glProgramUniformMatrix3x4fv(program As Integer, location as Integer, iSize as Integer, as byte transpose, const GLsingle * value)
' Public Extern glProgramUniformMatrix4x3fv(program As Integer, location as Integer, iSize as Integer, as byte transpose, const GLsingle * value)
' Public Extern glProgramUniformMatrix2x3dv(program As Integer, location as Integer, iSize as Integer, as byte transpose, const as float * value)
' Public Extern glProgramUniformMatrix3x2dv(program As Integer, location as Integer, iSize as Integer, as byte transpose, const as float * value)
' Public Extern glProgramUniformMatrix2x4dv(program As Integer, location as Integer, iSize as Integer, as byte transpose, const as float * value)
' Public Extern glProgramUniformMatrix4x2dv(program As Integer, location as Integer, iSize as Integer, as byte transpose, const as float * value)
' Public Extern glProgramUniformMatrix3x4dv(program As Integer, location as Integer, iSize as Integer, as byte transpose, const as float * value)
' Public Extern glProgramUniformMatrix4x3dv(program As Integer, location as Integer, iSize as Integer, as byte transpose, const as float * value)
' Public Extern glValidateProgramPipeline(GLuint pipeline)
' Public Extern glGetProgramPipelineInfoLog(GLuint pipeline, BufSize As Integer, legth as integer[], GLchar * infoLog)
' Public Extern glVertexAttribL1d(iIndex As Integer, x as float)
' Public Extern glVertexAttribL2d(iIndex As Integer, x as float, as float y)
' Public Extern glVertexAttribL3d(iIndex As Integer, x as float, as float y, as float z)
' Public Extern glVertexAttribL4d(iIndex As Integer, x as float, as float y, as float z, as float w)
' Public Extern glVertexAttribL1dv(iIndex As Integer, const as float * v)
' Public Extern glVertexAttribL2dv(iIndex As Integer, const as float * v)
' Public Extern glVertexAttribL3dv(iIndex As Integer, const as float * v)
' Public Extern glVertexAttribL4dv(iIndex As Integer, const as float * v)
' Public Extern glVertexAttribLPointer(iIndex As Integer, size as integer, iType As Integer, stride as integer, const * pointer)
' Public Extern glGetVertexAttribLdv(iIndex As Integer, iPname As Integer, as float * params)
' Public Extern glViewportArrayv(GLuint first, iSize as Integer, const GLsingle * v)
' Public Extern glViewportIndexedf(iIndex As Integer, GLsingle x, GLsingle y, GLsingle w, GLsingle h)
' Public Extern glViewportIndexedfv(iIndex As Integer, const GLsingle * v)
' Public Extern glScissorArrayv(GLuint first, iSize as Integer, const GLint * v)
' Public Extern glScissorIndexed(iIndex As Integer, GLint left, GLint bottom, iWidth As Integer, iHeight As Integer)
' Public Extern glScissorIndexedv(iIndex As Integer, const GLint * v)
' Public Extern glDepthRangeArrayv(GLuint first, iSize as Integer, const as float * v)
' Public Extern glDepthRangeIndexed(iIndex As Integer, as float n, as float f)
' Public Extern glGetsinglei_v(iTarget As Integer, iIndex As Integer, GLsingle data as byte[])
' Public Extern glGetDoublei_v(iTarget As Integer, iIndex As Integer, as float data as byte[])
'
' Public Const GL_VERSION_4_2 1
' Public Const GL_COPY_READ_BUFFER_BINDING As Integer = &H8F36
' Public Const GL_COPY_WRITE_BUFFER_BINDING As Integer = &H8F37
' Public Const GL_TRANSFORM_FEEDBACK_ACTIVE As Integer = &H8E24
' Public Const GL_TRANSFORM_FEEDBACK_PAUSED As Integer = &H8E23
' Public Const GL_UNPACK_COMPRESSED_BLOCK_WIDTH As Integer = &H9127
' Public Const GL_UNPACK_COMPRESSED_BLOCK_HEIGHT As Integer = &H9128
' Public Const GL_UNPACK_COMPRESSED_BLOCK_DEPTH As Integer = &H9129
' Public Const GL_UNPACK_COMPRESSED_BLOCK_SIZE As Integer = &H912A
' Public Const GL_PACK_COMPRESSED_BLOCK_WIDTH As Integer = &H912B
' Public Const GL_PACK_COMPRESSED_BLOCK_HEIGHT As Integer = &H912C
' Public Const GL_PACK_COMPRESSED_BLOCK_DEPTH As Integer = &H912D
' Public Const GL_PACK_COMPRESSED_BLOCK_SIZE As Integer = &H912E
' Public Const GL_NUM_SAMPLE_COUNTS As Integer = &H9380
' Public Const GL_MIN_MAP_BUFFER_ALIGNMENT As Integer = &H90BC
' Public Const GL_ATOMIC_COUNTER_BUFFER As Integer = &H92C0
' Public Const GL_ATOMIC_COUNTER_BUFFER_BINDING As Integer = &H92C1
' Public Const GL_ATOMIC_COUNTER_BUFFER_START As Integer = &H92C2
' Public Const GL_ATOMIC_COUNTER_BUFFER_SIZE As Integer = &H92C3
' Public Const GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE As Integer = &H92C4
' Public Const GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS As Integer = &H92C5
' Public Const GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES As Integer = &H92C6
' Public Const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER As Integer = &H92C7
' Public Const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER As Integer = &H92C8
' Public Const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER As Integer = &H92C9
' Public Const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER As Integer = &H92CA
' Public Const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER As Integer = &H92CB
' Public Const GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS As Integer = &H92CC
' Public Const GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS As Integer = &H92CD
' Public Const GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS As Integer = &H92CE
' Public Const GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS As Integer = &H92CF
' Public Const GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS As Integer = &H92D0
' Public Const GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS As Integer = &H92D1
' Public Const GL_MAX_VERTEX_ATOMIC_COUNTERS As Integer = &H92D2
' Public Const GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS As Integer = &H92D3
' Public Const GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS As Integer = &H92D4
' Public Const GL_MAX_GEOMETRY_ATOMIC_COUNTERS As Integer = &H92D5
' Public Const GL_MAX_FRAGMENT_ATOMIC_COUNTERS As Integer = &H92D6
' Public Const GL_MAX_COMBINED_ATOMIC_COUNTERS As Integer = &H92D7
' Public Const GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE As Integer = &H92D8
' Public Const GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS As Integer = &H92DC
' Public Const GL_ACTIVE_ATOMIC_COUNTER_BUFFERS As Integer = &H92D9
' Public Const GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX As Integer = &H92DA
' Public Const GL_UNSIGNED_INT_ATOMIC_COUNTER As Integer = &H92DB
' Public Const GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT As Integer = &H00000001
' Public Const GL_ELEMENT_ARRAY_BARRIER_BIT As Integer = &H00000002
' Public Const GL_UNIFORM_BARRIER_BIT As Integer = &H00000004
' Public Const GL_TEXTURE_FETCH_BARRIER_BIT As Integer = &H00000008
' Public Const GL_SHADER_IMAGE_ACCESS_BARRIER_BIT As Integer = &H00000020
' Public Const GL_COMMAND_BARRIER_BIT As Integer = &H00000040
' Public Const GL_PIXEL_BUFFER_BARRIER_BIT As Integer = &H00000080
' Public Const GL_TEXTURE_UPDATE_BARRIER_BIT As Integer = &H00000100
' Public Const GL_BUFFER_UPDATE_BARRIER_BIT As Integer = &H00000200
' Public Const GL_FRAMEBUFFER_BARRIER_BIT As Integer = &H00000400
' Public Const GL_TRANSFORM_FEEDBACK_BARRIER_BIT As Integer = &H00000800
' Public Const GL_ATOMIC_COUNTER_BARRIER_BIT As Integer = &H00001000
' Public Const GL_ALL_BARRIER_BITS As Integer = &HFFFFFFFF
' Public Const GL_MAX_IMAGE_UNITS As Integer = &H8F38
' Public Const GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS As Integer = &H8F39
' Public Const GL_IMAGE_BINDING_NAME As Integer = &H8F3A
' Public Const GL_IMAGE_BINDING_LEVEL As Integer = &H8F3B
' Public Const GL_IMAGE_BINDING_LAYERED As Integer = &H8F3C
' Public Const GL_IMAGE_BINDING_LAYER As Integer = &H8F3D
' Public Const GL_IMAGE_BINDING_ACCESS As Integer = &H8F3E
' Public Const GL_IMAGE_1D As Integer = &H904C
' Public Const GL_IMAGE_2D As Integer = &H904D
' Public Const GL_IMAGE_3D As Integer = &H904E
' Public Const GL_IMAGE_2D_RECT As Integer = &H904F
' Public Const GL_IMAGE_CUBE As Integer = &H9050
' Public Const GL_IMAGE_BUFFER As Integer = &H9051
' Public Const GL_IMAGE_1D_ARRAY As Integer = &H9052
' Public Const GL_IMAGE_2D_ARRAY As Integer = &H9053
' Public Const GL_IMAGE_CUBE_MAP_ARRAY As Integer = &H9054
' Public Const GL_IMAGE_2D_MULTISAMPLE As Integer = &H9055
' Public Const GL_IMAGE_2D_MULTISAMPLE_ARRAY As Integer = &H9056
' Public Const GL_INT_IMAGE_1D As Integer = &H9057
' Public Const GL_INT_IMAGE_2D As Integer = &H9058
' Public Const GL_INT_IMAGE_3D As Integer = &H9059
' Public Const GL_INT_IMAGE_2D_RECT As Integer = &H905A
' Public Const GL_INT_IMAGE_CUBE As Integer = &H905B
' Public Const GL_INT_IMAGE_BUFFER As Integer = &H905C
' Public Const GL_INT_IMAGE_1D_ARRAY As Integer = &H905D
' Public Const GL_INT_IMAGE_2D_ARRAY As Integer = &H905E
' Public Const GL_INT_IMAGE_CUBE_MAP_ARRAY As Integer = &H905F
' Public Const GL_INT_IMAGE_2D_MULTISAMPLE As Integer = &H9060
' Public Const GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY As Integer = &H9061
' Public Const GL_UNSIGNED_INT_IMAGE_1D As Integer = &H9062
' Public Const GL_UNSIGNED_INT_IMAGE_2D As Integer = &H9063
' Public Const GL_UNSIGNED_INT_IMAGE_3D As Integer = &H9064
' Public Const GL_UNSIGNED_INT_IMAGE_2D_RECT As Integer = &H9065
' Public Const GL_UNSIGNED_INT_IMAGE_CUBE As Integer = &H9066
' Public Const GL_UNSIGNED_INT_IMAGE_BUFFER As Integer = &H9067
' Public Const GL_UNSIGNED_INT_IMAGE_1D_ARRAY As Integer = &H9068
' Public Const GL_UNSIGNED_INT_IMAGE_2D_ARRAY As Integer = &H9069
' Public Const GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY As Integer = &H906A
' Public Const GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE As Integer = &H906B
' Public Const GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY As Integer = &H906C
' Public Const GL_MAX_IMAGE_SAMPLES As Integer = &H906D
' Public Const GL_IMAGE_BINDING_FORMAT As Integer = &H906E
' Public Const GL_IMAGE_FORMAT_COMPATIBILITY_TYPE As Integer = &H90C7
' Public Const GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE As Integer = &H90C8
' Public Const GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS As Integer = &H90C9
' Public Const GL_MAX_VERTEX_IMAGE_UNIFORMS As Integer = &H90CA
' Public Const GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS As Integer = &H90CB
' Public Const GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS As Integer = &H90CC
' Public Const GL_MAX_GEOMETRY_IMAGE_UNIFORMS As Integer = &H90CD
' Public Const GL_MAX_FRAGMENT_IMAGE_UNIFORMS As Integer = &H90CE
' Public Const GL_MAX_COMBINED_IMAGE_UNIFORMS As Integer = &H90CF
' Public Const GL_COMPRESSED_RGBA_BPTC_UNORM As Integer = &H8E8C
' Public Const GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM As Integer = &H8E8D
' Public Const GL_COMPRESSED_RGB_BPTC_SIGNED_single As Integer = &H8E8E
' Public Const GL_COMPRESSED_RGB_BPTC_UNSIGNED_single As Integer = &H8E8F
' Public Const GL_TEXTURE_IMMUTABLE_FORMAT As Integer = &H912F
' Public Extern glDrawArraysInstancedBaseInstance(Mode As Integer, first as integer, iSize as Integer, GLsizei instancecount, GLuint baseinstance)
' Public Extern glDrawElementsInstancedBaseInstance(Mode As Integer, iSize as Integer, iType As Integer, const * indices, GLsizei instancecount, GLuint baseinstance)
' Public Extern glDrawElementsInstancedBaseVertexBaseInstance(Mode As Integer, iSize as Integer, iType As Integer, const * indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance)
' Public Extern glGetInternalformativ(iTarget As Integer,internalformat as integer, iPname As Integer, BufSize As Integer, params as integer[])
' Public Extern glGetActiveAtomicCounterBufferiv(program As Integer, buffer as integerIndex, iPname As Integer, params as integer[])
' Public Extern glBindImageTexture(GLuint unit, texture as Integer, iLevel as integer, as byte layered, GLint layer, as integer access, iFormat as integer)
' Public Extern glMemoryBarrier(GLbitfield barriers)
' Public Extern glTexStorage1D(iTarget As Integer, GLsizei levels,internalformat as integer, iWidth As Integer)
' Public Extern glTexStorage2D(iTarget As Integer, GLsizei levels,internalformat as integer, iWidth As Integer, iHeight As Integer)
' Public Extern glTexStorage3D(iTarget As Integer, GLsizei levels,internalformat as integer, iWidth As Integer, iHeight As Integer, iDepth as integer)
' Public Extern glDrawTransformFeedbackInstanced(Mode As Integer, id as integer, GLsizei instancecount)
' Public Extern glDrawTransformFeedbackStreamInstanced(Mode As Integer, id as integer, GLuint stream, GLsizei instancecount)
' Public Const GL_VERSION_4_3 1
' Public Const GL_NUM_SHADING_LANGUAGE_VERSIONS As Integer = &H82E9
' Public Const GL_VERTEX_ATTRIB_ARRAY_LONG As Integer = &H874E
' Public Const GL_COMPRESSED_RGB8_ETC2 As Integer = &H9274
' Public Const GL_COMPRESSED_SRGB8_ETC2 As Integer = &H9275
' Public Const GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 As Integer = &H9276
' Public Const GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 As Integer = &H9277
' Public Const GL_COMPRESSED_RGBA8_ETC2_EAC As Integer = &H9278
' Public Const GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC As Integer = &H9279
' Public Const GL_COMPRESSED_R11_EAC As Integer = &H9270
' Public Const GL_COMPRESSED_SIGNED_R11_EAC As Integer = &H9271
' Public Const GL_COMPRESSED_RG11_EAC As Integer = &H9272
' Public Const GL_COMPRESSED_SIGNED_RG11_EAC As Integer = &H9273
' Public Const GL_PRIMITIVE_RESTART_FIXED_INDEX As Integer = &H8D69
' Public Const GL_ANY_SAMPLES_PASSED_CONSERVATIVE As Integer = &H8D6A
' Public Const GL_MAX_ELEMENT_INDEX As Integer = &H8D6B
' Public Const GL_COMPUTE_SHADER As Integer = &H91B9
' Public Const GL_MAX_COMPUTE_UNIFORM_BLOCKS As Integer = &H91BB
' Public Const GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS As Integer = &H91BC
' Public Const GL_MAX_COMPUTE_IMAGE_UNIFORMS As Integer = &H91BD
' Public Const GL_MAX_COMPUTE_SHARED_MEMORY_SIZE As Integer = &H8262
' Public Const GL_MAX_COMPUTE_UNIFORM_COMPONENTS As Integer = &H8263
' Public Const GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS As Integer = &H8264
' Public Const GL_MAX_COMPUTE_ATOMIC_COUNTERS As Integer = &H8265
' Public Const GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS As Integer = &H8266
' Public Const GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS As Integer = &H90EB
' Public Const GL_MAX_COMPUTE_WORK_GROUP_COUNT As Integer = &H91BE
' Public Const GL_MAX_COMPUTE_WORK_GROUP_SIZE As Integer = &H91BF
' Public Const GL_COMPUTE_WORK_GROUP_SIZE As Integer = &H8267
' Public Const GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER As Integer = &H90EC
' Public Const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER As Integer = &H90ED
' Public Const GL_DISPATCH_INDIRECT_BUFFER As Integer = &H90EE
' Public Const GL_DISPATCH_INDIRECT_BUFFER_BINDING As Integer = &H90EF
' Public Const GL_COMPUTE_SHADER_BIT As Integer = &H00000020
' Public Const GL_DEBUG_OUTPUT_SYNCHRONOUS As Integer = &H8242
' Public Const GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH As Integer = &H8243
' Public Const GL_DEBUG_CALLBACK_FUNCTION As Integer = &H8244
' Public Const GL_DEBUG_CALLBACK_USER_PARAM As Integer = &H8245
' Public Const GL_DEBUG_SOURCE_API As Integer = &H8246
' Public Const GL_DEBUG_SOURCE_WINDOW_SYSTEM As Integer = &H8247
' Public Const GL_DEBUG_SOURCE_SHADER_COMPILER As Integer = &H8248
' Public Const GL_DEBUG_SOURCE_THIRD_PARTY As Integer = &H8249
' Public Const GL_DEBUG_SOURCE_APPLICATION As Integer = &H824A
' Public Const GL_DEBUG_SOURCE_OTHER As Integer = &H824B
' Public Const GL_DEBUG_TYPE_ERROR As Integer = &H824C
' Public Const GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR As Integer = &H824D
' Public Const GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR As Integer = &H824E
' Public Const GL_DEBUG_TYPE_PORTABILITY As Integer = &H824F
' Public Const GL_DEBUG_TYPE_PERFORMANCE As Integer = &H8250
' Public Const GL_DEBUG_TYPE_OTHER As Integer = &H8251
' Public Const GL_MAX_DEBUG_MESSAGE_LENGTH As Integer = &H9143
' Public Const GL_MAX_DEBUG_LOGGED_MESSAGES As Integer = &H9144
' Public Const GL_DEBUG_LOGGED_MESSAGES As Integer = &H9145
' Public Const GL_DEBUG_SEVERITY_HIGH As Integer = &H9146
' Public Const GL_DEBUG_SEVERITY_MEDIUM As Integer = &H9147
' Public Const GL_DEBUG_SEVERITY_LOW As Integer = &H9148
' Public Const GL_DEBUG_TYPE_MARKER As Integer = &H8268
' Public Const GL_DEBUG_TYPE_PUSH_GROUP As Integer = &H8269
' Public Const GL_DEBUG_TYPE_POP_GROUP As Integer = &H826A
' Public Const GL_DEBUG_SEVERITY_NOTIFICATION As Integer = &H826B
' Public Const GL_MAX_DEBUG_GROUP_STACK_DEPTH As Integer = &H826C
' Public Const GL_DEBUG_GROUP_STACK_DEPTH As Integer = &H826D
' Public Const GL_BUFFER As Integer = &H82E0
' Public Const GL_SHADER As Integer = &H82E1
' Public Const GL_PROGRAM As Integer = &H82E2
' Public Const GL_QUERY As Integer = &H82E3
' Public Const GL_PROGRAM_PIPELINE As Integer = &H82E4
' Public Const GL_SAMPLER As Integer = &H82E6
' Public Const GL_MAX_LABEL_LENGTH As Integer = &H82E8
' Public Const GL_DEBUG_OUTPUT As Integer = &H92E0
' Public Const GL_CONTEXT_FLAG_DEBUG_BIT As Integer = &H00000002
' Public Const GL_MAX_UNIFORM_LOCATIONS As Integer = &H826E
' Public Const GL_FRAMEBUFFER_DEFAULT_WIDTH As Integer = &H9310
' Public Const GL_FRAMEBUFFER_DEFAULT_HEIGHT As Integer = &H9311
' Public Const GL_FRAMEBUFFER_DEFAULT_LAYERS As Integer = &H9312
' Public Const GL_FRAMEBUFFER_DEFAULT_SAMPLES As Integer = &H9313
' Public Const GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS As Integer = &H9314
' Public Const GL_MAX_FRAMEBUFFER_WIDTH As Integer = &H9315
' Public Const GL_MAX_FRAMEBUFFER_HEIGHT As Integer = &H9316
' Public Const GL_MAX_FRAMEBUFFER_LAYERS As Integer = &H9317
' Public Const GL_MAX_FRAMEBUFFER_SAMPLES As Integer = &H9318
' Public Const GL_INTERNALFORMAT_SUPPORTED As Integer = &H826F
' Public Const GL_INTERNALFORMAT_PREFERRED As Integer = &H8270
' Public Const GL_INTERNALFORMAT_RED_SIZE As Integer = &H8271
' Public Const GL_INTERNALFORMAT_GREEN_SIZE As Integer = &H8272
' Public Const GL_INTERNALFORMAT_BLUE_SIZE As Integer = &H8273
' Public Const GL_INTERNALFORMAT_ALPHA_SIZE As Integer = &H8274
' Public Const GL_INTERNALFORMAT_DEPTH_SIZE As Integer = &H8275
' Public Const GL_INTERNALFORMAT_STENCIL_SIZE As Integer = &H8276
' Public Const GL_INTERNALFORMAT_SHARED_SIZE As Integer = &H8277
' Public Const GL_INTERNALFORMAT_RED_TYPE As Integer = &H8278
' Public Const GL_INTERNALFORMAT_GREEN_TYPE As Integer = &H8279
' Public Const GL_INTERNALFORMAT_BLUE_TYPE As Integer = &H827A
' Public Const GL_INTERNALFORMAT_ALPHA_TYPE As Integer = &H827B
' Public Const GL_INTERNALFORMAT_DEPTH_TYPE As Integer = &H827C
' Public Const GL_INTERNALFORMAT_STENCIL_TYPE As Integer = &H827D
' Public Const GL_MAX_WIDTH As Integer = &H827E
' Public Const GL_MAX_HEIGHT As Integer = &H827F
' Public Const GL_MAX_DEPTH As Integer = &H8280
' Public Const GL_MAX_LAYERS As Integer = &H8281
' Public Const GL_MAX_COMBINED_DIMENSIONS As Integer = &H8282
' Public Const GL_COLOR_COMPONENTS As Integer = &H8283
' Public Const GL_DEPTH_COMPONENTS As Integer = &H8284
' Public Const GL_STENCIL_COMPONENTS As Integer = &H8285
' Public Const GL_COLOR_RENDERABLE As Integer = &H8286
' Public Const GL_DEPTH_RENDERABLE As Integer = &H8287
' Public Const GL_STENCIL_RENDERABLE As Integer = &H8288
' Public Const GL_FRAMEBUFFER_RENDERABLE As Integer = &H8289
' Public Const GL_FRAMEBUFFER_RENDERABLE_LAYERED As Integer = &H828A
' Public Const GL_FRAMEBUFFER_BLEND As Integer = &H828B
' Public Const GL_READ_PIXELS As Integer = &H828C
' Public Const GL_READ_PIXELS_FORMAT As Integer = &H828D
' Public Const GL_READ_PIXELS_TYPE As Integer = &H828E
' Public Const GL_TEXTURE_IMAGE_FORMAT As Integer = &H828F
' Public Const GL_TEXTURE_IMAGE_TYPE As Integer = &H8290
' Public Const GL_GET_TEXTURE_IMAGE_FORMAT As Integer = &H8291
' Public Const GL_GET_TEXTURE_IMAGE_TYPE As Integer = &H8292
' Public Const GL_MIPMAP As Integer = &H8293
' Public Const GL_MANUAL_GENERATE_MIPMAP As Integer = &H8294
' Public Const GL_AUTO_GENERATE_MIPMAP As Integer = &H8295
' Public Const GL_COLOR_ENCODING As Integer = &H8296
' Public Const GL_SRGB_READ As Integer = &H8297
' Public Const GL_SRGB_WRITE As Integer = &H8298
' Public Const GL_FILTER As Integer = &H829A
' Public Const GL_VERTEX_TEXTURE As Integer = &H829B
' Public Const GL_TESS_CONTROL_TEXTURE As Integer = &H829C
' Public Const GL_TESS_EVALUATION_TEXTURE As Integer = &H829D
' Public Const GL_GEOMETRY_TEXTURE As Integer = &H829E
' Public Const GL_FRAGMENT_TEXTURE As Integer = &H829F
' Public Const GL_COMPUTE_TEXTURE As Integer = &H82A0
' Public Const GL_TEXTURE_SHADOW As Integer = &H82A1
' Public Const GL_TEXTURE_GATHER As Integer = &H82A2
' Public Const GL_TEXTURE_GATHER_SHADOW As Integer = &H82A3
' Public Const GL_SHADER_IMAGE_LOAD As Integer = &H82A4
' Public Const GL_SHADER_IMAGE_STORE As Integer = &H82A5
' Public Const GL_SHADER_IMAGE_ATOMIC As Integer = &H82A6
' Public Const GL_IMAGE_TEXEL_SIZE As Integer = &H82A7
' Public Const GL_IMAGE_COMPATIBILITY_CLASS As Integer = &H82A8
' Public Const GL_IMAGE_PIXEL_FORMAT As Integer = &H82A9
' Public Const GL_IMAGE_PIXEL_TYPE As Integer = &H82AA
' Public Const GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST As Integer = &H82AC
' Public Const GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST As Integer = &H82AD
' Public Const GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE As Integer = &H82AE
' Public Const GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE As Integer = &H82AF
' Public Const GL_TEXTURE_COMPRESSED_BLOCK_WIDTH As Integer = &H82B1
' Public Const GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT As Integer = &H82B2
' Public Const GL_TEXTURE_COMPRESSED_BLOCK_SIZE As Integer = &H82B3
' Public Const GL_CLEAR_BUFFER As Integer = &H82B4
' Public Const GL_TEXTURE_VIEW As Integer = &H82B5
' Public Const GL_VIEW_COMPATIBILITY_CLASS As Integer = &H82B6
' Public Const GL_FULL_SUPPORT As Integer = &H82B7
' Public Const GL_CAVEAT_SUPPORT As Integer = &H82B8
' Public Const GL_IMAGE_CLASS_4_X_32 As Integer = &H82B9
' Public Const GL_IMAGE_CLASS_2_X_32 As Integer = &H82BA
' Public Const GL_IMAGE_CLASS_1_X_32 As Integer = &H82BB
' Public Const GL_IMAGE_CLASS_4_X_16 As Integer = &H82BC
' Public Const GL_IMAGE_CLASS_2_X_16 As Integer = &H82BD
' Public Const GL_IMAGE_CLASS_1_X_16 As Integer = &H82BE
' Public Const GL_IMAGE_CLASS_4_X_8 As Integer = &H82BF
' Public Const GL_IMAGE_CLASS_2_X_8 As Integer = &H82C0
' Public Const GL_IMAGE_CLASS_1_X_8 As Integer = &H82C1
' Public Const GL_IMAGE_CLASS_11_11_10 As Integer = &H82C2
' Public Const GL_IMAGE_CLASS_10_10_10_2 As Integer = &H82C3
' Public Const GL_VIEW_CLASS_128_BITS As Integer = &H82C4
' Public Const GL_VIEW_CLASS_96_BITS As Integer = &H82C5
' Public Const GL_VIEW_CLASS_64_BITS As Integer = &H82C6
' Public Const GL_VIEW_CLASS_48_BITS As Integer = &H82C7
' Public Const GL_VIEW_CLASS_32_BITS As Integer = &H82C8
' Public Const GL_VIEW_CLASS_24_BITS As Integer = &H82C9
' Public Const GL_VIEW_CLASS_16_BITS As Integer = &H82CA
' Public Const GL_VIEW_CLASS_8_BITS As Integer = &H82CB
' Public Const GL_VIEW_CLASS_S3TC_DXT1_RGB As Integer = &H82CC
' Public Const GL_VIEW_CLASS_S3TC_DXT1_RGBA As Integer = &H82CD
' Public Const GL_VIEW_CLASS_S3TC_DXT3_RGBA As Integer = &H82CE
' Public Const GL_VIEW_CLASS_S3TC_DXT5_RGBA As Integer = &H82CF
' Public Const GL_VIEW_CLASS_RGTC1_RED As Integer = &H82D0
' Public Const GL_VIEW_CLASS_RGTC2_RG As Integer = &H82D1
' Public Const GL_VIEW_CLASS_BPTC_UNORM As Integer = &H82D2
' Public Const GL_VIEW_CLASS_BPTC_single As Integer = &H82D3
' Public Const GL_UNIFORM As Integer = &H92E1
' Public Const GL_UNIFORM_BLOCK As Integer = &H92E2
' Public Const GL_PROGRAM_INPUT As Integer = &H92E3
' Public Const GL_PROGRAM_OUTPUT As Integer = &H92E4
' Public Const GL_BUFFER_VARIABLE As Integer = &H92E5
' Public Const GL_SHADER_STORAGE_BLOCK As Integer = &H92E6
' Public Const GL_VERTEX_SUBROUTINE As Integer = &H92E8
' Public Const GL_TESS_CONTROL_SUBROUTINE As Integer = &H92E9
' Public Const GL_TESS_EVALUATION_SUBROUTINE As Integer = &H92EA
' Public Const GL_GEOMETRY_SUBROUTINE As Integer = &H92EB
' Public Const GL_FRAGMENT_SUBROUTINE As Integer = &H92EC
' Public Const GL_COMPUTE_SUBROUTINE As Integer = &H92ED
' Public Const GL_VERTEX_SUBROUTINE_UNIFORM As Integer = &H92EE
' Public Const GL_TESS_CONTROL_SUBROUTINE_UNIFORM As Integer = &H92EF
' Public Const GL_TESS_EVALUATION_SUBROUTINE_UNIFORM As Integer = &H92F0
' Public Const GL_GEOMETRY_SUBROUTINE_UNIFORM As Integer = &H92F1
' Public Const GL_FRAGMENT_SUBROUTINE_UNIFORM As Integer = &H92F2
' Public Const GL_COMPUTE_SUBROUTINE_UNIFORM As Integer = &H92F3
' Public Const GL_TRANSFORM_FEEDBACK_VARYING As Integer = &H92F4
' Public Const GL_ACTIVE_RESOURCES As Integer = &H92F5
' Public Const GL_MAX_NAME_LENGTH As Integer = &H92F6
' Public Const GL_MAX_NUM_ACTIVE_VARIABLES As Integer = &H92F7
' Public Const GL_MAX_NUM_COMPATIBLE_SUBROUTINES As Integer = &H92F8
' Public Const GL_NAME_LENGTH As Integer = &H92F9
' Public Const GL_TYPE As Integer = &H92FA
' Public Const GL_ARRAY_SIZE As Integer = &H92FB
' Public Const GL_OFFSET As Integer = &H92FC
' Public Const GL_BLOCK_INDEX As Integer = &H92FD
' Public Const GL_ARRAY_STRIDE As Integer = &H92FE
' Public Const GL_MATRIX_STRIDE As Integer = &H92FF
' Public Const GL_IS_ROW_MAJOR As Integer = &H9300
' Public Const GL_ATOMIC_COUNTER_BUFFER_INDEX As Integer = &H9301
' Public Const GL_BUFFER_BINDING As Integer = &H9302
' Public Const GL_BUFFER_DATA_SIZE As Integer = &H9303
' Public Const GL_NUM_ACTIVE_VARIABLES As Integer = &H9304
' Public Const GL_ACTIVE_VARIABLES As Integer = &H9305
' Public Const GL_REFERENCED_BY_VERTEX_SHADER As Integer = &H9306
' Public Const GL_REFERENCED_BY_TESS_CONTROL_SHADER As Integer = &H9307
' Public Const GL_REFERENCED_BY_TESS_EVALUATION_SHADER As Integer = &H9308
' Public Const GL_REFERENCED_BY_GEOMETRY_SHADER As Integer = &H9309
' Public Const GL_REFERENCED_BY_FRAGMENT_SHADER As Integer = &H930A
' Public Const GL_REFERENCED_BY_COMPUTE_SHADER As Integer = &H930B
' Public Const GL_TOP_LEVEL_ARRAY_SIZE As Integer = &H930C
' Public Const GL_TOP_LEVEL_ARRAY_STRIDE As Integer = &H930D
' Public Const GL_LOCATION As Integer = &H930E
' Public Const GL_LOCATION_INDEX As Integer = &H930F
' Public Const GL_IS_PER_PATCH As Integer = &H92E7
' Public Const GL_SHADER_STORAGE_BUFFER As Integer = &H90D2
' Public Const GL_SHADER_STORAGE_BUFFER_BINDING As Integer = &H90D3
' Public Const GL_SHADER_STORAGE_BUFFER_START As Integer = &H90D4
' Public Const GL_SHADER_STORAGE_BUFFER_SIZE As Integer = &H90D5
' Public Const GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS As Integer = &H90D6
' Public Const GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS As Integer = &H90D7
' Public Const GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS As Integer = &H90D8
' Public Const GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS As Integer = &H90D9
' Public Const GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS As Integer = &H90DA
' Public Const GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS As Integer = &H90DB
' Public Const GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS As Integer = &H90DC
' Public Const GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS As Integer = &H90DD
' Public Const GL_MAX_SHADER_STORAGE_BLOCK_SIZE As Integer = &H90DE
' Public Const GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT As Integer = &H90DF
' Public Const GL_SHADER_STORAGE_BARRIER_BIT As Integer = &H00002000
' Public Const GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES As Integer = &H8F39
' Public Const GL_DEPTH_STENCIL_TEXTURE_MODE As Integer = &H90EA
' Public Const GL_TEXTURE_BUFFER_OFFSET As Integer = &H919D
' Public Const GL_TEXTURE_BUFFER_SIZE As Integer = &H919E
' Public Const GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT As Integer = &H919F
' Public Const GL_TEXTURE_VIEW_MIN_LEVEL As Integer = &H82DB
' Public Const GL_TEXTURE_VIEW_NUM_LEVELS As Integer = &H82DC
' Public Const GL_TEXTURE_VIEW_MIN_LAYER As Integer = &H82DD
' Public Const GL_TEXTURE_VIEW_NUM_LAYERS As Integer = &H82DE
' Public Const GL_TEXTURE_IMMUTABLE_LEVELS As Integer = &H82DF
' Public Const GL_VERTEX_ATTRIB_BINDING As Integer = &H82D4
' Public Const GL_VERTEX_ATTRIB_RELATIVE_OFFSET As Integer = &H82D5
' Public Const GL_VERTEX_BINDING_DIVISOR As Integer = &H82D6
' Public Const GL_VERTEX_BINDING_OFFSET As Integer = &H82D7
' Public Const GL_VERTEX_BINDING_STRIDE As Integer = &H82D8
' Public Const GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET As Integer = &H82D9
' Public Const GL_MAX_VERTEX_ATTRIB_BINDINGS As Integer = &H82DA
' Public Const GL_VERTEX_BINDING_BUFFER As Integer = &H8F4F
' Public Extern glClearBufferData(iTarget As Integer,internalformat as integer, iFormat as integer, iType As Integer, data as byte[])
' Public Extern glClearBufferSubData(iTarget As Integer,internalformat as integer, offset as integer, size as integer, iFormat as integer, iType As Integer, data as byte[])
' Public Extern glDispatchCompute(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z)
' Public Extern glDispatchComputeIndirect(GLintptr indirect)
' Public Extern glCopyImageSubData(GLuint srcName, as integer srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, as integer dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth)
' Public Extern glFramebufferParameteri(iTarget As Integer, iPname As Integer, iParam As Integer)
' Public Extern glGetFramebufferParameteriv(iTarget As Integer, iPname As Integer, params as integer[])
' Public Extern glGetInternalformati64v(iTarget As Integer,internalformat as integer, iPname As Integer, BufSize As Integer, GLint64 * params)
' Public Extern glInvalidateTexSubImage(texture as Integer, iLevel as integer, xOffset as integer, yOffset as integer, zOffset as integer, iWidth As Integer, iHeight As Integer, iDepth as integer)
' Public Extern glInvalidateTexImage(texture as Integer, iLevel as integer)
' Public Extern glInvalidateBufferSubData(buffer as integer, offset as integer, GLsizeiptr length)
' Public Extern glInvalidateBufferData(buffer as integer)
' Public Extern glInvalidateFramebuffer(iTarget As Integer, n as IntegerumAttachments, const as integer * attachments)
' Public Extern glInvalidateSubFramebuffer(iTarget As Integer, n as IntegerumAttachments, const as integer * attachments, x As Integer, y As Integer, iWidth As Integer, iHeight As Integer)
' Public Extern glMultiDrawArraysIndirect(Mode As Integer, const * indirect, drawcount as integer, stride as integer)
' Public Extern glMultiDrawElementsIndirect(Mode As Integer, iType As Integer, const * indirect, drawcount as integer, stride as integer)
' Public Extern glGetProgramInterfaceiv(program As Integer, as integer programInterface, iPname As Integer, params as integer[])
' GLAPI GLuint APIENTRY glGetProgramResourceIndex(program As Integer, as integer programInterface, const name as string)
' Public Extern glGetProgramResourceName(program As Integer, as integer programInterface, iIndex As Integer, BufSize As Integer, legth as integer[], name as string)
' Public Extern glGetProgramResourceiv(program As Integer, as integer programInterface, iIndex As Integer, GLsizei propCount, const as integer * props, BufSize As Integer, legth as integer[], params as integer[])
' Public Extern Function glGetProgramResourceLocation(program As Integer, as integer programInterface, const name as string)
' Public Extern Function glGetProgramResourceLocationIndex(program As Integer, as integer programInterface, const name as string)
' Public Extern glShaderStorageBlockBinding(program As Integer, GLuint storageBlockIndex, GLuint storageBlockBinding)
' Public Extern glTexBufferRange(iTarget As Integer,internalformat as integer, buffer as integer, offset as integer, size as integer)
' Public Extern glTexStorage2DMultisample(iTarget As Integer, GLsizei samples,internalformat as integer, iWidth As Integer, iHeight As Integer, as byte fixedsamplelocations)
' Public Extern glTexStorage3DMultisample(iTarget As Integer, GLsizei samples,internalformat as integer, iWidth As Integer, iHeight As Integer, iDepth as integer, as byte fixedsamplelocations)
' Public Extern glTextureView(texture as Integer, iTarget As Integer, GLuint origtexture,internalformat as integer, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers)
' Public Extern glBindVertexBuffer(GLuint bindingindex, buffer as integer, offset as integer, stride as integer)
' Public Extern glVertexAttribFormat(GLuint attribindex, size as integer, iType As Integer, as byte normalized, GLuint relativeoffset)
' Public Extern glVertexAttribIFormat(GLuint attribindex, size as integer, iType As Integer, GLuint relativeoffset)
' Public Extern glVertexAttribLFormat(GLuint attribindex, size as integer, iType As Integer, GLuint relativeoffset)
' Public Extern glVertexAttribBinding(GLuint attribindex, GLuint bindingindex)
' Public Extern glVertexBindingDivisor(GLuint bindingindex, GLuint divisor)
' Public Extern glDebugMessageControl(as integer source, iType As Integer, as integer severity, iSize as Integer, ids as integer[], as byte enabled)
' Public Extern glDebugMessageInsert(as integer source, iType As Integer, id as integer, as integer severity, GLsizei length, const GLchar * buf)
' Public Extern glDebugMessageCallback(GLDEBUGPROC callback, const * userParam)
' GLAPI GLuint APIENTRY glGetDebugMessageLog(iCount As Integer, BufSize As Integer, as integer * sources, as integer * types, GLuint * ids, as integer * severities, legth as integer[]s, GLchar * messageLog)
' Public Extern glPushDebugGroup(as integer source, id as integer, GLsizei length, const GLchar * message)
' Public Extern glPopDebugGroup()
' Public Extern glObjectLabel(as integer identifier, GLuint name, GLsizei length, const GLchar * label)
' Public Extern glGetObjectLabel(as integer identifier, GLuint name, BufSize As Integer, legth as integer[], GLchar * label)
' Public Extern glObjectPtrLabel(const * ptr, GLsizei length, const GLchar * label)
' Public Extern glGetObjectPtrLabel(const * ptr, BufSize As Integer, legth as integer[], GLchar * label)
' Public Const GL_VERSION_4_4 1
' Public Const GL_MAX_VERTEX_ATTRIB_STRIDE As Integer = &H82E5
' Public Const GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED As Integer = &H8221
' Public Const GL_TEXTURE_BUFFER_BINDING As Integer = &H8C2A
' Public Const GL_MAP_PERSISTENT_BIT As Integer = &H0040
' Public Const GL_MAP_COHERENT_BIT As Integer = &H0080
' Public Const GL_DYNAMIC_STORAGE_BIT As Integer = &H0100
' Public Const GL_CLIENT_STORAGE_BIT As Integer = &H0200
' Public Const GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT As Integer = &H00004000
' Public Const GL_BUFFER_IMMUTABLE_STORAGE As Integer = &H821F
' Public Const GL_BUFFER_STORAGE_FLAGS As Integer = &H8220
' Public Const GL_CLEAR_TEXTURE As Integer = &H9365
' Public Const GL_LOCATION_COMPONENT As Integer = &H934A
' Public Const GL_TRANSFORM_FEEDBACK_BUFFER_INDEX As Integer = &H934B
' Public Const GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE As Integer = &H934C
' Public Const GL_QUERY_BUFFER As Integer = &H9192
' Public Const GL_QUERY_BUFFER_BARRIER_BIT As Integer = &H00008000
' Public Const GL_QUERY_BUFFER_BINDING As Integer = &H9193
' Public Const GL_QUERY_RESULT_NO_WAIT As Integer = &H9194
' Public Const GL_MIRROR_CLAMP_TO_EDGE As Integer = &H8743
' Public Extern glBufferStorage(iTarget As Integer, size as integer, data as byte[], GLbitfield flags)
' Public Extern glClearTexImage(texture as Integer, iLevel as integer, iFormat as integer, iType As Integer, data as byte[])
' Public Extern glClearTexSubImage(texture as Integer, iLevel as integer, xOffset as integer, yOffset as integer, zOffset as integer, iWidth As Integer, iHeight As Integer, iDepth as integer, iFormat as integer, iType As Integer, data as byte[])
' Public Extern glBindBuffersBase(iTarget As Integer, GLuint first, iSize as Integer, const buffers as integer[])
' Public Extern glBindBuffersRange(iTarget As Integer, GLuint first, iSize as Integer, const buffers as integer[], const GLintptr * offsets, const GLsizeiptr * sizes)
' Public Extern glBindTextures(GLuint first, iSize as Integer, const GLuint * textures)
' Public Extern glBindSamplers(GLuint first, iSize as Integer, const GLuint * samplers)
' Public Extern glBindImageTextures(GLuint first, iSize as Integer, const GLuint * textures)
' Public Extern glBindVertexBuffers(GLuint first, iSize as Integer, const buffers as integer[], const GLintptr * offsets, const GLsizei * strides)
' Public Const GL_VERSION_4_5 1
' Public Const GL_CONTEXT_LOST As Integer = &H0507
' Public Const GL_NEGATIVE_ONE_TO_ONE As Integer = &H935E
' Public Const GL_ZERO_TO_ONE As Integer = &H935F
' Public Const GL_CLIP_ORIGIN As Integer = &H935C
' Public Const GL_CLIP_DEPTH_MODE As Integer = &H935D
' Public Const GL_QUERY_WAIT_INVERTED As Integer = &H8E17
' Public Const GL_QUERY_NO_WAIT_INVERTED As Integer = &H8E18
' Public Const GL_QUERY_BY_REGION_WAIT_INVERTED As Integer = &H8E19
' Public Const GL_QUERY_BY_REGION_NO_WAIT_INVERTED As Integer = &H8E1A
' Public Const GL_MAX_CULL_DISTANCES As Integer = &H82F9
' Public Const GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES As Integer = &H82FA
' Public Const GL_TEXTURE_TARGET As Integer = &H1006
' Public Const GL_QUERY_TARGET As Integer = &H82EA
' Public Const GL_GUILTY_CONTEXT_RESET As Integer = &H8253
' Public Const GL_INNOCENT_CONTEXT_RESET As Integer = &H8254
' Public Const GL_UNKNOWN_CONTEXT_RESET As Integer = &H8255
' Public Const GL_RESET_NOTIFICATION_STRATEGY As Integer = &H8256
' Public Const GL_LOSE_CONTEXT_ON_RESET As Integer = &H8252
' Public Const GL_NO_RESET_NOTIFICATION As Integer = &H8261
' Public Const GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT As Integer = &H00000004
' Public Const GL_CONTEXT_RELEASE_BEHAVIOR As Integer = &H82FB
' Public Const GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH As Integer = &H82FC
' Public Extern glClipControl(as integer origin, as integer depth)
' Public Extern glCreateTransformFeedbacks(n as Integer, GLuint * ids)
' Public Extern glTransformFeedbackBufferBase(GLuint xfb, iIndex As Integer, buffer as integer)
' Public Extern glTransformFeedbackBufferRange(GLuint xfb, iIndex As Integer, buffer as integer, offset as integer, size as integer)
' Public Extern glGetTransformFeedbackiv(GLuint xfb, iPname As Integer, GLint * param)
' Public Extern glGetTransformFeedbacki_v(GLuint xfb, iPname As Integer, iIndex As Integer, GLint * param)
' Public Extern glGetTransformFeedbacki64_v(GLuint xfb, iPname As Integer, iIndex As Integer, GLint64 * param)
' Public Extern glCreateBuffers(n as Integer, buffers as integer[])
' Public Extern glNamedBufferStorage(buffer as integer, size as integer, data as byte[], GLbitfield flags)
' Public Extern glNamedBufferData(buffer as integer, size as integer, data as byte[], as integer usage)
' Public Extern glNamedBufferSubData(buffer as integer, offset as integer, size as integer, data as byte[])
' Public Extern glCopyNamedBufferSubData(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, size as integer)
' Public Extern glClearNamedBufferData(buffer as integer,internalformat as integer, iFormat as integer, iType As Integer, data as byte[])
' Public Extern glClearNamedBufferSubData(buffer as integer,internalformat as integer, offset as integer, size as integer, iFormat as integer, iType As Integer, data as byte[])
' GLAPI * APIENTRY glMapNamedBuffer(buffer as integer, as integer access)
' GLAPI * APIENTRY glMapNamedBufferRange(buffer as integer, offset as integer, GLsizeiptr length, GLbitfield access)
' GLAPI as byte APIENTRY glUnmapNamedBuffer(buffer as integer)
' Public Extern glFlushMappedNamedBufferRange(buffer as integer, offset as integer, GLsizeiptr length)
' Public Extern glGetNamedBufferParameteriv(buffer as integer, iPname As Integer, params as integer[])
' Public Extern glGetNamedBufferParameteri64v(buffer as integer, iPname As Integer, GLint64 * params)
' Public Extern glGetNamedBufferPointerv(buffer as integer, iPname As Integer, * * params)
' Public Extern glGetNamedBufferSubData(buffer as integer, offset as integer, size as integer, data as byte[])
' Public Extern glCreateFramebuffers(n as Integer, GLuint * framebuffers)
' Public Extern glNamedFramebufferRenderbuffer(GLuint framebuffer, as integer attachment, as integer renderbuffertarget, GLuint renderbuffer)
' Public Extern glNamedFramebufferParameteri(GLuint framebuffer, iPname As Integer, iParam As Integer)
' Public Extern glNamedFramebufferTexture(GLuint framebuffer, as integer attachment, texture as Integer, iLevel as integer)
' Public Extern glNamedFramebufferTextureLayer(GLuint framebuffer, as integer attachment, texture as Integer, iLevel as integer, GLint layer)
' Public Extern glNamedFramebufferDrawBuffer(GLuint framebuffer, iBuff as integer)
' Public Extern glNamedFramebufferDrawBuffers(GLuint framebuffer, n as Integer, const as integer * bufs)
' Public Extern glNamedFramebufferReadBuffer(GLuint framebuffer, as integer src)
' Public Extern glInvalidateNamedFramebufferData(GLuint framebuffer, n as IntegerumAttachments, const as integer * attachments)
' Public Extern glInvalidateNamedFramebufferSubData(GLuint framebuffer, n as IntegerumAttachments, const as integer * attachments, x As Integer, y As Integer, iWidth As Integer, iHeight As Integer)
' Public Extern glClearNamedFramebufferiv(GLuint framebuffer, iBuff as integerfer, GLint drawbuffer, value as integer[])
' Public Extern glClearNamedFramebufferuiv(GLuint framebuffer, iBuff as integerfer, GLint drawbuffer, const GLuint * value)
' Public Extern glClearNamedFramebufferfv(GLuint framebuffer, iBuff as integerfer, GLint drawbuffer, const GLsingle * value)
' Public Extern glClearNamedFramebufferfi(GLuint framebuffer, iBuff as integerfer, GLint drawbuffer, GLsingle depth, GLint stencil)
' Public Extern glBlitNamedFramebuffer(GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GiMaskBitField as integer, as integer filter)
' GLAPI as integer APIENTRY glCheckNamedFramebufferStatus(GLuint framebuffer, iTarget As Integer)
' Public Extern glGetNamedFramebufferParameteriv(GLuint framebuffer, iPname As Integer, GLint * param)
' Public Extern glGetNamedFramebufferAttachmentParameteriv(GLuint framebuffer, as integer attachment, iPname As Integer, params as integer[])
' Public Extern glCreateRenderbuffers(n as Integer, GLuint * renderbuffers)
' Public Extern glNamedRenderbufferStorage(GLuint renderbuffer,internalformat as integer, iWidth As Integer, iHeight As Integer)
' Public Extern glNamedRenderbufferStorageMultisample(GLuint renderbuffer, GLsizei samples,internalformat as integer, iWidth As Integer, iHeight As Integer)
' Public Extern glGetNamedRenderbufferParameteriv(GLuint renderbuffer, iPname As Integer, params as integer[])
' Public Extern glCreateTextures(iTarget As Integer, n as Integer, GLuint * textures)
' Public Extern glTextureBuffer(texture as Integer,internalformat as integer, buffer as integer)
' Public Extern glTextureBufferRange(texture as Integer,internalformat as integer, buffer as integer, offset as integer, size as integer)
' Public Extern glTextureStorage1D(texture as Integer, GLsizei levels,internalformat as integer, iWidth As Integer)
' Public Extern glTextureStorage2D(texture as Integer, GLsizei levels,internalformat as integer, iWidth As Integer, iHeight As Integer)
' Public Extern glTextureStorage3D(texture as Integer, GLsizei levels,internalformat as integer, iWidth As Integer, iHeight As Integer, iDepth as integer)
' Public Extern glTextureStorage2DMultisample(texture as Integer, GLsizei samples,internalformat as integer, iWidth As Integer, iHeight As Integer, as byte fixedsamplelocations)
' Public Extern glTextureStorage3DMultisample(texture as Integer, GLsizei samples,internalformat as integer, iWidth As Integer, iHeight As Integer, iDepth as integer, as byte fixedsamplelocations)
' Public Extern glTextureSubImage1D(texture as Integer, iLevel as integer, xOffset as integer, iWidth As Integer, iFormat as integer, iType As Integer, pixels as byte[])
' Public Extern glTextureSubImage2D(texture as Integer, iLevel as integer, xOffset as integer, yOffset as integer, iWidth As Integer, iHeight As Integer, iFormat as integer, iType As Integer, pixels as byte[])
' Public Extern glTextureSubImage3D(texture as Integer, iLevel as integer, xOffset as integer, yOffset as integer, zOffset as integer, iWidth As Integer, iHeight As Integer, iDepth as integer, iFormat as integer, iType As Integer, pixels as byte[])
' Public Extern glCompressedTextureSubImage1D(texture as Integer, iLevel as integer, xOffset as integer, iWidth As Integer, iFormat as integer, imagesize as integer, data as byte[])
' Public Extern glCompressedTextureSubImage2D(texture as Integer, iLevel as integer, xOffset as integer, yOffset as integer, iWidth As Integer, iHeight As Integer, iFormat as integer, imagesize as integer, data as byte[])
' Public Extern glCompressedTextureSubImage3D(texture as Integer, iLevel as integer, xOffset as integer, yOffset as integer, zOffset as integer, iWidth As Integer, iHeight As Integer, iDepth as integer, iFormat as integer, imagesize as integer, data as byte[])
' Public Extern glCopyTextureSubImage1D(texture as Integer, iLevel as integer, xOffset as integer, x As Integer, y As Integer, iWidth As Integer)
' Public Extern glCopyTextureSubImage2D(texture as Integer, iLevel as integer, xOffset as integer, yOffset as integer, x As Integer, y As Integer, iWidth As Integer, iHeight As Integer)
' Public Extern glCopyTextureSubImage3D(texture as Integer, iLevel as integer, xOffset as integer, yOffset as integer, zOffset as integer, x As Integer, y As Integer, iWidth As Integer, iHeight As Integer)
' Public Extern glTextureParameterf(texture as Integer, iPname As Integer, fParam As single)
' Public Extern glTextureParameterfv(texture as Integer, iPname As Integer, const GLsingle * param)
' Public Extern glTextureParameteri(texture as Integer, iPname As Integer, iParam As Integer)
' Public Extern glTextureParameterIiv(texture as Integer, iPname As Integer, inxParams as integer[])
' Public Extern glTextureParameterIuiv(texture as Integer, iPname As Integer, const params as integer[])
' Public Extern glTextureParameteriv(texture as Integer, iPname As Integer, const GLint * param)
' Public Extern glGenerateTextureMipmap(texture as Integer)
' Public Extern glBindTextureUnit(GLuint unit, texture as Integer)
' Public Extern glGetTextureImage(texture as Integer, iLevel as integer, iFormat as integer, iType As Integer, BufSize As Integer, * pixels)
' Public Extern glGetCompressedTextureImage(texture as Integer, iLevel as integer, BufSize As Integer, * pixels)
' Public Extern glGetTextureLevelParameterfv(texture as Integer, iLevel as integer, iPname As Integer, params as single[])
' Public Extern glGetTextureLevelParameteriv(texture as Integer, iLevel as integer, iPname As Integer, params as integer[])
' Public Extern glGetTextureParameterfv(texture as Integer, iPname As Integer, params as single[])
' Public Extern glGetTextureParameterIiv(texture as Integer, iPname As Integer, params as integer[])
' Public Extern glGetTextureParameterIuiv(texture as Integer, iPname As Integer, params as integer[])
' Public Extern glGetTextureParameteriv(texture as Integer, iPname As Integer, params as integer[])
' Public Extern glCreateVertexArrays(n as Integer, GLuint * arrays)
' Public Extern glDisableVertexArrayAttrib(GLuint vaobj, iIndex As Integer)
' Public Extern glEnableVertexArrayAttrib(GLuint vaobj, iIndex As Integer)
' Public Extern glVertexArrayElementBuffer(GLuint vaobj, buffer as integer)
' Public Extern glVertexArrayVertexBuffer(GLuint vaobj, GLuint bindingindex, buffer as integer, offset as integer, stride as integer)
' Public Extern glVertexArrayVertexBuffers(GLuint vaobj, GLuint first, iSize as Integer, const buffers as integer[], const GLintptr * offsets, const GLsizei * strides)
' Public Extern glVertexArrayAttribBinding(GLuint vaobj, GLuint attribindex, GLuint bindingindex)
' Public Extern glVertexArrayAttribFormat(GLuint vaobj, GLuint attribindex, size as integer, iType As Integer, as byte normalized, GLuint relativeoffset)
' Public Extern glVertexArrayAttribIFormat(GLuint vaobj, GLuint attribindex, size as integer, iType As Integer, GLuint relativeoffset)
' Public Extern glVertexArrayAttribLFormat(GLuint vaobj, GLuint attribindex, size as integer, iType As Integer, GLuint relativeoffset)
' Public Extern glVertexArrayBindingDivisor(GLuint vaobj, GLuint bindingindex, GLuint divisor)
' Public Extern glGetVertexArrayiv(GLuint vaobj, iPname As Integer, GLint * param)
' Public Extern glGetVertexArrayIndexediv(GLuint vaobj, iIndex As Integer, iPname As Integer, GLint * param)
' Public Extern glGetVertexArrayIndexed64iv(GLuint vaobj, iIndex As Integer, iPname As Integer, GLint64 * param)
' Public Extern glCreateSamplers(n as Integer, GLuint * samplers)
' Public Extern glCreateProgramPipelines(n as Integer, GLuint * pipelines)
' Public Extern glCreateQueries(iTarget As Integer, n as Integer, GLuint * ids)
' Public Extern glGetQueryBufferObjecti64v(id as integer, buffer as integer, iPname As Integer, offset as integer)
' Public Extern glGetQueryBufferObjectiv(id as integer, buffer as integer, iPname As Integer, offset as integer)
' Public Extern glGetQueryBufferObjectui64v(id as integer, buffer as integer, iPname As Integer, offset as integer)
' Public Extern glGetQueryBufferObjectuiv(id as integer, buffer as integer, iPname As Integer, offset as integer)
' Public Extern glMemoryBarrierByRegion(GLbitfield barriers)
' Public Extern glGetTextureSubImage(texture as Integer, iLevel as integer, xOffset as integer, yOffset as integer, zOffset as integer, iWidth As Integer, iHeight As Integer, iDepth as integer, iFormat as integer, iType As Integer, BufSize As Integer, * pixels)
' Public Extern glGetCompressedTextureSubImage(texture as Integer, iLevel as integer, xOffset as integer, yOffset as integer, zOffset as integer, iWidth As Integer, iHeight As Integer, iDepth as integer, BufSize As Integer, * pixels)
' GLAPI as integer APIENTRY glGetGraphicsResetStatus()
' Public Extern glGetnCompressedTexImage(iTarget As Integer, GLint lod, BufSize As Integer, * pixels)
' Public Extern glGetnTexImage(iTarget As Integer, iLevel as integer, iFormat as integer, iType As Integer, BufSize As Integer, * pixels)
' Public Extern glGetnUniformdv(program As Integer, location as Integer, BufSize As Integer, as float * params)
' Public Extern glGetnUniformfv(program As Integer, location as Integer, BufSize As Integer, params as single[])
' Public Extern glGetnUniformiv(program As Integer, location as Integer, BufSize As Integer, params as integer[])
' Public Extern glGetnUniformuiv(program As Integer, location as Integer, BufSize As Integer, params as integer[])
' Public Extern glReadnPixels(x As Integer, y As Integer, iWidth As Integer, iHeight As Integer, iFormat as integer, iType As Integer, BufSize As Integer, data as byte[])
' Public Extern glTextureBarrier()
' Public Const GL_VERSION_4_6 1
' Public Const GL_SHADER_BINARY_FORMAT_SPIR_V As Integer = &H9551
' Public Const GL_SPIR_V_BINARY As Integer = &H9552
' Public Const GL_PARAMETER_BUFFER As Integer = &H80EE
' Public Const GL_PARAMETER_BUFFER_BINDING As Integer = &H80EF
' Public Const GL_CONTEXT_FLAG_NO_ERROR_BIT As Integer = &H00000008
' Public Const GL_VERTICES_SUBMITTED As Integer = &H82EE
' Public Const GL_PRIMITIVES_SUBMITTED As Integer = &H82EF
' Public Const GL_VERTEX_SHADER_INVOCATIONS As Integer = &H82F0
' Public Const GL_TESS_CONTROL_SHADER_PATCHES As Integer = &H82F1
' Public Const GL_TESS_EVALUATION_SHADER_INVOCATIONS As Integer = &H82F2
' Public Const GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED As Integer = &H82F3
' Public Const GL_FRAGMENT_SHADER_INVOCATIONS As Integer = &H82F4
' Public Const GL_COMPUTE_SHADER_INVOCATIONS As Integer = &H82F5
' Public Const GL_CLIPPING_INPUT_PRIMITIVES As Integer = &H82F6
' Public Const GL_CLIPPING_OUTPUT_PRIMITIVES As Integer = &H82F7
' Public Const GL_POLYGON_OFFSET_CLAMP As Integer = &H8E1B
' Public Const GL_SPIR_V_EXTENSIONS As Integer = &H9553
' Public Const GL_NUM_SPIR_V_EXTENSIONS As Integer = &H9554
' Public Const GL_TEXTURE_MAX_ANISOTROPY As Integer = &H84FE
' Public Const GL_MAX_TEXTURE_MAX_ANISOTROPY As Integer = &H84FF
' Public Const GL_TRANSFORM_FEEDBACK_OVERFLOW As Integer = &H82EC
' Public Const GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW As Integer = &H82ED
' Publicshader As IntegercializeShader(GLuint shader, const GLchar * pEntryPoint, GLuint numSpecializationConstants, const GLuint * pConstantIndex, const GLuint * pConstantValue)
' Public Extern glMultiDrawArraysIndirectCount(Mode As Integer, const * indirect, GLintptr drawcount, GLsizei maxdrawcount, stride as integer)
' Public Extern glMultiDrawElementsIndirectCount(Mode As Integer, iType As Integer, const * indirect, GLintptr drawcount, GLsizei maxdrawcount, stride as integer)
' Public Extern glPolygonOffsetClamp(GLsingle factor, GLsingle units, GLsingle clamp)
' Public Const GL_ARB_ES3_2_compatibility 1
' Public Const GL_PRIMITIVE_BOUNDING_BOX_ARB As Integer = &H92BE
' Public Const GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB As Integer = &H9381
' Public Const GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB As Integer = &H9382
' Public Extern glPrimitiveBoundingBoxARB(GLsingle minX, GLsingle minY, GLsingle minZ, GLsingle minW, GLsingle maxX, GLsingle maxY, GLsingle maxZ, GLsingle maxW)
' GLAPI GLuint64 APIENTRY glGetTextureHandleARB(texture as Integer)
' GLAPI GLuint64 APIENTRY glGetTextureSamplerHandleARB(texture as Integer, GLuint sampler)
' Public Extern glMakeTextureHandleResidentARB(GLuint64 handle)
' Public Extern glMakeTextureHandleNonResidentARB(GLuint64 handle)
' GLAPI GLuint64 APIENTRY glGetImageHandleARB(texture as Integer, iLevel as integer, as byte layered, GLint layer, iFormat as integer)
' Public Extern glMakeImageHandleResidentARB(GLuint64 handle, as integer access)
' Public Extern glMakeImageHandleNonResidentARB(GLuint64 handle)
' Public Extern glUniformHandleui64ARB(location as Integer, GLuint64 value)
' Public Extern glUniformHandleui64vARB(location as Integer, iSize as Integer, const GLuint64 * value)
' Public Extern glProgramUniformHandleui64ARB(program As Integer, location as Integer, GLuint64 value)
' Public Extern glProgramUniformHandleui64vARB(program As Integer, location as Integer, iSize as Integer, const GLuint64 * values)
' GLAPI as byte APIENTRY glIsTextureHandleResidentARB(GLuint64 handle)
' GLAPI as byte APIENTRY glIsImageHandleResidentARB(GLuint64 handle)
' Public Extern glVertexAttribL1ui64ARB(iIndex As Integer, GLuint64EXT x)
' Public Extern glVertexAttribL1ui64vARB(iIndex As Integer, const GLuint64EXT * v)
' Public Extern glGetVertexAttribLui64vARB(iIndex As Integer, iPname As Integer, GLuint64EXT * params)
' Public Const GL_ARB_cl_event 1
' Struct _cl_context
' Struct _cl_event
' Public Const GL_SYNC_CL_EVENT_ARB As Integer = &H8240
' Public Const GL_SYNC_CL_EVENT_COMPLETE_ARB As Integer = &H8241
'
' GLAPI GLsync APIENTRY glCreateSyncFromCLeventARB(struct _cl_context * context, struct _cl_event * Event , GLbitfield flags)
' Public Const GL_ARB_compute_variable_group_size 1
' Public Const GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB As Integer = &H9344
' Public Const GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB As Integer = &H90EB
' Public Const GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB As Integer = &H9345
' Public Const GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB As Integer = &H91BF
'
' Public Extern glDispatchComputeGroupSizeARB(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z)
'
' Public Const GL_ARB_debug_output 1
' typedef(APIENTRY * GLDEBUGPROCARB)(as integer source, iType As Integer, id as integer, as integer severity, GLsizei length, const GLchar * message, const * userParam)
' Public Const GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB As Integer = &H8242
' Public Const GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB As Integer = &H8243
' Public Const GL_DEBUG_CALLBACK_FUNCTION_ARB As Integer = &H8244
' Public Const GL_DEBUG_CALLBACK_USER_PARAM_ARB As Integer = &H8245
' Public Const GL_DEBUG_SOURCE_API_ARB As Integer = &H8246
' Public Const GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB As Integer = &H8247
' Public Const GL_DEBUG_SOURCE_SHADER_COMPILER_ARB As Integer = &H8248
' Public Const GL_DEBUG_SOURCE_THIRD_PARTY_ARB As Integer = &H8249
' Public Const GL_DEBUG_SOURCE_APPLICATION_ARB As Integer = &H824A
' Public Const GL_DEBUG_SOURCE_OTHER_ARB As Integer = &H824B
' Public Const GL_DEBUG_TYPE_ERROR_ARB As Integer = &H824C
' Public Const GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB As Integer = &H824D
' Public Const GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB As Integer = &H824E
' Public Const GL_DEBUG_TYPE_PORTABILITY_ARB As Integer = &H824F
' Public Const GL_DEBUG_TYPE_PERFORMANCE_ARB As Integer = &H8250
' Public Const GL_DEBUG_TYPE_OTHER_ARB As Integer = &H8251
' Public Const GL_MAX_DEBUG_MESSAGE_LENGTH_ARB As Integer = &H9143
' Public Const GL_MAX_DEBUG_LOGGED_MESSAGES_ARB As Integer = &H9144
' Public Const GL_DEBUG_LOGGED_MESSAGES_ARB As Integer = &H9145
' Public Const GL_DEBUG_SEVERITY_HIGH_ARB As Integer = &H9146
' Public Const GL_DEBUG_SEVERITY_MEDIUM_ARB As Integer = &H9147
' Public Const GL_DEBUG_SEVERITY_LOW_ARB As Integer = &H9148
'
' Public Extern glDebugMessageControlARB(as integer source, iType As Integer, as integer severity, iSize as Integer, ids as integer[], as byte enabled)
' Public Extern glDebugMessageInsertARB(as integer source, iType As Integer, id as integer, as integer severity, GLsizei length, const GLchar * buf)
' Public Extern glDebugMessageCallbackARB(GLDEBUGPROCARB callback, const * userParam)
' GLAPI GLuint APIENTRY glGetDebugMessageLogARB(iCount As Integer, BufSize As Integer, as integer * sources, as integer * types, GLuint * ids, as integer * severities, legth as integer[]s, GLchar * messageLog)
'
' Public Const GL_ARB_draw_buffers_blend 1
'
' Public Extern glBlendEquationiARB(GLuint buf, Mode As Integer)
' Public Extern glBlendEquationSeparateiARB(GLuint buf, Mode As IntegerRGB, Mode As IntegerAlpha)
' Public Extern glBlendFunciARB(GLuint buf, as integer src, as integer dst)
' Public Extern glBlendFuncSeparateiARB(GLuint buf, as integer srcRGB, as integer dstRGB, as integer srcAlpha, as integer dstAlpha)
'
' Public Const GL_ARB_draw_instanced 1
'
' Public Extern glDrawArraysInstancedARB(Mode As Integer, first as integer, iSize as Integer, GLsizei primcount)
' Public Extern glDrawElementsInstancedARB(Mode As Integer, iSize as Integer, iType As Integer, const * indices, GLsizei primcount)
'
' Public Const GL_ARB_geometry_shader4 1
' Public Const GL_LINES_ADJACENCY_ARB As Integer = &H000A
' Public Const GL_LINE_STRIP_ADJACENCY_ARB As Integer = &H000B
' Public Const GL_TRIANGLES_ADJACENCY_ARB As Integer = &H000C
' Public Const GL_TRIANGLE_STRIP_ADJACENCY_ARB As Integer = &H000D
' Public Const GL_PROGRAM_POINT_SIZE_ARB As Integer = &H8642
' Public Const GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB As Integer = &H8C29
' Public Const GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB As Integer = &H8DA7
' Public Const GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB As Integer = &H8DA8
' Public Const GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB As Integer = &H8DA9
' Public Const GL_GEOMETRY_SHADER_ARB As Integer = &H8DD9
' Public Const GL_GEOMETRY_VERTICES_OUT_ARB As Integer = &H8DDA
' Public Const GL_GEOMETRY_INPUT_TYPE_ARB As Integer = &H8DDB
' Public Const GL_GEOMETRY_OUTPUT_TYPE_ARB As Integer = &H8DDC
' Public Const GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB As Integer = &H8DDD
' Public Const GL_MAX_VERTEX_VARYING_COMPONENTS_ARB As Integer = &H8DDE
' Public Const GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB As Integer = &H8DDF
' Public Const GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB As Integer = &H8DE0
' Public Const GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB As Integer = &H8DE1
'
' Public Extern glProgramParameteriARB(program As Integer, iPname As Integer, GLint value)
' Public Extern glFramebufferTextureARB(iTarget As Integer, as integer attachment, texture as Integer, iLevel as integer)
' Public Extern glFramebufferTextureLayerARB(iTarget As Integer, as integer attachment, texture as Integer, iLevel as integer, GLint layer)
' Public Extern glFramebufferTextureFaceARB(iTarget As Integer, as integer attachment, texture as Integer, iLevel as integer, face As Integer)
'
' Public Const GL_ARB_gl_spirv 1
' Public Const GL_SHADER_BINARY_FORMAT_SPIR_V_ARB As Integer = &H9551
' Public Const GL_SPIR_V_BINARY_ARB As Integer = &H9552
'
' Public Extern glSpecializeShadshader As Integershader, const GLchar * pEntryPoint, GLuint numSpecializationConstants, const GLuint * pConstantIndex, const GLuint * pConstantValue)
'
' Public Const GL_ARB_gpu_shader_int64 1
' Public Const GL_INT64_ARB As Integer = &H140E
' Public Const GL_INT64_VEC2_ARB As Integer = &H8FE9
' Public Const GL_INT64_VEC3_ARB As Integer = &H8FEA
' Public Const GL_INT64_VEC4_ARB As Integer = &H8FEB
' Public Const GL_UNSIGNED_INT64_VEC2_ARB As Integer = &H8FF5
' Public Const GL_UNSIGNED_INT64_VEC3_ARB As Integer = &H8FF6
' Public Const GL_UNSIGNED_INT64_VEC4_ARB As Integer = &H8FF7
'
' Public Extern glUniform1i64ARB(location as Integer, GLint64 x)
' Public Extern glUniform2i64ARB(location as Integer, GLint64 x, GLint64 y)
' Public Extern glUniform3i64ARB(location as Integer, GLint64 x, GLint64 y, GLint64 z)
' Public Extern glUniform4i64ARB(location as Integer, GLint64 x, GLint64 y, GLint64 z, GLint64 w)
' Public Extern glUniform1i64vARB(location as Integer, iSize as Integer, const GLint64 * value)
' Public Extern glUniform2i64vARB(location as Integer, iSize as Integer, const GLint64 * value)
' Public Extern glUniform3i64vARB(location as Integer, iSize as Integer, const GLint64 * value)
' Public Extern glUniform4i64vARB(location as Integer, iSize as Integer, const GLint64 * value)
' Public Extern glUniform1ui64ARB(location as Integer, GLuint64 x)
' Public Extern glUniform2ui64ARB(location as Integer, GLuint64 x, GLuint64 y)
' Public Extern glUniform3ui64ARB(location as Integer, GLuint64 x, GLuint64 y, GLuint64 z)
' Public Extern glUniform4ui64ARB(location as Integer, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w)
' Public Extern glUniform1ui64vARB(location as Integer, iSize as Integer, const GLuint64 * value)
' Public Extern glUniform2ui64vARB(location as Integer, iSize as Integer, const GLuint64 * value)
' Public Extern glUniform3ui64vARB(location as Integer, iSize as Integer, const GLuint64 * value)
' Public Extern glUniform4ui64vARB(location as Integer, iSize as Integer, const GLuint64 * value)
' Public Extern glGetUniformi64vARB(program As Integer, location as Integer, GLint64 * params)
' Public Extern glGetUniformui64vARB(program As Integer, location as Integer, GLuint64 * params)
' Public Extern glGetnUniformi64vARB(program As Integer, location as Integer, BufSize As Integer, GLint64 * params)
' Public Extern glGetnUniformui64vARB(program As Integer, location as Integer, BufSize As Integer, GLuint64 * params)
' Public Extern glProgramUniform1i64ARB(program As Integer, location as Integer, GLint64 x)
' Public Extern glProgramUniform2i64ARB(program As Integer, location as Integer, GLint64 x, GLint64 y)
' Public Extern glProgramUniform3i64ARB(program As Integer, location as Integer, GLint64 x, GLint64 y, GLint64 z)
' Public Extern glProgramUniform4i64ARB(program As Integer, location as Integer, GLint64 x, GLint64 y, GLint64 z, GLint64 w)
' Public Extern glProgramUniform1i64vARB(program As Integer, location as Integer, iSize as Integer, const GLint64 * value)
' Public Extern glProgramUniform2i64vARB(program As Integer, location as Integer, iSize as Integer, const GLint64 * value)
' Public Extern glProgramUniform3i64vARB(program As Integer, location as Integer, iSize as Integer, const GLint64 * value)
' Public Extern glProgramUniform4i64vARB(program As Integer, location as Integer, iSize as Integer, const GLint64 * value)
' Public Extern glProgramUniform1ui64ARB(program As Integer, location as Integer, GLuint64 x)
' Public Extern glProgramUniform2ui64ARB(program As Integer, location as Integer, GLuint64 x, GLuint64 y)
' Public Extern glProgramUniform3ui64ARB(program As Integer, location as Integer, GLuint64 x, GLuint64 y, GLuint64 z)
' Public Extern glProgramUniform4ui64ARB(program As Integer, location as Integer, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w)
' Public Extern glProgramUniform1ui64vARB(program As Integer, location as Integer, iSize as Integer, const GLuint64 * value)
' Public Extern glProgramUniform2ui64vARB(program As Integer, location as Integer, iSize as Integer, const GLuint64 * value)
' Public Extern glProgramUniform3ui64vARB(program As Integer, location as Integer, iSize as Integer, const GLuint64 * value)
' Public Extern glProgramUniform4ui64vARB(program As Integer, location as Integer, iSize as Integer, const GLuint64 * value)
'
' Public Const GL_ARB_indirect_parameters 1
' Public Const GL_PARAMETER_BUFFER_ARB As Integer = &H80EE
' Public Const GL_PARAMETER_BUFFER_BINDING_ARB As Integer = &H80EF
'
' Public Extern glMultiDrawArraysIndirectCountARB(Mode As Integer, const * indirect, GLintptr drawcount, GLsizei maxdrawcount, stride as integer)
' Public Extern glMultiDrawElementsIndirectCountARB(Mode As Integer, iType As Integer, const * indirect, GLintptr drawcount, GLsizei maxdrawcount, stride as integer)
'
' Public Const GL_ARB_instanced_arrays 1
' Public Const GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB As Integer = &H88FE
'
' Public Extern glVertexAttribDivisorARB(iIndex As Integer, GLuint divisor)
'
' Public Const GL_ARB_internalformat_query2 1
' Public Const GL_SRGB_DECODE_ARB As Integer = &H8299
' Public Const GL_VIEW_CLASS_EAC_R11 As Integer = &H9383
' Public Const GL_VIEW_CLASS_EAC_RG11 As Integer = &H9384
' Public Const GL_VIEW_CLASS_ETC2_RGB As Integer = &H9385
' Public Const GL_VIEW_CLASS_ETC2_RGBA As Integer = &H9386
' Public Const GL_VIEW_CLASS_ETC2_EAC_RGBA As Integer = &H9387
' Public Const GL_VIEW_CLASS_ASTC_4x4_RGBA As Integer = &H9388
' Public Const GL_VIEW_CLASS_ASTC_5x4_RGBA As Integer = &H9389
' Public Const GL_VIEW_CLASS_ASTC_5x5_RGBA As Integer = &H938A
' Public Const GL_VIEW_CLASS_ASTC_6x5_RGBA As Integer = &H938B
' Public Const GL_VIEW_CLASS_ASTC_6x6_RGBA As Integer = &H938C
' Public Const GL_VIEW_CLASS_ASTC_8x5_RGBA As Integer = &H938D
' Public Const GL_VIEW_CLASS_ASTC_8x6_RGBA As Integer = &H938E
' Public Const GL_VIEW_CLASS_ASTC_8x8_RGBA As Integer = &H938F
' Public Const GL_VIEW_CLASS_ASTC_1 As Integer = & H5_RGBA As Integer = &H9390
' Public Const GL_VIEW_CLASS_ASTC_1 As Integer = & H6_RGBA As Integer = &H9391
' Public Const GL_VIEW_CLASS_ASTC_1 As Integer = & H8_RGBA As Integer = &H9392
' Public Const GL_VIEW_CLASS_ASTC_1 As Integer = & H10_RGBA As Integer = &H9393
' Public Const GL_VIEW_CLASS_ASTC_12x10_RGBA As Integer = &H9394
' Public Const GL_VIEW_CLASS_ASTC_12x12_RGBA As Integer = &H9395
'
' Public Const GL_ARB_parallel_shader_compile 1
' Public Const GL_MAX_SHADER_COMPILER_THREADS_ARB As Integer = &H91B0
' Public Const GL_COMPLETION_STATUS_ARB As Integer = &H91B1
' typedef(APIENTRYP PFNGLMAXSHADERCOMPILERTHREADSARBPROC)(iCount As Integer)
'
' Public Extern glMaxShaderCompilerThreadsARB(iCount As Integer)
'
' Public Const GL_ARB_pipeline_statistics_query 1
' Public Const GL_VERTICES_SUBMITTED_ARB As Integer = &H82EE
' Public Const GL_PRIMITIVES_SUBMITTED_ARB As Integer = &H82EF
' Public Const GL_VERTEX_SHADER_INVOCATIONS_ARB As Integer = &H82F0
' Public Const GL_TESS_CONTROL_SHADER_PATCHES_ARB As Integer = &H82F1
' Public Const GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB As Integer = &H82F2
' Public Const GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB As Integer = &H82F3
' Public Const GL_FRAGMENT_SHADER_INVOCATIONS_ARB As Integer = &H82F4
' Public Const GL_COMPUTE_SHADER_INVOCATIONS_ARB As Integer = &H82F5
' Public Const GL_CLIPPING_INPUT_PRIMITIVES_ARB As Integer = &H82F6
' Public Const GL_CLIPPING_OUTPUT_PRIMITIVES_ARB As Integer = &H82F7
'
' Public Const GL_ARB_pixel_buffer_object 1
' Public Const GL_PIXEL_PACK_BUFFER_ARB As Integer = &H88EB
' Public Const GL_PIXEL_UNPACK_BUFFER_ARB As Integer = &H88EC
' Public Const GL_PIXEL_PACK_BUFFER_BINDING_ARB As Integer = &H88ED
' Public Const GL_PIXEL_UNPACK_BUFFER_BINDING_ARB As Integer = &H88EF
'
' Public Const GL_ARB_robustness 1
' Public Const GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB As Integer = &H00000004
' Public Const GL_LOSE_CONTEXT_ON_RESET_ARB As Integer = &H8252
' Public Const GL_GUILTY_CONTEXT_RESET_ARB As Integer = &H8253
' Public Const GL_INNOCENT_CONTEXT_RESET_ARB As Integer = &H8254
' Public Const GL_UNKNOWN_CONTEXT_RESET_ARB As Integer = &H8255
' Public Const GL_RESET_NOTIFICATION_STRATEGY_ARB As Integer = &H8256
' Public Const GL_NO_RESET_NOTIFICATION_ARB As Integer = &H8261
'
' GLAPI as integer APIENTRY glGetGraphicsResetStatusARB()
' Public Extern glGetnTexImageARB(iTarget As Integer, iLevel as integer, iFormat as integer, iType As Integer, BufSize As Integer, * img)
' Public Extern glReadnPixelsARB(x As Integer, y As Integer, iWidth As Integer, iHeight As Integer, iFormat as integer, iType As Integer, BufSize As Integer, data as byte[])
' Public Extern glGetnCompressedTexImageARB(iTarget As Integer, GLint lod, BufSize As Integer, * img)
' Public Extern glGetnUniformfvARB(program As Integer, location as Integer, BufSize As Integer, params as single[])
' Public Extern glGetnUniformivARB(program As Integer, location as Integer, BufSize As Integer, params as integer[])
' Public Extern glGetnUniformuivARB(program As Integer, location as Integer, BufSize As Integer, params as integer[])
' Public Extern glGetnUniformdvARB(program As Integer, location as Integer, BufSize As Integer, as float * params)
'
' Public Const GL_ARB_sample_locations 1
' Public Const GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB As Integer = &H933D
' Public Const GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB As Integer = &H933E
' Public Const GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB As Integer = &H933F
' Public Const GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB As Integer = &H9340
' Public Const GL_SAMPLE_LOCATION_ARB As Integer = &H8E50
' Public Const GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB As Integer = &H9341
' Public Const GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB As Integer = &H9342
' Public Const GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB As Integer = &H9343
'
' Public Extern glFramebufferSampleLocationsfvARB(iTarget As Integer, start as integer, iSize as Integer, const GLsingle * v)
' Public Extern glNamedFramebufferSampleLocationsfvARB(GLuint framebuffer, start as integer, iSize as Integer, const GLsingle * v)
' Public Extern glEvaluateDepthValuesARB()
'
' Public Const GL_ARB_sample_shading 1
' Public Const GL_SAMPLE_SHADING_ARB As Integer = &H8C36
' Public Const GL_MIN_SAMPLE_SHADING_VALUE_ARB As Integer = &H8C37
'
' Public Extern glMinSampleShadingARB(value as single)
'
' Public Const GL_ARB_shading_language_include 1
' Public Const GL_SHADER_INCLUDE_ARB As Integer = &H8DAE
' Public Const GL_NAMED_STRING_LENGTH_ARB As Integer = &H8DE9
' Public Const GL_NAMED_STRING_TYPE_ARB As Integer = &H8DEA
'
' Public Extern glNamedStringARB(iType As Integer, GLint namelen, const name as string, GLint stringlen, const GLchar * string)
' Public Extern glDeleteNamedStringARB(GLint namelen, const name as string)
' Public Extern glCompileShaderIncludeARB(GLuint shader, iSize as Integer, const GLchar * const * path, const GLinshader As Integer
' GLAPI as byte APIENTRY glIsNamedStringARB(GLint namelen, const name as string)
' Public Extern glGetNamedStringARB(GLint namelen, const name as string, BufSize As Integer, GLint * stringlen, GLchar * string)
' Public Extern glGetNamedStringivARB(GLint namelen, const name as string, iPname As Integer, params as integer[])
'
' Public Const GL_ARB_shading_language_packing 1
'
' Public Const GL_ARB_sparse_buffer 1
' Public Const GL_SPARSE_STORAGE_BIT_ARB As Integer = &H0400
' Public Const GL_SPARSE_BUFFER_PAGE_SIZE_ARB As Integer = &H82F8
'
' Public Extern glBufferPageCommitmentARB(iTarget As Integer, offset as integer, size as integer, as byte commit)
' Public Extern glNamedBufferPageCommitmentEXT(buffer as integer, offset as integer, size as integer, as byte commit)
' Public Extern glNamedBufferPageCommitmentARB(buffer as integer, offset as integer, size as integer, as byte commit)
'
' Public Const GL_ARB_sparse_texture 1
' Public Const GL_TEXTURE_SPARSE_ARB As Integer = &H91A6
' Public Const GL_VIRTUAL_PAGE_SIZE_INDEX_ARB As Integer = &H91A7
' Public Const GL_NUM_SPARSE_LEVELS_ARB As Integer = &H91AA
' Public Const GL_NUM_VIRTUAL_PAGE_SIZES_ARB As Integer = &H91A8
' Public Const GL_VIRTUAL_PAGE_SIZE_X_ARB As Integer = &H9195
' Public Const GL_VIRTUAL_PAGE_SIZE_Y_ARB As Integer = &H9196
' Public Const GL_VIRTUAL_PAGE_SIZE_Z_ARB As Integer = &H9197
' Public Const GL_MAX_SPARSE_TEXTURE_SIZE_ARB As Integer = &H9198
' Public Const GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB As Integer = &H9199
' Public Const GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB As Integer = &H919A
' Public Const GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB As Integer = &H91A9
'
' Public Extern glTexPageCommitmentARB(iTarget As Integer, iLevel as integer, xOffset as integer, yOffset as integer, zOffset as integer, iWidth As Integer, iHeight As Integer, iDepth as integer, as byte commit)
' Public Const GL_ARB_sparse_texture2 1
' Public Const GL_ARB_sparse_texture_clamp 1
' Public Const GL_ARB_spirv_extensions 1
' Public Const GL_ARB_stencil_texturing 1
' Public Const GL_ARB_sync 1
' Public Const GL_ARB_tessellation_shader 1
' Public Const GL_ARB_texture_barrier 1
' Public Const GL_ARB_texture_border_clamp 1
' Public Const GL_CLAMP_TO_BORDER_ARB As Integer = &H812D
' Public Const GL_ARB_texture_buffer_object 1
' Public Const GL_TEXTURE_BUFFER_ARB As Integer = &H8C2A
' Public Const GL_MAX_TEXTURE_BUFFER_SIZE_ARB As Integer = &H8C2B
' Public Const GL_TEXTURE_BINDING_BUFFER_ARB As Integer = &H8C2C
' Public Const GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB As Integer = &H8C2D
' Public Const GL_TEXTURE_BUFFER_FORMAT_ARB As Integer = &H8C2E
' typedef(APIENTRYP PFNGLTEXBUFFERARBPROC)(iTarget As Integer,internalformat as integer, buffer as integer)
' Public Extern glTexBufferARB(iTarget As Integer,internalformat as integer, buffer as integer)
' Public Const GL_ARB_texture_buffer_object_rgb32 1
' Public Const GL_ARB_texture_buffer_range 1
' Public Const GL_ARB_texture_compression_bptc 1
' Public Const GL_COMPRESSED_RGBA_BPTC_UNORM_ARB As Integer = &H8E8C
' Public Const GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB As Integer = &H8E8D
' Public Const GL_COMPRESSED_RGB_BPTC_SIGNED_single_ARB As Integer = &H8E8E
' Public Const GL_COMPRESSED_RGB_BPTC_UNSIGNED_single_ARB As Integer = &H8E8F
' Public Const GL_ARB_texture_compression_rgtc 1
' Public Const GL_ARB_texture_cube_map_array 1
' Public Const GL_TEXTURE_CUBE_MAP_ARRAY_ARB As Integer = &H9009
' Public Const GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB As Integer = &H900A
' Public Const GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB As Integer = &H900B
' Public Const GL_SAMPLER_CUBE_MAP_ARRAY_ARB As Integer = &H900C
' Public Const GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB As Integer = &H900D
' Public Const GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB As Integer = &H900E
' Public Const GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB As Integer = &H900F
' Public Const GL_ARB_texture_filter_anisotropic 1
'
' Public Const GL_ARB_texture_filter_minmax 1
' Public Const GL_TEXTURE_REDUCTION_MODE_ARB As Integer = &H9366
' Public Const GL_WEIGHTED_AVERAGE_ARB As Integer = &H9367
'
' Public Const GL_ARB_texture_gather 1
' Public Const GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB As Integer = &H8E5E
' Public Const GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB As Integer = &H8E5F
' Public Const GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB As Integer = &H8F9F
'
' Public Const GL_ARB_transform_feedback_overflow_query 1
' Public Const GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB As Integer = &H82EC
' Public Const GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB As Integer = &H82ED
