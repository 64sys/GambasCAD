' Gambas class file

Public picVisibleOn As New Picture
Public picVisibleOff As New Picture
Public picFrozenOn As New Picture
Public picFrozenOff As New Picture
Public picLockedOn As New Picture
Public picLockedOff As New Picture

Public Sub Form_Deactivate()

    Me.Hide

End

Public Sub Form_activate()

    Dim lay As Layer
    Dim iRow As Integer
    Dim i As Integer
    Dim sName As String = "_menuLay"
    Dim fTotalWidth As Integer

    tbvLayers.Rows.Count = gcd.CurrDrawing.arrLayers.Count
    tbvLayers.Rows.Height = 28
    tbvLayers.Columns.Count = 5 ' color, nombre, Visible, Freezada, Anclada

    tbvLayers.Columns[0].w = 18 ' color
    tbvLayers.Columns[1].w = 128 ' color
    tbvLayers.Columns[2].w = 18 ' color
    tbvLayers.Columns[3].w = 18 ' color
    tbvLayers.Columns[4].w = 18 ' color

    ' Computo el ancho que debe tener la grid
    For i = 0 To 4
        fTotalWidth += tbvLayers.Columns[i].W
    Next
    tbvLayers.w = fTotalWidth

    For i = 0 To fMain.Menus.Count - 1
        If fMain.Menus[i].Name = sName Then Break

    Next

    ' leemos de nuevo los layers
    For iRow = 0 To gcd.CurrDrawing.arrLayers.Max
        tbvLayers[iRow, 0].Picture = fMain.Menus[i].Children[iRow].Picture '   [ ].[] [ ] cm.Background = gcd.CurrDrawing.arrLayers[iRow].Colour
        tbvLayers[iRow, 1].Text = gcd.CurrDrawing.arrLayers[iRow].Name

        ' tbvLayers[iRow, 2].Text = IIf(gcd.CurrDrawing.arrLayers[iRow].Visible, "Y", "N")
        ' tbvLayers[iRow, 3].Text = IIf(gcd.CurrDrawing.arrLayers[iRow].Frozen, "Y", "N")
        ' tbvLayers[iRow, 4].Text = IIf(gcd.CurrDrawing.arrLayers[iRow].Locked, "Y", "N")
        '
        tbvLayers[iRow, 2].Picture = IIf(gcd.CurrDrawing.arrLayers[iRow].Visible, picVisibleOn, picVisibleOff)
        tbvLayers[iRow, 3].Picture = IIf(gcd.CurrDrawing.arrLayers[iRow].Frozen, picFrozenOn, picFrozenOff)
        tbvLayers[iRow, 4].Picture = IIf(gcd.CurrDrawing.arrLayers[iRow].Locked, picLockedOn, picLockedOff)

    Next

    ' al final
    If gcd.CurrDrawing.arrLayers.count * tbvLayers.rows[0].Height < tbvLayers.Height Then

    Else
        tbvLayers.w += 14
    End If
    Me.w = tbvLayers.W
    Me.h = tbvLayers.h + 2
    tbvLayers.Refresh

End




Public Sub tbvLayers_Click()


    Dim lay As Layer

    Debug tbvLayers.Row, tbvLayers.Column

    Dim i, iRow As Integer

    iRow = tbvLayers.Row
    Select Case tbvLayers.Column
        Case 0 ' color

        Case 1 ' nombre
            gcd.CurrDrawing.CurrLayer = gcd.CurrDrawing.arrLayers[iRow]
            fMain.grdLayers[0, 0].Picture = tbvLayers[iRow, 0].Picture
            fMain.grdLayers[0, 1].Text = gcd.CurrDrawing.CurrLayer.Name
            fMain.grdLayers[0, 2].Picture = IIf(gcd.CurrDrawing.CurrLayer.Visible, fLayersOnScreen.picVisibleOn, fLayersOnScreen.picVisibleOff)
            fMain.grdLayers[0, 3].Picture = IIf(gcd.CurrDrawing.CurrLayer.Frozen, fLayersOnScreen.picFrozenOn, fLayersOnScreen.picFrozenOff)
            fMain.grdLayers[0, 4].Picture = IIf(gcd.CurrDrawing.CurrLayer.Locked, fLayersOnScreen.picLockedOn, fLayersOnScreen.picLockedOff)
            Me.Hide
        Case 2  ' visibilidad
            ' If Mouse.Right Then ' appplies to all
            '     For i = 0 To gcd.CurrDrawing.arrLayers.Max
            '         gcd.CurrDrawing.arrLayers[i].Visible = Not gcd.CurrDrawing.arrLayers[i].Visible
            '         tbvLayers[i, 2].Picture = IIf(gcd.CurrDrawing.arrLayers[i].Visible, picVisibleOn, picVisibleOff)
            '     Next
            '
            '
            ' Else
            gcd.CurrDrawing.arrLayers[iRow].Visible = Not gcd.CurrDrawing.arrLayers[iRow].Visible
            tbvLayers[iRow, 2].Picture = IIf(gcd.CurrDrawing.arrLayers[iRow].Visible, picVisibleOn, picVisibleOff)
            'End If

        Case 3
            gcd.CurrDrawing.arrLayers[iRow].Frozen = Not gcd.CurrDrawing.arrLayers[iRow].Frozen
            tbvLayers[iRow, 3].Picture = IIf(gcd.CurrDrawing.arrLayers[iRow].Frozen, picFrozenOn, picFrozenOff)
        Case 4
            gcd.CurrDrawing.arrLayers[iRow].Locked = Not gcd.CurrDrawing.arrLayers[iRow].Locked
            tbvLayers[iRow, 4].Picture = IIf(gcd.CurrDrawing.arrLayers[iRow].Locked, picLockedOn, picLockedOff)
    End Select





    tbvLayers.Refresh
    fMain.redraw

End

Public Sub Run()

    picVisibleOn = Picture.Load(Application.Path &/ "png" &/ "visible_on.png")
    picVisibleOff = Picture.Load(Application.Path &/ "png" &/ "visible_off.png")
    picFrozenOn = Picture.Load(Application.Path &/ "png" &/ "frozen_on.png")
    picFrozenOff = Picture.Load(Application.Path &/ "png" &/ "frozen_off.png")
    picLockedOn = Picture.Load(Application.Path &/ "png" &/ "locked_on.png")
    picLockedOff = Picture.Load(Application.Path &/ "png" &/ "locked_off.png")

End

Public Sub Form_MouseDown()

    Debug Mouse.Button

End
