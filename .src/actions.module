' Gambas module file

' Este modulo contiene las acciones que , desde ahora, saco de FMain

Public r As Float
Public NewDrawing As Drawing
Public f As String
Public fDxf As String
Public fBak As String
'public fMinimal As String = "./minimal/minimal-2010.dxf"
Public fMinimal As String = "./minimal/minimal.dxf"
Public fx As String[]
Public fbas As String
Public t As String
Public iColor As Integer
Public i As Integer
Public imgCirculito As Image
Public clsJob As String
' Public d As Drawing
Public sActionParams As String[]

Public Sub FileNew()

    ' Vamos a tratar de armar todo para que se pueda dibujar, sin necesidad de cargar un DXF base.

    NewDrawing = gcd.NewDrawing("<new>")                    'Creo una nueva petaña, que me devuelve un Drawing con una Sheet
    gcd.Drawing = NewDrawing                                'Apunto Gcd.Drawing a este nuevo Drawing
    gcd.Drawing.Headers.FINGERPRINTGUID = gcd.UniqueId()
    gcd.Drawings.Add(NewDrawing, gcd.Drawing.Headers.FINGERPRINTGUID)                            'Lo agrego al listado de dibujos abiertos
    fmain.NewTabForDrawing(NewDrawing)
    DrawingAids.RebuildGrid
    gcd.setdashes

    gcd.Regen()

    fmain.UpdateLayersCombo
    fmain.UpdateLineWtCombo
    fmain.UpdateLineTypeCombo
    fmain.UpdatDimTypeTypeCombo
    fmain.Text = f
    gcd.DrawingReady = True

    ' this is what we are doing now
    gcd.clsJob = cadSelection
    gcd.clsJob.start()
    gcd.clsJobPrevious = cadSelection
    gcd.clsJobPreZoom = cadSelection
    gcd.clsJobPreviousParam = 0

    'fmain.FillWindowMenu

End

Public Sub FileSave(Optional sFile As String = "")

    If sFile = "" Then ' pregunto

        Dialog.Title = ("File Name")

        If main.convODA Or main.convLibreDWG Then
            Dialog.Filter = ["*.dxf;*.dwg", "Drawings", "*.dxf", "DXF Drawing exchange 2010", "*.dwg", "DWG AutoCAD Drawing file 2010"]
        Else

            Dialog.Filter = ["*.dxf", "Drawings", "*.dxf", "DXF Drawing exchange 2010"]

        End If
        If Not Dialog.SaveFile() Then Return

        sFile = Dialog.Path

    End If

End

Public Sub FileOpen(Optional sFile As String = "")

    If sFile = "" Then

        Dialog.Title = ("Select File")

        If main.convODA Or main.convLibreDWG Then
            Dialog.Filter = ["*.dxf;*.dwg;*.dgn", "Drawings", "*.dxf", "DXF Drawing exchange", "*.dwg", "DWG AutoCAD Drawing file", "*.dgn", "DGN Microstation Drawing file"]
        Else

            Dialog.Filter = ["*.dxf", "Drawings", "*.dxf", "DXF Drawing exchange"]

        End If
        Dialog.Path = Config.FilesLastPath
        Dialog.OpenFile(False)
        f = Dialog.Path
    Else

        f = sfile ' "/home/martin/GAUCHO-TESTING-V2000-online converter.dxf"
    End If

    gcd.DrawingReady = False
    fmain.GLArea1.Enabled = False
    gcd.debugInfo("Opening " & f,,, True)
    gcd.DrawingReady = False
    If Exist(f) Then
        If Stat(f).Type = gb.File Then
            Select Lower(File.Ext(f))
                Case "dgn"

                    Inc Application.Busy
                    NewDrawing = New Drawing

                    ' esto es necesario porque muchas funciones usan gcd.Drawing
                    gcd.Drawing = NewDrawing

                    If Not dgn.LoadDGN(f, NewDrawing) Then
                        Message.Error(("There was an error opening the file"))
                        NewDrawing = Null
                        gcd.Drawing = gcd.Drawings.Last
                        Return
                    Endif

                    gcd.Drawings.Add(NewDrawing)

                    gcd.Drawing.FileName = f
                    gcd.Drawing.RequiresFileRename = False

                    Try gcd.Drawing.HandSeed = Val("&H" & gcd.Drawing.Headers.HandSeed)

                    fmain.UpdateLayersCombo
                    fmain.UpdateLineWtCombo
                    fmain.UpdateLineTypeCombo
                    fmain.UpdatDimTypeTypeCombo
                    fmain.NewTabForDrawing(NewDrawing)
                    gcd.Regen()
                    cadZoomE.Start()                                ' por ahora mostramos el dibujo centrado, hasta q leamos el estado anterior

                    fmain.Text = f

                Case "dwg"

                    Inc Application.Busy
                    If main.convODA Then
                        fDxf = gcd.ODA_DWGtoDXF(f)
                    Else If main.convLibreDWG Then
                        fDxf = gcd.LibreDWGtoDXF(f)
                    End If
                    Dec Application.Busy

                    If fDxf = "" Then
                        Message(("Can't open file: Error On conversion"))
                        Try fmain.GLArea1.Enabled = True
                        Return
                    Endif

                    GoSub LoadDXF
                Case "dxf"
                    fDxf = f
                    GoSub LoadDXF

            End Select
        Endif

        'main.FillWindowMenu
        ' fmain.tabDrawings.Count += 1
        ' fmain.tabDrawings.Text = Left(f, 12)

        gcd.debugInfo("Showing drawing",,, True)
        gcd.DrawingReady = True
        fmain.GLArea1.Enabled = True
        ' this is what we are doing now
        gcd.clsJob = cadSelection
        gcd.clsJob.start()
        gcd.clsJobPrevious = cadSelection
        gcd.clsJobPreZoom = cadSelection
        gcd.clsJobPreviousParam = 0

        AddFilesOpen(f)

        gcd.redraw

    Else
        gcd.debugInfo("File not found",,, True)
        Me.FileNew

    Endif

    Config.FilesLastPath = Utils.PathFromFile(f)

    Dec Application.Busy
    Return

LoadDXF:
    Inc Application.Busy
    'NewDrawing = gcd.NewDrawing(f)
    ' fmain.NewTabForDrawing(NewDrawing)
    NewDrawing = New Drawing

    ' esto es necesario porque muchas funciones usan gcd.Drawing
    gcd.Drawing = NewDrawing

    If dxf.LoadFile(fDxf, NewDrawing, False, False, False,, True) Then
        Message.Error(("There was an error opening the file"))
        NewDrawing = Null
        gcd.Drawing = gcd.Drawings.Last
        Return
    Endif

    If NewDrawing.Headers.FINGERPRINTGUID = "" Then
        NewDrawing.Headers.FINGERPRINTGUID = gcd.UniqueId()
    Endif
    gcd.Drawings.Add(NewDrawing, gcd.Drawing.Headers.FINGERPRINTGUID)

    gcd.Drawing.FileName = f
    gcd.Drawing.RequiresFileRename = False

    Try gcd.Drawing.HandSeed = Val("&H" & gcd.Drawing.Headers.HandSeed)

    fmain.UpdateLayersCombo
    fmain.UpdateLineWtCombo
    fmain.UpdateLineTypeCombo
    fmain.UpdatDimTypeTypeCombo

    ' veo si tengo que cerrar la pestaña de nuevo
    Dim dTest As Drawing
    dTest = fmain.tabDrawings[fmain.tabDrawings.Index].Tag
    If dTest.RequiresFileRename And Not dTest.RequiresSaving Then 'estoy sobre una pestaña <new> donde no hice nada, la cierro
        gcd.Drawings.Remove(dTest.Headers.FINGERPRINTGUID)
        Wait 0.1
        fmain.tabDrawings_Close(fmain.tabDrawings.Index)

    End If
    fmain.NewTabForDrawing(NewDrawing)
    gcd.DrawingReady = True
    cadZoomE.Start()                                ' por ahora mostramos el dibujo centrado, hasta q leamos el estado anterior
    gcd.Regen()
    ' For Each s As Sheet In NewDrawing.Sheets
    '     gcd.Drawing.Sheet = s
    '     cadZoomE.Start()
    ' Next
    gcd.Drawing.Sheet = gcd.Drawing.Model


    fmain.Text = f

    Return

End

Public Sub ExitProgram()

    Dim d As Drawing
    Dim e As Entity
    Dim L As Layer
    Dim s As Sheet

    For Each d In gcd.Drawings
        For Each s In d.sheets
            For Each e In s.Entities
                e.Polygon.Clear
                e.P.Clear
                e.Psel.Clear
                e.PolyLine.Clear
                e.PoiPoints.Clear
                e.sParam.Clear
                e.fParam.Clear
                e.iParam.Clear
                gcd.CCC[e.gender] = Null
                e.PoiType.Clear
                gl.DeleteLists(e.glDrwList, 1)
                gl.DeleteLists(e.glDrwListSel, 1)
                gl.DeleteLists(e.glDrwListPOI, 1)
            Next

        Next
        d.sheets.Clear
        d.Blocks.Clear
        'd.handles.Clear
        d.Layers.Clear
        d.LineTypes.Clear

        d.TextStyles.Clear
        d.DimStyles.Clear

    Next

    main.SavePrintStyles
    main.SavePatterns
    Utils.SaveClass(Config, Config.ConfigFile)

    main.MyLog.Close()

    For Each w As Window In Windows
        Try w.Close()
    Next

    Quit

End

Public Sub AddFilesOpen(sFilename As String)

    ' verifico que ya lo tenga en la lista de recientes
    If sFilename = Config.FilesLastOpen1 Then Return ' nada que hacer

    ' ubico en primer lugar al archivo reciente
    If sFilename = Config.FilesLastOpen2 Then
        Swap Config.FilesLastOpen2, Config.FilesLastOpen1
        Return
    End If

    If sFilename = Config.FilesLastOpen3 Then
        Swap Config.FilesLastOpen3, Config.FilesLastOpen1
        Return
    End If
    If sFilename = Config.FilesLastOpen4 Then
        Swap Config.FilesLastOpen4, Config.FilesLastOpen1
        Return
    End If
    If sFilename = Config.FilesLastOpen5 Then
        Swap Config.FilesLastOpen5, Config.FilesLastOpen1
        Return
    End If

    If sFilename = Config.FilesLastOpen6 Then
        Swap Config.FilesLastOpen6, Config.FilesLastOpen1
        Return
    End If

    If sFilename = Config.FilesLastOpen7 Then
        Swap Config.FilesLastOpen7, Config.FilesLastOpen1
        Return
    End If
    If sFilename = Config.FilesLastOpen8 Then
        Swap Config.FilesLastOpen8, Config.FilesLastOpen1
        Return
    End If
    If sFilename = Config.FilesLastOpen9 Then
        Swap Config.FilesLastOpen9, Config.FilesLastOpen1
        Return
    End If

    If sFilename = Config.FilesLastOpen10 Then
        Swap Config.FilesLastOpen10, Config.FilesLastOpen1
        Return
    End If

    ' no lo tengo, descarto el ultimo y lo agrego al principio, desplazando el resto
    Config.FilesLastOpen10 = Config.FilesLastOpen9
    Config.FilesLastOpen9 = Config.FilesLastOpen8
    Config.FilesLastOpen8 = Config.FilesLastOpen7
    Config.FilesLastOpen7 = Config.FilesLastOpen6
    Config.FilesLastOpen6 = Config.FilesLastOpen5
    Config.FilesLastOpen5 = Config.FilesLastOpen4
    Config.FilesLastOpen4 = Config.FilesLastOpen3
    Config.FilesLastOpen3 = Config.FilesLastOpen2
    Config.FilesLastOpen2 = Config.FilesLastOpen1
    Config.FilesLastOpen1 = sFilename

End
