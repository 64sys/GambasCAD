' Gambas module file

' Este modulo contiene las acciones que , desde ahora, saco de FMain

Public r As Float
Public NewDrawing As Drawing
Public f As String
Public fDxf As String
Public fBak As String
'public fMinimal As String = "./minimal/minimal-2010.dxf"
Public fMinimal As String = "./minimal/minimal.dxf"
Public fx As String[]
Public fbas As String
Public t As String
Public iColor As Integer
Public i As Integer
Public imgCirculito As Image
Public clsJob As String
Public d As Drawing
Public sActionParams As String[]

Public Sub FileNew()

    NewDrawing = New Drawing
    NewDrawing.ScaleZoom = gcd.ScreenDensity
    NewDrawing.iEntity.Insert([0, 0, 0, 0])
    gcd.Drawings.Add(NewDrawing)
    gcd.currentDrawing = gcd.Drawings.Last
    gcd.currentDrawing.FileName = main.dirTemplates &/ "drawing1.dxf"
    dxf.LoadFile(fMinimal, gcd.currentDrawing,,,,, True)
    gcd.Regen()
    Try gcd.currentDrawing.HandSeed = Val("&H" & gcd.currentDrawing.oHeader.HandSeed)

    gcd.UpdateLayersCombo
    gcd.UpdateLineWtCombo
    gcd.UpdateLineTypeCombo
    gcd.UpdatDimTypeTypeCombo
    fmain.Text = f
    gcd.DrawingReady = True

    fmain.FillWindowMenu

End

Public Sub FileSave(Optional sFile As String = "")

    If sFile = "" Then ' pregunto

        Dialog.Title = ("File Name")

        If main.convODA Or main.convLibreDWG Then
            Dialog.Filter = ["*.dxf;*.dwg", "Drawings", "*.dxf", "DXF Drawing exchange 2010", "*.dwg", "DWG AutoCAD Drawing file 2010"]
        Else

            Dialog.Filter = ["*.dxf", "Drawings", "*.dxf", "DXF Drawing exchange 2010"]

        End If
        If Not Dialog.SaveFile() Then Return

        sFile = Dialog.Path

    End If

End

Public Sub FileOpen(Optional sFile As String = "")

    If sFile = "" Then

        Dialog.Title = ("Select File")

        If main.convODA Or main.convLibreDWG Then
            Dialog.Filter = ["*.dxf;*.dwg", "Drawings", "*.dxf", "DXF Drawing exchange 2010", "*.dwg", "DWG AutoCAD Drawing file 2010"]
        Else

            Dialog.Filter = ["*.dxf", "Drawings", "*.dxf", "DXF Drawing exchange 2010"]

        End If
        Dialog.OpenFile(False)
        f = Dialog.Path
    Else

        f = sfile ' "/home/martin/GAUCHO-TESTING-V2000-online converter.dxf"
    End If
    Inc Application.Busy

    gcd.debugInfo("Opening " & f,,, True)

    If Exist(f) Then
        If Stat(f).Type = gb.File Then
            Select Lower(File.Ext(f))
                Case "dwg"

                    NewDrawing = New Drawing
                    NewDrawing.ScaleZoom = gcd.ScreenDensity
                    NewDrawing.iEntity.Insert([0, 0, 0, 0])
                    gcd.Drawings.Add(NewDrawing)
                    gcd.currentDrawing = gcd.Drawings.Last
                    gcd.currentDrawing.FileName = f

                    fMain.Mouse = Mouse.Wait
                    Inc Application.Busy
                    'fDxf = dxf.DWGtoDXF(f)
                    If main.convODA Then
                        fDxf = gcd.ODA_DWGtoDXF(f)
                    Else If main.convLibreDWG Then
                        fDxf = gcd.LibreDWGtoDXF(f)
                    End If

                    If fDxf = "" Then
                        Message(("Can't open file: Error On conversion"))
                        Dec Application.Busy
                        Return
                    Endif

                    gcd.currentDrawing.RequiresFileRename = True

                    dxf.LoadFile(fDxf, gcd.currentDrawing, False, False, False, 2, True)

                    gcd.Regen()

                    Try gcd.currentDrawing.HandSeed = Val("&H" & gcd.currentDrawing.oHeader.HandSeed)

                    gcd.UpdateLayersCombo
                    gcd.UpdateLineWtCombo
                    gcd.UpdateLineTypeCombo
                    gcd.UpdatDimTypeTypeCombo

                    gcd.SnapMode = True

                    ' modelo recien cargado
                    cadZoomE.Start()                                ' por ahora mostramos el dibujo centrado, hasta q leamos el estado anterior

                    fmain.Text = f

                    Dec Application.Busy
                    fMain.Mouse = Mouse.Arrow
                Case "dxf"

                    NewDrawing = New Drawing
                    NewDrawing.ScaleZoom = gcd.ScreenDensity
                    NewDrawing.iEntity.Insert([0, 0, 0, 0])
                    gcd.Drawings.Add(NewDrawing)
                    gcd.currentDrawing = gcd.Drawings.Last
                    dxf.LoadFile(fMinimal, gcd.currentDrawing)

                    gcd.currentDrawing.FileName = f

                    gcd.currentDrawing.RequiresFileRename = False

                    dxf.LoadFile(f, gcd.currentDrawing, False, False, False,, True)
                    gcd.Regen()
                    Try gcd.currentDrawing.HandSeed = Val("&H" & gcd.currentDrawing.oHeader.HandSeed)

                    gcd.UpdateLayersCombo
                    gcd.UpdateLineWtCombo
                    gcd.UpdateLineTypeCombo
                    gcd.UpdatDimTypeTypeCombo

                    cadZoomE.Start()                                ' por ahora mostramos el dibujo centrado, hasta q leamos el estado anterior

                    fmain.Text = f

            End Select
        Endif

        fmain.FillWindowMenu
        gcd.debugInfo("Showing drawing",,, True)
        gcd.DrawingReady = True

        fmain.AddFilesOpen(f)

        gcd.redraw

    Else
        gcd.debugInfo("File not found",,, True)
        Me.FileNew

    Endif
    Dec Application.Busy

End

Public Sub ExitProgram()

    Dim d As Drawing
    Dim e As Entity
    Dim L As Layer

    For Each d In gcd.Drawings
        For Each e In d.oEntities
            e.Polygon.Clear
            e.P.Clear
            e.Psel.Clear
            e.PolyLine.Clear
            e.PoiPoints.Clear
            e.StringData.Clear
            e.fParam.Clear
            e.iParam.Clear
            gcd.CCC[e.gender] = Null
            e.PoiType.Clear
            gl.DeleteLists(e.glDrwList, 1)
            gl.DeleteLists(e.glDrwListSel, 1)
            gl.DeleteLists(e.glDrwListPOI, 1)
        Next
        d.oEntities.Clear
        d.oBlocks.Clear
        d.handles.Clear
        For Each L In d.oLayers
            L.Entities.Clear
        Next
        d.oLayers.Clear
        d.oLTYpes.Clear
        d.oVisibleEntities.Clear
        d.otextStyles.Clear
        d.odimStyles.Clear

    Next
    Config.Save

    main.MyLog.Close()

    For Each w As Window In Windows
        Try w.Close()
    Next

    Quit

End
