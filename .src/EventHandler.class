' Gambas class file

' Esta clase provee las Sub basicas para manejar los eventos de appMain / fMain
' LAs clases Tools deben heredar esta clase para compatibilidad y escribir sus propias
' rutinas si desean manejar dichos eventos.

Create Static

Public cursorX As Integer
Public cursory As Integer


Public Sub DblClick()

End

Public Sub MouseDown()

End
'

Public Sub MouseMove()

    '   If gcd.clsJob.poichecking Then
    '     If Not gcd.flgSearchingPOI Then
    '       gcd.CurrentDrawing.iEntity = clsMouseTracking.CheckPOI(gcd.Xreal(mouse.x), gcd.Yreal(mouse.Y))
    '     Else    ' estoy buscando, pero me movi, asi que me desengancho del POI anterior
    '
    '       gcd.CurrentDrawing.iEntity[0] = gcd.Xreal(mouse.x)
    '       gcd.CurrentDrawing.iEntity[1] = gcd.Yreal(mouse.y)
    '       gcd.CurrentDrawing.iEntity[2] = -1                 ' POI type
    '
    '     End If
    '
    '   End If
    '
    '   If gcd.clsJob.EntityChecking Then
    '     If Not gcd.flgSearchingEntity Then
    '       gcd.CurrentDrawing.HoveredEntity = clsMouseTracking.CheckAboveEntity(gcd.Xreal(mouse.x), gcd.Yreal(mouse.Y), gcd.metros(8))
    '     End If
    '   End If
    '
    '   gcd.CurrentDrawing.flgShowPOIinfo = True
    '
    '   DrawingAids.Helper.dX = 15
    '   DrawingAids.Helper.dY = 15
    '   DrawingAids.Helper.fColor = Color.DarkBlue
    '   '''gcd.clsJob.MouseMove(mouse.x, mouse.y) ' diIf Mouse.Middle Then
    
    '   If gcd.clsJob.gender <> "Pan" Then
    '     gcd.clsJobPreZoom = gcd.clsJob
    '     gcd.clsJob = cadPan
    '     gcd.clsJob.Start()
    '     ' glarea1.Refresh  ' glarea1.Refresh
    '     '
    '     '
    '   Else
    ' 
    '     gcd.clsJob = gcd.clsJobPreZoom
    ' 
    '   End If
    ' 
    ' 
    ' If Mouse.Middle Then
    ' 
    '   If gcd.clsJob.gender <> "Pan" Then
    '     gcd.clsJobPreZoom = gcd.clsJob
    '     gcd.clsJob = cadPan
    '     gcd.clsJob.Start()
    '     ' glarea1.Refresh  ' glarea1.Refresh
    '     '
    '     '
    '   Else
    ' 
    '     gcd.clsJob = gcd.clsJobPreZoom
    ' 
    '   End If
    ' 
    ' Endif Mouse.Middle Then
    ' 
    ' 
    ' End If
    ' End If

    

End

Public Sub MouseUp()
    ' ' ex Public Sub drwArea_MouseUp()
    '
    ' ' "Los IF son mas rapidos" - Autor Anonimo
    '
    ' ' los rigth clicks se manejan en fMain , ni las herramientas ni las entidades los necesitan
     If Mouse.Right Then                ' rigth clicks means finish what you're doing rigth now and go back to the previous Job
       ' the Finish() sub will do this in a good manner
      If gcd.clsJob.gender = "Builder" Then
    
        gcd.clsJob.KeyText("U")
    
      Else If gcd.clsJob.gender = "Default" Then
    
        gcd.clsJob = gcd.clsJobPrevious
        gcd.clsJob.Start()
    
      Else    ' es una tool
    
        gcd.clsJob.finish
        gcd.clsJobPrevious = gcd.clsJob
        gcd.clsJob = cadSelection
    
      Endif
    
    Else If Mouse.Left Then
    
      gcd.clsJob.MouseUp(mouse.x, mouse.y)
    
    Else If Mouse.Middle Then
    
      If gcd.clsJob.gender <> "Pan" Then
        gcd.clsJobPreZoom = gcd.clsJob
        gcd.clsJob = cadPan
        gcd.clsJob.Start()
        ' glarea1.Refresh  ' glarea1.Refresh
        '
        '
      Else
    
        gcd.clsJob = gcd.clsJobPreZoom
    
      End If
    
    End If
    
    gcd.redraw

End

' El objetivo es que el zoom dinamico se haga manteniendo el dibujo que esta en la pos del mouse
Public Sub MouseWheel()

    Dim px, py, dx, dy, factor As Float
    ' chequeamos si vale la pena seguir dibujando la grid, o sea, menos de 3 pixels
    ' Inc flgWheelCounter
    ' Debug "Mouse weel", flgWheelCounter

    ' FIXME: reparar para GambasCAD
    ' If gcd.Pixels(FMain.GridSpacing) < 5 Then FMain.GridActive = False Else FMain.GridActive = True
    '
    px = gcd.Xreal(Mouse.x) ' posicion real en donde esta el mouse, previo al zoom
    py = gcd.Yreal(Mouse.y)

    ' TODO: , redondear para que la escala sea 1:100 1:75 1:50 etc

    factor = (1 + 0.075 * Mouse.Delta)

    gcd.currentDrawing.ScaleZoom = gcd.currentDrawing.ScaleZoom * factor

    dx = gcd.Xreal(Mouse.x) ' posicion real en donde esta el mouse, posterior al zoom
    dy = gcd.Yreal(Mouse.y)

    ' pero con ciertos limites TODO: imponer
    ' If ScaleZoom < 0.001 Then ScaleZoom = 0.001
    ' If ScaleZoom > 50 Then ScaleZoom = 50

    ' nuevo metodo (el Pan esta en pixels)
    gcd.currentDrawing.PanX += gcd.pixels(dx - px)
    gcd.currentDrawing.PanY += gcd.pixels(dy - py)

    gcd.flgNewPosition = True

    gcd.redraw 'glarea1.Refresh

    ' despues de actualizar la pantalla, recolectamos las entidades visibles

    ' Dec flgWheelCounter

    ' Test
    ' Debug "Mouse tracking task ID", tskMouseTracking.Handle

End
