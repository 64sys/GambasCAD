' Gambas class file

Private $Value As Integer
Private $KeyLog As String
Private $aNumber As String[] = ["1", "2", "3", "4", "5", "6", "7", "8", "9"]

Public Sub Run() As Integer

    Dim i As Integer
    Dim crs As New Variant[]
    Dim s As Integer
    Dim r As Integer
    Dim g As Integer
    Dim b As Integer
    Dim j As Integer
    Dim k As Byte
    Dim rw As Integer

    s = 20
    crs = GetColorsRGB()

    GridView1.Header = GridView.None
    GridView1.Columns.Count = 16
    GridView1.Rows.Count = 16
    GridView1.Rows.Height = 20
    GridView1.Columns.Width = 20
    For j = 0 To 15
        For i = 0 To 15
            k = (rw * 16) + i
            r = crs[k][0]
            g = crs[k][1]
            b = crs[k][2]
            GridView1[rw, i].Tag = k
            Select k
                Case 0
                    GridView1[rw, i].Text = "B"
                    GridView1[rw, i].Alignment = Align.Center
                    GridView1[rw, i].Background = Color.White
                Case 255
                    GridView1[rw, i].Text = "L"
                    GridView1[rw, i].Alignment = Align.Center
                    GridView1[rw, i].Background = Color.White
                Case Else
                    GridView1[rw, i].Background = Color.RGB(r, g, b)
            End Select
        Next
        Inc rw
    Next
    Me.Width = 16 * s
    Me.Height = 16 * s

    ' ----------------------------------------
    If Me.ShowModal() Then Return $Value

End

Public Sub GridView1_Select()

    $Value = GridView1[GridView1.Row, GridView1.Column].Tag

    Me.Close(True)

End

Public Sub GridView1_LostFocus()

    Me.Close(False)

End

Public Sub GridView1_MouseMove()

    Dim k As Integer

    k = (GridView1.RowAt(Mouse.Y) * 9) + GridView1.ColumnAt(Mouse.X)

    Select k
        Case 0
            'Label5.Text = ("Color") & ": ByBlock [" & CStr(k) & "]"

        Case 255
            'Label5.Text = ("Color") & ": ByLayer [" & CStr(k) & "]"

        Case Else
            'Label5.Text = ("Color") & ": " & CStr(k)

    End Select

End

'' Return a colors list by the form r,g,b where each index is the DXF color integer number.

Public Sub Form_KeyPress()
    'TODO: Mejorar la interacci√≥n de teclas.

    Select Key.Code
        Case Key.Esc
            Me.Close(False)
        Case Key.Delete
            $KeyLog = ""
        Case Key.Enter
            If $KeyLog <> "" Then
                If Val($KeyLog) < 256 And Val($KeyLog) > -1 Then
                    $Value = Val($KeyLog)
                    Me.Close(True)
                Else
                    Me.Close(False)
                Endif
            Else
                Me.Close(False)
            Endif
        Case Else
            If $aNumber.Exist(Key.Text) Then
                If Val($KeyLog & Key.Text) < 256 Then
                    $KeyLog &= Key.Text
                Endif
            Endif
    End Select

End

Public Function GetColorsRGB() As Variant[]

    Dim rgbx As New Variant[]

    rgbx.Add([0, 0, 0])
    rgbx.Add([255, 0, 0])
    rgbx.Add([255, 255, 0])
    rgbx.Add([0, 255, 0])
    rgbx.Add([0, 255, 255])
    rgbx.Add([0, 0, 255])
    rgbx.Add([255, 0, 255])
    rgbx.Add([255, 255, 255])
    rgbx.Add([128, 128, 128])
    rgbx.Add([192, 192, 192])
    rgbx.Add([255, 0, 0])
    rgbx.Add([255, 127, 127])
    rgbx.Add([165, 0, 0])
    rgbx.Add([165, 82, 82])
    rgbx.Add([127, 0, 0])
    rgbx.Add([127, 63, 63])
    rgbx.Add([76, 0, 0])
    rgbx.Add([76, 38, 38])
    rgbx.Add([38, 0, 0])
    rgbx.Add([38, 19, 19])
    rgbx.Add([255, 63, 0])
    rgbx.Add([255, 159, 127])
    rgbx.Add([165, 41, 0])
    rgbx.Add([165, 103, 82])
    rgbx.Add([127, 31, 0])
    rgbx.Add([127, 79, 63])
    rgbx.Add([76, 19, 0])
    rgbx.Add([76, 47, 38])
    rgbx.Add([38, 9, 0])
    rgbx.Add([38, 23, 19])
    rgbx.Add([255, 127, 0])
    rgbx.Add([255, 191, 127])
    rgbx.Add([165, 82, 0])
    rgbx.Add([165, 124, 82])
    rgbx.Add([127, 63, 0])
    rgbx.Add([127, 95, 63])
    rgbx.Add([76, 38, 0])
    rgbx.Add([76, 57, 38])
    rgbx.Add([38, 19, 0])
    rgbx.Add([38, 28, 19])
    rgbx.Add([255, 191, 0])
    rgbx.Add([255, 223, 127])
    rgbx.Add([165, 124, 0])
    rgbx.Add([165, 145, 82])
    rgbx.Add([127, 95, 0])
    rgbx.Add([127, 111, 63])
    rgbx.Add([76, 57, 0])
    rgbx.Add([76, 66, 38])
    rgbx.Add([38, 28, 0])
    rgbx.Add([38, 33, 19])
    rgbx.Add([255, 255, 0])
    rgbx.Add([255, 255, 127])
    rgbx.Add([165, 165, 0])
    rgbx.Add([165, 165, 82])
    rgbx.Add([127, 127, 0])
    rgbx.Add([127, 127, 63])
    rgbx.Add([76, 76, 0])
    rgbx.Add([76, 76, 38])
    rgbx.Add([38, 38, 0])
    rgbx.Add([38, 38, 19])
    rgbx.Add([191, 255, 0])
    rgbx.Add([223, 255, 127])
    rgbx.Add([124, 165, 0])
    rgbx.Add([145, 165, 82])
    rgbx.Add([95, 127, 0])
    rgbx.Add([111, 127, 63])
    rgbx.Add([57, 76, 0])
    rgbx.Add([66, 76, 38])
    rgbx.Add([28, 38, 0])
    rgbx.Add([33, 38, 19])
    rgbx.Add([127, 255, 0])
    rgbx.Add([191, 255, 127])
    rgbx.Add([82, 165, 0])
    rgbx.Add([124, 165, 82])
    rgbx.Add([63, 127, 0])
    rgbx.Add([95, 127, 63])
    rgbx.Add([38, 76, 0])
    rgbx.Add([57, 76, 38])
    rgbx.Add([19, 38, 0])
    rgbx.Add([28, 38, 19])
    rgbx.Add([63, 255, 0])
    rgbx.Add([159, 255, 127])
    rgbx.Add([41, 165, 0])
    rgbx.Add([103, 165, 82])
    rgbx.Add([31, 127, 0])
    rgbx.Add([79, 127, 63])
    rgbx.Add([19, 76, 0])
    rgbx.Add([47, 76, 38])
    rgbx.Add([9, 38, 0])
    rgbx.Add([23, 38, 19])
    rgbx.Add([0, 255, 0])
    rgbx.Add([127, 255, 127])
    rgbx.Add([0, 165, 0])
    rgbx.Add([82, 165, 82])
    rgbx.Add([0, 127, 0])
    rgbx.Add([63, 127, 63])
    rgbx.Add([0, 76, 0])
    rgbx.Add([38, 76, 38])
    rgbx.Add([0, 38, 0])
    rgbx.Add([19, 38, 19])
    rgbx.Add([0, 255, 63])
    rgbx.Add([127, 255, 159])
    rgbx.Add([0, 165, 41])
    rgbx.Add([82, 165, 103])
    rgbx.Add([0, 127, 31])
    rgbx.Add([63, 127, 79])
    rgbx.Add([0, 76, 19])
    rgbx.Add([38, 76, 47])
    rgbx.Add([0, 38, 9])
    rgbx.Add([19, 38, 23])
    rgbx.Add([0, 255, 127])
    rgbx.Add([127, 255, 191])
    rgbx.Add([0, 165, 82])
    rgbx.Add([82, 165, 124])
    rgbx.Add([0, 127, 63])
    rgbx.Add([63, 127, 95])
    rgbx.Add([0, 76, 38])
    rgbx.Add([38, 76, 57])
    rgbx.Add([0, 38, 19])
    rgbx.Add([19, 38, 28])
    rgbx.Add([0, 255, 191])
    rgbx.Add([127, 255, 223])
    rgbx.Add([0, 165, 124])
    rgbx.Add([82, 165, 145])
    rgbx.Add([0, 127, 95])
    rgbx.Add([63, 127, 111])
    rgbx.Add([0, 76, 57])
    rgbx.Add([38, 76, 66])
    rgbx.Add([0, 38, 28])
    rgbx.Add([19, 38, 33])
    rgbx.Add([0, 255, 255])
    rgbx.Add([127, 255, 255])
    rgbx.Add([0, 165, 165])
    rgbx.Add([82, 165, 165])
    rgbx.Add([0, 127, 127])
    rgbx.Add([63, 127, 127])
    rgbx.Add([0, 76, 76])
    rgbx.Add([38, 76, 76])
    rgbx.Add([0, 38, 38])
    rgbx.Add([19, 38, 38])
    rgbx.Add([0, 191, 255])
    rgbx.Add([127, 223, 255])
    rgbx.Add([0, 124, 165])
    rgbx.Add([82, 145, 165])
    rgbx.Add([0, 95, 127])
    rgbx.Add([63, 111, 127])
    rgbx.Add([0, 57, 76])
    rgbx.Add([38, 66, 76])
    rgbx.Add([0, 28, 38])
    rgbx.Add([19, 33, 38])
    rgbx.Add([0, 127, 255])
    rgbx.Add([127, 191, 255])
    rgbx.Add([0, 82, 165])
    rgbx.Add([82, 124, 165])
    rgbx.Add([0, 63, 127])
    rgbx.Add([63, 95, 127])
    rgbx.Add([0, 38, 76])
    rgbx.Add([38, 57, 76])
    rgbx.Add([0, 19, 38])
    rgbx.Add([19, 28, 38])
    rgbx.Add([0, 63, 255])
    rgbx.Add([127, 159, 255])
    rgbx.Add([0, 41, 165])
    rgbx.Add([82, 103, 165])
    rgbx.Add([0, 31, 127])
    rgbx.Add([63, 79, 127])
    rgbx.Add([0, 19, 76])
    rgbx.Add([38, 47, 76])
    rgbx.Add([0, 9, 38])
    rgbx.Add([19, 23, 38])
    rgbx.Add([0, 0, 255])
    rgbx.Add([127, 127, 255])
    rgbx.Add([0, 0, 165])
    rgbx.Add([82, 82, 165])
    rgbx.Add([0, 0, 127])
    rgbx.Add([63, 63, 127])
    rgbx.Add([0, 0, 76])
    rgbx.Add([38, 38, 76])
    rgbx.Add([0, 0, 38])
    rgbx.Add([19, 19, 38])
    rgbx.Add([63, 0, 255])
    rgbx.Add([159, 127, 255])
    rgbx.Add([41, 0, 165])
    rgbx.Add([103, 82, 165])
    rgbx.Add([31, 0, 127])
    rgbx.Add([79, 63, 127])
    rgbx.Add([19, 0, 76])
    rgbx.Add([47, 38, 76])
    rgbx.Add([9, 0, 38])
    rgbx.Add([23, 19, 38])
    rgbx.Add([127, 0, 255])
    rgbx.Add([191, 127, 255])
    rgbx.Add([82, 0, 165])
    rgbx.Add([124, 82, 165])
    rgbx.Add([63, 0, 127])
    rgbx.Add([95, 63, 127])
    rgbx.Add([38, 0, 76])
    rgbx.Add([57, 38, 76])
    rgbx.Add([19, 0, 38])
    rgbx.Add([28, 19, 38])
    rgbx.Add([191, 0, 255])
    rgbx.Add([223, 127, 255])
    rgbx.Add([124, 0, 165])
    rgbx.Add([145, 82, 165])
    rgbx.Add([95, 0, 127])
    rgbx.Add([111, 63, 127])
    rgbx.Add([57, 0, 76])
    rgbx.Add([66, 38, 76])
    rgbx.Add([28, 0, 38])
    rgbx.Add([33, 19, 38])
    rgbx.Add([255, 0, 255])
    rgbx.Add([255, 127, 255])
    rgbx.Add([165, 0, 165])
    rgbx.Add([165, 82, 165])
    rgbx.Add([127, 0, 127])
    rgbx.Add([127, 63, 127])
    rgbx.Add([76, 0, 76])
    rgbx.Add([76, 38, 76])
    rgbx.Add([38, 0, 38])
    rgbx.Add([38, 19, 38])
    rgbx.Add([255, 0, 191])
    rgbx.Add([255, 127, 223])
    rgbx.Add([165, 0, 124])
    rgbx.Add([165, 82, 145])
    rgbx.Add([127, 0, 95])
    rgbx.Add([127, 63, 111])
    rgbx.Add([76, 0, 57])
    rgbx.Add([76, 38, 66])
    rgbx.Add([38, 0, 28])
    rgbx.Add([38, 19, 33])
    rgbx.Add([255, 0, 127])
    rgbx.Add([255, 127, 191])
    rgbx.Add([165, 0, 82])
    rgbx.Add([165, 82, 124])
    rgbx.Add([127, 0, 63])
    rgbx.Add([127, 63, 95])
    rgbx.Add([76, 0, 38])
    rgbx.Add([76, 38, 57])
    rgbx.Add([38, 0, 19])
    rgbx.Add([38, 19, 28])
    rgbx.Add([255, 0, 63])
    rgbx.Add([255, 127, 159])
    rgbx.Add([165, 0, 41])
    rgbx.Add([165, 82, 103])
    rgbx.Add([127, 0, 31])
    rgbx.Add([127, 63, 79])
    rgbx.Add([76, 0, 19])
    rgbx.Add([76, 38, 47])
    rgbx.Add([38, 0, 9])
    rgbx.Add([38, 19, 23])
    rgbx.Add([0, 0, 0])
    rgbx.Add([51, 51, 51])
    rgbx.Add([102, 102, 102])
    rgbx.Add([153, 153, 153])
    rgbx.Add([204, 204, 204])
    rgbx.Add([255, 255, 255])
    rgbx.Add([255, 255, 255])

    Return rgbx

End
